{
  "openapi": "3.0.0",
  "info": {
    "description": "Esta es la definición el API MyDot, la capa visible del backend del Servicio MyDot",
    "title": "",
    "version": "1.6.0"
  },
  "servers": [
    {
      "url": "/api"
    }
  ],
  "paths": {
    "/Boton": {
      "get": {
        "parameters": [
          {
            "description": "Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "description": "Los botones de un Cliente",
                    "properties": {
                      "comment": {
                        "description": "Comentario arbitrario en esta entidad",
                        "maxLength": 512,
                        "type": "string"
                      },
                      "id": {
                        "maxLength": 12,
                        "pattern": "[0-9A-F]{12}",
                        "type": "string"
                      },
                      "idCliente": {
                        "description": "ID del cliente que compró este dot",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idDireccion": {
                        "description": "Dirección de despacho asociada a este botón",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idMarca": {
                        "description": "Marca que limita los productos de este botón",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idMediopago": {
                        "description": "Medio de pago asociado a este botón",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "isActive": {
                        "default": true,
                        "type": "boolean"
                      },
                      "nombreMarca": {
                        "description": "Marca del botón",
                        "maxLength": 64,
                        "type": "string"
                      },
                      "saldo": {
                        "default": 5000,
                        "description": "Saldo a favor cargado en el botón",
                        "format": "integer",
                        "maxLength": 5,
                        "maximum": 99999,
                        "minimum": 0,
                        "pattern": "\\d{5}",
                        "type": "number"
                      },
                      "ssid": {
                        "description": "SSID de la wifi asociada al botón",
                        "maxLength": 128,
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "idCliente"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Boton"
        ],
        "deprecated": false,
        "description": "Lista completa de Botones (propios) (filtro opcional).",
        "oldsummary": "Find all instances of the model matched by filter from the data source.",
        "operationId": "Boton.find",
        "summary": "Lista completa de Botones (propios) (filtro opcional)."
      }
    },
    "/Boton/claim": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "ER_DUP_ENTRY",
                      "message": "Se intentó insertar un registro duplicado",
                      "name": "Error",
                      "statusCode": 422
                    }
                  }
                },
                "schema": {
                  "description": "Se ha intentado crear una entidad existente",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "ER_DUP_ENTRY"
          }
        },
        "tags": [
          "Boton"
        ],
        "deprecated": false,
        "description": "Inscribe un botón a nombre del usuario\n(Deprecated) Utilizar ```PATCH /api/Boton/{idBoton}```",
        "oldsummary": "Inscribe un botón a nombre del usuario\n(Deprecated) Utilizar ```PATCH /api/Boton/{idBoton}```",
        "operationId": "Boton.claim",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Los botones de un Cliente",
                "properties": {
                  "comment": {
                    "description": "Comentario arbitrario en esta entidad",
                    "maxLength": 512,
                    "type": "string"
                  },
                  "id": {
                    "maxLength": 12,
                    "pattern": "[0-9A-F]{12}",
                    "type": "string"
                  },
                  "idCliente": {
                    "description": "ID del cliente que compró este dot",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idDireccion": {
                    "description": "Dirección de despacho asociada a este botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idMarca": {
                    "description": "Marca que limita los productos de este botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idMediopago": {
                    "description": "Medio de pago asociado a este botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "isActive": {
                    "default": true,
                    "type": "boolean"
                  },
                  "nombreMarca": {
                    "description": "Marca del botón",
                    "maxLength": 64,
                    "type": "string"
                  },
                  "saldo": {
                    "default": 5000,
                    "description": "Saldo a favor cargado en el botón",
                    "format": "integer",
                    "maxLength": 5,
                    "maximum": 99999,
                    "minimum": 0,
                    "pattern": "\\d{5}",
                    "type": "number"
                  },
                  "ssid": {
                    "description": "SSID de la wifi asociada al botón",
                    "maxLength": 128,
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "idCliente"
                ],
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "additionalProperties": false,
                "description": "Los botones de un Cliente",
                "properties": {
                  "comment": {
                    "description": "Comentario arbitrario en esta entidad",
                    "maxLength": 512,
                    "type": "string"
                  },
                  "id": {
                    "maxLength": 12,
                    "pattern": "[0-9A-F]{12}",
                    "type": "string"
                  },
                  "idCliente": {
                    "description": "ID del cliente que compró este dot",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idDireccion": {
                    "description": "Dirección de despacho asociada a este botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idMarca": {
                    "description": "Marca que limita los productos de este botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idMediopago": {
                    "description": "Medio de pago asociado a este botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "isActive": {
                    "default": true,
                    "type": "boolean"
                  },
                  "nombreMarca": {
                    "description": "Marca del botón",
                    "maxLength": 64,
                    "type": "string"
                  },
                  "saldo": {
                    "default": 5000,
                    "description": "Saldo a favor cargado en el botón",
                    "format": "integer",
                    "maxLength": 5,
                    "maximum": 99999,
                    "minimum": 0,
                    "pattern": "\\d{5}",
                    "type": "number"
                  },
                  "ssid": {
                    "description": "SSID de la wifi asociada al botón",
                    "maxLength": 128,
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "idCliente"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Inscribe un botón a nombre del usuario\n(Deprecated) Utilizar ```PATCH /api/Boton/{idBoton}```"
      }
    },
    "/Boton/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Model id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "description": "Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Los botones de un Cliente",
                  "properties": {
                    "comment": {
                      "description": "Comentario arbitrario en esta entidad",
                      "maxLength": 512,
                      "type": "string"
                    },
                    "id": {
                      "maxLength": 12,
                      "pattern": "[0-9A-F]{12}",
                      "type": "string"
                    },
                    "idCliente": {
                      "description": "ID del cliente que compró este dot",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idDireccion": {
                      "description": "Dirección de despacho asociada a este botón",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idMarca": {
                      "description": "Marca que limita los productos de este botón",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idMediopago": {
                      "description": "Medio de pago asociado a este botón",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "isActive": {
                      "default": true,
                      "type": "boolean"
                    },
                    "nombreMarca": {
                      "description": "Marca del botón",
                      "maxLength": 64,
                      "type": "string"
                    },
                    "saldo": {
                      "default": 5000,
                      "description": "Saldo a favor cargado en el botón",
                      "format": "integer",
                      "maxLength": 5,
                      "maximum": 99999,
                      "minimum": 0,
                      "pattern": "\\d{5}",
                      "type": "number"
                    },
                    "ssid": {
                      "description": "SSID de la wifi asociada al botón",
                      "maxLength": 128,
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "idCliente"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Boton"
        ],
        "deprecated": false,
        "description": "Encuentra un Botón por {{id}} en la BBDD.",
        "oldsummary": "Find a model instance by {{id}} from the data source.",
        "operationId": "Boton.findById",
        "summary": "Encuentra un Botón por {{id}} en la BBDD."
      },
      "patch": {
        "parameters": [
          {
            "description": "Boton id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Los botones de un Cliente",
                  "properties": {
                    "comment": {
                      "description": "Comentario arbitrario en esta entidad",
                      "maxLength": 512,
                      "type": "string"
                    },
                    "id": {
                      "maxLength": 12,
                      "pattern": "[0-9A-F]{12}",
                      "type": "string"
                    },
                    "idCliente": {
                      "description": "ID del cliente que compró este dot",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idDireccion": {
                      "description": "Dirección de despacho asociada a este botón",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idMarca": {
                      "description": "Marca que limita los productos de este botón",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idMediopago": {
                      "description": "Medio de pago asociado a este botón",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "isActive": {
                      "default": true,
                      "type": "boolean"
                    },
                    "nombreMarca": {
                      "description": "Marca del botón",
                      "maxLength": 64,
                      "type": "string"
                    },
                    "saldo": {
                      "default": 5000,
                      "description": "Saldo a favor cargado en el botón",
                      "format": "integer",
                      "maxLength": 5,
                      "maximum": 99999,
                      "minimum": 0,
                      "pattern": "\\d{5}",
                      "type": "number"
                    },
                    "ssid": {
                      "description": "SSID de la wifi asociada al botón",
                      "maxLength": 128,
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "idCliente"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Boton"
        ],
        "deprecated": false,
        "description": "Modifica o crea un Botón y persiste en BBDD.",
        "oldsummary": "Patch attributes for a model instance and persist it into the data source.",
        "operationId": "Boton.prototype.patchAttributes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "An object of model property name/value pairs",
                "additionalProperties": false,
                "properties": {
                  "comment": {
                    "description": "Comentario arbitrario en esta entidad",
                    "maxLength": 512,
                    "type": "string"
                  },
                  "id": {
                    "maxLength": 12,
                    "pattern": "[0-9A-F]{12}",
                    "type": "string"
                  },
                  "idCliente": {
                    "description": "ID del cliente que compró este dot",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idDireccion": {
                    "description": "Dirección de despacho asociada a este botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idMarca": {
                    "description": "Marca que limita los productos de este botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idMediopago": {
                    "description": "Medio de pago asociado a este botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "isActive": {
                    "default": true,
                    "type": "boolean"
                  },
                  "nombreMarca": {
                    "description": "Marca del botón",
                    "maxLength": 64,
                    "type": "string"
                  },
                  "saldo": {
                    "default": 5000,
                    "description": "Saldo a favor cargado en el botón",
                    "format": "integer",
                    "maxLength": 5,
                    "maximum": 99999,
                    "minimum": 0,
                    "pattern": "\\d{5}",
                    "type": "number"
                  },
                  "ssid": {
                    "description": "SSID de la wifi asociada al botón",
                    "maxLength": 128,
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "idCliente"
                ],
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "description": "An object of model property name/value pairs",
                "additionalProperties": false,
                "properties": {
                  "comment": {
                    "description": "Comentario arbitrario en esta entidad",
                    "maxLength": 512,
                    "type": "string"
                  },
                  "id": {
                    "maxLength": 12,
                    "pattern": "[0-9A-F]{12}",
                    "type": "string"
                  },
                  "idCliente": {
                    "description": "ID del cliente que compró este dot",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idDireccion": {
                    "description": "Dirección de despacho asociada a este botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idMarca": {
                    "description": "Marca que limita los productos de este botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idMediopago": {
                    "description": "Medio de pago asociado a este botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "isActive": {
                    "default": true,
                    "type": "boolean"
                  },
                  "nombreMarca": {
                    "description": "Marca del botón",
                    "maxLength": 64,
                    "type": "string"
                  },
                  "saldo": {
                    "default": 5000,
                    "description": "Saldo a favor cargado en el botón",
                    "format": "integer",
                    "maxLength": 5,
                    "maximum": 99999,
                    "minimum": 0,
                    "pattern": "\\d{5}",
                    "type": "number"
                  },
                  "ssid": {
                    "description": "SSID de la wifi asociada al botón",
                    "maxLength": 128,
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "idCliente"
                ],
                "type": "object"
              }
            }
          },
          "description": "An object of model property name/value pairs"
        },
        "summary": "Modifica o crea un Botón y persiste en BBDD."
      }
    },
    "/Boton/{id}/cliente": {
      "get": {
        "parameters": [
          {
            "description": "Boton id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "refresh",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Usuarios finales del servicio myDot. Tienen la App instalada en su dispositivo",
                  "properties": {
                    "apellido": {
                      "maxLength": 128,
                      "type": "string"
                    },
                    "avatar": {
                      "default": "https://static.mydot.app/avatar.png",
                      "maxLength": 512,
                      "type": "string"
                    },
                    "despachoGratis": {
                      "default": 1,
                      "format": "integer",
                      "maxLength": 1,
                      "type": "number"
                    },
                    "email": {
                      "format": "email",
                      "maxLength": 36,
                      "type": "string"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "id_direccion_default": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "id_mediopago_default": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "rut": {
                      "maxLength": 12,
                      "pattern": "\\d{1,2}\\.{0,1}\\d{3}\\.{0,1}\\d{3}-[0-9Kk]",
                      "type": "string"
                    },
                    "telefono": {
                      "maxLength": 15,
                      "pattern": "^56\\d{1} \\d{4} \\d{4}$",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "username": {
                      "maxLength": 128,
                      "type": "string"
                    }
                  },
                  "required": [
                    "email"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Boton"
        ],
        "deprecated": false,
        "description": "Muestra el Cliente asociado a un Botón.",
        "oldsummary": "Capta la relación belongsTo cliente.",
        "operationId": "Boton.prototype.__get__cliente",
        "summary": "Muestra el Cliente asociado a un Botón."
      }
    },
    "/Boton/{id}/direccion": {
      "get": {
        "parameters": [
          {
            "description": "Boton id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "refresh",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Las direcciones de un Cliente",
                  "properties": {
                    "comuna": {
                      "maxLength": 64,
                      "type": "string"
                    },
                    "conCobertura": {
                      "default": false,
                      "type": "boolean"
                    },
                    "direccion": {
                      "maxLength": 65535,
                      "type": "string"
                    },
                    "geom": {
                      "properties": {
                        "lat": {
                          "type": "number"
                        },
                        "lng": {
                          "type": "number"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idCliente": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "instrucciones": {
                      "description": "Indicaciones para llegar, despachar, etc a esta dirección",
                      "type": "string"
                    },
                    "lat": {
                      "default": -70.38,
                      "format": "float",
                      "maxLength": 7,
                      "maximum": 80,
                      "minimum": -80,
                      "type": "number"
                    },
                    "link": {
                      "type": "string"
                    },
                    "lng": {
                      "default": -30.78,
                      "format": "float",
                      "maxLength": 7,
                      "maximum": 80,
                      "minimum": -80,
                      "type": "number"
                    },
                    "numero": {
                      "description": "Si aplica, el depto, oficina, letra o numeración interior",
                      "maxLength": 512,
                      "type": "string"
                    },
                    "pais": {
                      "maxLength": 64,
                      "type": "string"
                    },
                    "region": {
                      "maxLength": 128,
                      "type": "string"
                    }
                  },
                  "required": [
                    "direccion",
                    "lng",
                    "lat"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Boton"
        ],
        "deprecated": false,
        "description": "Muestra la Dirección asociada a un Botón.",
        "oldsummary": "Capta la relación belongsTo direccion.",
        "operationId": "Boton.prototype.__get__direccion",
        "summary": "Muestra la Dirección asociada a un Botón."
      }
    },
    "/Boton/{id}/marca": {
      "get": {
        "parameters": [
          {
            "description": "Boton id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "refresh",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Marcas de producto (pueden ser de un mismo fabricante)",
                  "properties": {
                    "categoriaPrincipal": {
                      "maxLength": 64,
                      "type": "string"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idFabricante": {
                      "format": "integer",
                      "type": "number"
                    },
                    "image": {
                      "maxLength": 512,
                      "type": "string"
                    },
                    "nombreMarca": {
                      "maxLength": 65535,
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "nombreMarca",
                    "idFabricante"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Boton"
        ],
        "deprecated": false,
        "description": "Muestra la Marca de un Botón.",
        "oldsummary": "Capta la relación belongsTo marca.",
        "operationId": "Boton.prototype.__get__marca",
        "summary": "Muestra la Marca de un Botón."
      }
    },
    "/Boton/{id}/mediopago": {
      "get": {
        "parameters": [
          {
            "description": "Boton id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "refresh",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Los medios de pago de un Cliente",
                  "properties": {
                    "alias": {
                      "type": "string"
                    },
                    "creditCardType": {
                      "default": "Visa",
                      "type": "string"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idCliente": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idEstado": {
                      "default": 1,
                      "format": "integer",
                      "maxLength": 2,
                      "type": "number"
                    },
                    "last4CardDigits": {
                      "maxLength": 4,
                      "pattern": "\\d{4}",
                      "type": "string"
                    },
                    "nombreEstado": {
                      "type": "string"
                    },
                    "numero": {
                      "maxLength": 20,
                      "pattern": "\\*{4} \\*{4} \\*{4} \\d{4}",
                      "type": "string"
                    },
                    "ordenCompra": {
                      "type": "string"
                    },
                    "responseCode": {
                      "type": "string"
                    },
                    "responseMessage": {
                      "maxLength": 65535,
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Boton"
        ],
        "deprecated": false,
        "description": "Muestra el Medio de Pago asociado a un Botón.",
        "oldsummary": "Capta la relación belongsTo mediopago.",
        "operationId": "Boton.prototype.__get__mediopago",
        "summary": "Muestra el Medio de Pago asociado a un Botón."
      }
    },
    "/Boton/{id}/pedidos": {
      "get": {
        "parameters": [
          {
            "description": "Boton id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "description": "Pedido generado por Botón o App. Sólo visible para Cliente dueño y Operadores",
                    "properties": {
                      "costoDespacho": {
                        "default": 0,
                        "description": "Costo del despacho, a priori cero para pedidos cuyo neto es mayor a 10.000",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 250000,
                        "minimum": 0,
                        "pattern": "\\d{6}",
                        "type": "number"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "descuento": {
                        "default": 0,
                        "description": "Descuento aplicado por promociones o saldo a favor en el Botón",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 250000,
                        "minimum": 0,
                        "pattern": "\\d{6}",
                        "type": "number"
                      },
                      "descuento_primer_pedido": {
                        "default": 0,
                        "description": "Descuento aplicado sobre el despacho en el primer pedido del cliente",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 250000,
                        "minimum": 0,
                        "pattern": "\\d{6}",
                        "type": "number"
                      },
                      "id": {
                        "format": "integer",
                        "maxLength": 5,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idBoton": {
                        "maxLength": 12,
                        "pattern": "[0-9A-F]{12}",
                        "type": "string"
                      },
                      "idCliente": {
                        "description": "ID del cliente que gatilla el pedido (se lee del token)",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idDireccion": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idEstado": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 9,
                        "minimum": 1,
                        "pattern": "\\d{1}",
                        "type": "number"
                      },
                      "idMarca": {
                        "description": "Marca que limita los productos de este botón",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idMediopago": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idProducto": {
                        "format": "integer",
                        "maxLength": 5,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idTransaccion": {
                        "format": "integer",
                        "maxLength": 16,
                        "maximum": 8565073562300389,
                        "minimum": 1565000000000001,
                        "pattern": "\\d{16}",
                        "type": "number"
                      },
                      "nombreMarca": {
                        "description": "Marca del los productos del pedido",
                        "maxLength": 64,
                        "type": "string"
                      },
                      "precioNeto": {
                        "description": "Precio neto, igual a la suma de los productos que componen el pedido",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 250000,
                        "minimum": 1,
                        "pattern": "\\d{6}",
                        "type": "number"
                      },
                      "precioTotal": {
                        "description": "Precio a pagar por el pedido = (precio neto + costo despacho - descuento)",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 250000,
                        "minimum": 1,
                        "pattern": "\\d{6}",
                        "type": "number"
                      },
                      "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Boton"
        ],
        "deprecated": false,
        "description": "Lista pedidos de un Botón.",
        "oldsummary": "pedidos consultas de Boton.",
        "operationId": "Boton.prototype.__get__pedidos",
        "summary": "Lista pedidos de un Botón."
      },
      "post": {
        "parameters": [
          {
            "description": "Boton id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Pedido generado por Botón o App. Sólo visible para Cliente dueño y Operadores",
                  "properties": {
                    "costoDespacho": {
                      "default": 0,
                      "description": "Costo del despacho, a priori cero para pedidos cuyo neto es mayor a 10.000",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 250000,
                      "minimum": 0,
                      "pattern": "\\d{6}",
                      "type": "number"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "descuento": {
                      "default": 0,
                      "description": "Descuento aplicado por promociones o saldo a favor en el Botón",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 250000,
                      "minimum": 0,
                      "pattern": "\\d{6}",
                      "type": "number"
                    },
                    "descuento_primer_pedido": {
                      "default": 0,
                      "description": "Descuento aplicado sobre el despacho en el primer pedido del cliente",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 250000,
                      "minimum": 0,
                      "pattern": "\\d{6}",
                      "type": "number"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 5,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idBoton": {
                      "maxLength": 12,
                      "pattern": "[0-9A-F]{12}",
                      "type": "string"
                    },
                    "idCliente": {
                      "description": "ID del cliente que gatilla el pedido (se lee del token)",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idDireccion": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idEstado": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 9,
                      "minimum": 1,
                      "pattern": "\\d{1}",
                      "type": "number"
                    },
                    "idMarca": {
                      "description": "Marca que limita los productos de este botón",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idMediopago": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idProducto": {
                      "format": "integer",
                      "maxLength": 5,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idTransaccion": {
                      "format": "integer",
                      "maxLength": 16,
                      "maximum": 8565073562300389,
                      "minimum": 1565000000000001,
                      "pattern": "\\d{16}",
                      "type": "number"
                    },
                    "nombreMarca": {
                      "description": "Marca del los productos del pedido",
                      "maxLength": 64,
                      "type": "string"
                    },
                    "precioNeto": {
                      "description": "Precio neto, igual a la suma de los productos que componen el pedido",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 250000,
                      "minimum": 1,
                      "pattern": "\\d{6}",
                      "type": "number"
                    },
                    "precioTotal": {
                      "description": "Precio a pagar por el pedido = (precio neto + costo despacho - descuento)",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 250000,
                      "minimum": 1,
                      "pattern": "\\d{6}",
                      "type": "number"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "ER_DUP_ENTRY",
                      "message": "Se intentó insertar un registro duplicado",
                      "name": "Error",
                      "statusCode": 422
                    }
                  }
                },
                "schema": {
                  "description": "Se ha intentado crear una entidad existente",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "ER_DUP_ENTRY"
          }
        },
        "tags": [
          "Boton"
        ],
        "deprecated": false,
        "description": "Agrega una entidad pedidos a un Botón.",
        "oldsummary": "Crea una nueva instancia en pedidos de este modelo.",
        "operationId": "Boton.prototype.__create__pedidos",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Pedido generado por Botón o App. Sólo visible para Cliente dueño y Operadores",
                "properties": {
                  "costoDespacho": {
                    "default": 0,
                    "description": "Costo del despacho, a priori cero para pedidos cuyo neto es mayor a 10.000",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 0,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "createdAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "descuento": {
                    "default": 0,
                    "description": "Descuento aplicado por promociones o saldo a favor en el Botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 0,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "descuento_primer_pedido": {
                    "default": 0,
                    "description": "Descuento aplicado sobre el despacho en el primer pedido del cliente",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 0,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 5,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idBoton": {
                    "maxLength": 12,
                    "pattern": "[0-9A-F]{12}",
                    "type": "string"
                  },
                  "idCliente": {
                    "description": "ID del cliente que gatilla el pedido (se lee del token)",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idDireccion": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idEstado": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 9,
                    "minimum": 1,
                    "pattern": "\\d{1}",
                    "type": "number"
                  },
                  "idMarca": {
                    "description": "Marca que limita los productos de este botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idMediopago": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idProducto": {
                    "format": "integer",
                    "maxLength": 5,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idTransaccion": {
                    "format": "integer",
                    "maxLength": 16,
                    "maximum": 8565073562300389,
                    "minimum": 1565000000000001,
                    "pattern": "\\d{16}",
                    "type": "number"
                  },
                  "nombreMarca": {
                    "description": "Marca del los productos del pedido",
                    "maxLength": 64,
                    "type": "string"
                  },
                  "precioNeto": {
                    "description": "Precio neto, igual a la suma de los productos que componen el pedido",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 1,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "precioTotal": {
                    "description": "Precio a pagar por el pedido = (precio neto + costo despacho - descuento)",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 1,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "additionalProperties": false,
                "description": "Pedido generado por Botón o App. Sólo visible para Cliente dueño y Operadores",
                "properties": {
                  "costoDespacho": {
                    "default": 0,
                    "description": "Costo del despacho, a priori cero para pedidos cuyo neto es mayor a 10.000",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 0,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "createdAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "descuento": {
                    "default": 0,
                    "description": "Descuento aplicado por promociones o saldo a favor en el Botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 0,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "descuento_primer_pedido": {
                    "default": 0,
                    "description": "Descuento aplicado sobre el despacho en el primer pedido del cliente",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 0,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 5,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idBoton": {
                    "maxLength": 12,
                    "pattern": "[0-9A-F]{12}",
                    "type": "string"
                  },
                  "idCliente": {
                    "description": "ID del cliente que gatilla el pedido (se lee del token)",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idDireccion": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idEstado": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 9,
                    "minimum": 1,
                    "pattern": "\\d{1}",
                    "type": "number"
                  },
                  "idMarca": {
                    "description": "Marca que limita los productos de este botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idMediopago": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idProducto": {
                    "format": "integer",
                    "maxLength": 5,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idTransaccion": {
                    "format": "integer",
                    "maxLength": 16,
                    "maximum": 8565073562300389,
                    "minimum": 1565000000000001,
                    "pattern": "\\d{16}",
                    "type": "number"
                  },
                  "nombreMarca": {
                    "description": "Marca del los productos del pedido",
                    "maxLength": 64,
                    "type": "string"
                  },
                  "precioNeto": {
                    "description": "Precio neto, igual a la suma de los productos que componen el pedido",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 1,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "precioTotal": {
                    "description": "Precio a pagar por el pedido = (precio neto + costo despacho - descuento)",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 1,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Agrega una entidad pedidos a un Botón."
      }
    },
    "/Boton/{id}/producto_marca": {
      "get": {
        "parameters": [
          {
            "description": "Boton id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Listado de productos",
                  "items": {
                    "additionalProperties": false,
                    "description": "Los productos disponibles para comprar",
                    "properties": {
                      "descripcion": {
                        "maxLength": 65535,
                        "type": "string"
                      },
                      "descuento": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "id": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idCategoria": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "type": "number"
                      },
                      "idMarca": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "type": "number"
                      },
                      "image": {
                        "format": "uri",
                        "maxLength": 512,
                        "type": "string"
                      },
                      "isButton": {
                        "description": "Define si el producto es un botón o un consumible",
                        "type": "boolean"
                      },
                      "nombreMarca": {
                        "description": "Marca del producto",
                        "maxLength": 64,
                        "type": "string"
                      },
                      "nombre_categoria": {
                        "maxLength": 64,
                        "type": "string"
                      },
                      "precioBase": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "sku": {
                        "format": "[A-Z]{5,8}00\\w{2}",
                        "maxLength": 14,
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "descripcion",
                      "idCategoria",
                      "idMarca",
                      "precioBase",
                      "descuento"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Boton"
        ],
        "deprecated": false,
        "description": "Devuelve los productos que se pueden asociar a un botón dado",
        "oldsummary": "Devuelve los productos que se pueden asociar a un botón dado",
        "operationId": "Boton.prototype.producto_marca",
        "summary": "Devuelve los productos que se pueden asociar a un botón dado"
      }
    },
    "/Boton/{id}/productos": {
      "get": {
        "parameters": [
          {
            "description": "Boton id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "description": "Los productos disponibles para comprar",
                    "properties": {
                      "descripcion": {
                        "maxLength": 65535,
                        "type": "string"
                      },
                      "descuento": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "id": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idCategoria": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "type": "number"
                      },
                      "idMarca": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "type": "number"
                      },
                      "image": {
                        "format": "uri",
                        "maxLength": 512,
                        "type": "string"
                      },
                      "isButton": {
                        "description": "Define si el producto es un botón o un consumible",
                        "type": "boolean"
                      },
                      "nombreMarca": {
                        "description": "Marca del producto",
                        "maxLength": 64,
                        "type": "string"
                      },
                      "nombre_categoria": {
                        "maxLength": 64,
                        "type": "string"
                      },
                      "precioBase": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "sku": {
                        "format": "[A-Z]{5,8}00\\w{2}",
                        "maxLength": 14,
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "descripcion",
                      "idCategoria",
                      "idMarca",
                      "precioBase",
                      "descuento"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Boton"
        ],
        "deprecated": false,
        "description": "Lista Productos de un Botón.",
        "oldsummary": "productos consultas de Boton.",
        "operationId": "Boton.prototype.__get__productos",
        "summary": "Lista Productos de un Botón."
      }
    },
    "/Boton/{id}/productos/rel/{fk}": {
      "delete": {
        "parameters": [
          {
            "description": "Boton id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "description": "Clave foránea para productos",
            "in": "path",
            "name": "fk",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Boton"
        ],
        "deprecated": false,
        "description": "Elimina Productos de un Botón.",
        "oldsummary": "Eliminar la relación productos con un elemento por id.",
        "operationId": "Boton.prototype.__unlink__productos",
        "summary": "Elimina Productos de un Botón."
      },
      "put": {
        "parameters": [
          {
            "description": "Boton id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "description": "Clave foránea para productos",
            "in": "path",
            "name": "fk",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Relación entre un botón y los productos que ordena al presionar",
                  "properties": {
                    "cantidad": {
                      "default": 1,
                      "format": "integer",
                      "pattern": "\\d{1}",
                      "type": "number"
                    },
                    "idBoton": {
                      "maxLength": 12,
                      "pattern": "[0-9A-F]{12}",
                      "type": "string"
                    },
                    "idProducto": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    }
                  },
                  "required": [
                    "idBoton",
                    "idProducto"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Boton"
        ],
        "deprecated": false,
        "description": "Añadir Productos de un Botón.",
        "oldsummary": "Añadir un elemento relacionado por id para productos.",
        "operationId": "Boton.prototype.__link__productos",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Relación entre un botón y los productos que ordena al presionar",
                "properties": {
                  "cantidad": {
                    "default": 1,
                    "format": "integer",
                    "pattern": "\\d{1}",
                    "type": "number"
                  },
                  "idBoton": {
                    "maxLength": 12,
                    "pattern": "[0-9A-F]{12}",
                    "type": "string"
                  },
                  "idProducto": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  }
                },
                "required": [
                  "idBoton",
                  "idProducto"
                ],
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "additionalProperties": false,
                "description": "Relación entre un botón y los productos que ordena al presionar",
                "properties": {
                  "cantidad": {
                    "default": 1,
                    "format": "integer",
                    "pattern": "\\d{1}",
                    "type": "number"
                  },
                  "idBoton": {
                    "maxLength": 12,
                    "pattern": "[0-9A-F]{12}",
                    "type": "string"
                  },
                  "idProducto": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  }
                },
                "required": [
                  "idBoton",
                  "idProducto"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Añadir Productos de un Botón."
      }
    },
    "/Boton/{id}/relatedProducts": {
      "get": {
        "parameters": [
          {
            "description": "Boton id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Listado de productos",
                  "items": {
                    "additionalProperties": false,
                    "description": "Los productos disponibles para comprar",
                    "properties": {
                      "descripcion": {
                        "maxLength": 65535,
                        "type": "string"
                      },
                      "descuento": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "id": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idCategoria": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "type": "number"
                      },
                      "idMarca": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "type": "number"
                      },
                      "image": {
                        "format": "uri",
                        "maxLength": 512,
                        "type": "string"
                      },
                      "isButton": {
                        "description": "Define si el producto es un botón o un consumible",
                        "type": "boolean"
                      },
                      "nombreMarca": {
                        "description": "Marca del producto",
                        "maxLength": 64,
                        "type": "string"
                      },
                      "nombre_categoria": {
                        "maxLength": 64,
                        "type": "string"
                      },
                      "precioBase": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "sku": {
                        "format": "[A-Z]{5,8}00\\w{2}",
                        "maxLength": 14,
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "descripcion",
                      "idCategoria",
                      "idMarca",
                      "precioBase",
                      "descuento"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Boton"
        ],
        "deprecated": false,
        "description": "Devuelve los productos que se pueden asociar a un botón dado\n(deprecated: un llamado a GET /api/Boton/:id/producto_marca entrega lo mismo\nevitando la utilización de un método custom",
        "oldsummary": "Devuelve los productos que se pueden asociar a un botón dado\n(deprecated: un llamado a GET /api/Boton/:id/producto_marca entrega lo mismo\nevitando la utilización de un método custom",
        "operationId": "Boton.prototype.relatedProducts",
        "summary": "Devuelve los productos que se pueden asociar a un botón dado\n(deprecated: un llamado a GET /api/Boton/:id/producto_marca entrega lo mismo\nevitando la utilización de un método custom"
      }
    },
    "/Boton/{id}/resumen": {
      "get": {
        "parameters": [
          {
            "description": "Boton id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Boton"
        ],
        "deprecated": false,
        "description": "Lista un resumen de la configuración del botón",
        "oldsummary": "Lista un resumen de la configuración del botón",
        "operationId": "Boton.prototype.resumen",
        "summary": "Lista un resumen de la configuración del botón"
      }
    },
    "/Boton/{id}/ventana_default": {
      "get": {
        "parameters": [
          {
            "description": "Boton id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "refresh",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Franjas horarias de despacho (8:00 a 22:00) y entrega inmediata",
                  "properties": {
                    "costoDespacho": {
                      "format": "integer",
                      "maxLength": 5,
                      "maximum": 99999,
                      "minimum": 0,
                      "pattern": "\\d{1,5}",
                      "type": "number"
                    },
                    "horaFin": {
                      "format": "integer",
                      "type": "number"
                    },
                    "horaInicio": {
                      "format": "integer",
                      "type": "number"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 2,
                      "maximum": 26,
                      "minimum": 1,
                      "type": "number"
                    },
                    "isInmediate": {
                      "default": false,
                      "type": "boolean"
                    },
                    "nombre": {
                      "maxLength": 64,
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "nombre",
                    "horaInicio",
                    "horaFin",
                    "costoDespacho"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Boton"
        ],
        "deprecated": false,
        "description": "Muestra ventana_default un Botón.",
        "oldsummary": "Capta la relación belongsTo ventana_default.",
        "operationId": "Boton.prototype.__get__ventana_default",
        "summary": "Muestra ventana_default un Botón."
      }
    },
    "/Boton/{id}/ventanas_horario": {
      "get": {
        "parameters": [
          {
            "description": "Boton id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "description": "Franjas horarias de despacho (8:00 a 22:00) y entrega inmediata",
                    "properties": {
                      "costoDespacho": {
                        "format": "integer",
                        "maxLength": 5,
                        "maximum": 99999,
                        "minimum": 0,
                        "pattern": "\\d{1,5}",
                        "type": "number"
                      },
                      "horaFin": {
                        "format": "integer",
                        "type": "number"
                      },
                      "horaInicio": {
                        "format": "integer",
                        "type": "number"
                      },
                      "id": {
                        "format": "integer",
                        "maxLength": 2,
                        "maximum": 26,
                        "minimum": 1,
                        "type": "number"
                      },
                      "isInmediate": {
                        "default": false,
                        "type": "boolean"
                      },
                      "nombre": {
                        "maxLength": 64,
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "nombre",
                      "horaInicio",
                      "horaFin",
                      "costoDespacho"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Boton"
        ],
        "deprecated": false,
        "description": "Lista Ventanas Horarias de un Botón.",
        "oldsummary": "ventanas_horario consultas de Boton.",
        "operationId": "Boton.prototype.__get__ventanas_horario",
        "summary": "Lista Ventanas Horarias de un Botón."
      }
    },
    "/Boton/{id}/ventanas_horario/rel/{fk}": {
      "delete": {
        "parameters": [
          {
            "description": "Boton id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "description": "Clave foránea para ventanas_horario",
            "in": "path",
            "name": "fk",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Boton"
        ],
        "deprecated": false,
        "description": "Elimina Ventanas Horarias de un Botón.",
        "oldsummary": "Eliminar la relación ventanas_horario con un elemento por id.",
        "operationId": "Boton.prototype.__unlink__ventanas_horario",
        "summary": "Elimina Ventanas Horarias de un Botón."
      },
      "put": {
        "parameters": [
          {
            "description": "Boton id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "description": "Clave foránea para ventanas_horario",
            "in": "path",
            "name": "fk",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Representa la relación ManyToMany entre botones y ventanas horarias",
                  "properties": {
                    "idBoton": {
                      "maxLength": 12,
                      "pattern": "[0-9A-F]{12}",
                      "type": "string"
                    },
                    "idVentana": {
                      "format": "integer",
                      "maxLength": 2,
                      "maximum": 24,
                      "minimum": 1,
                      "pattern": "\\d{2}",
                      "type": "number"
                    }
                  },
                  "required": [
                    "idBoton",
                    "idVentana"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Boton"
        ],
        "deprecated": false,
        "description": "Añadir Ventanas Horarias de un Botón.",
        "oldsummary": "Añadir un elemento relacionado por id para ventanas_horario.",
        "operationId": "Boton.prototype.__link__ventanas_horario",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Representa la relación ManyToMany entre botones y ventanas horarias",
                "properties": {
                  "idBoton": {
                    "maxLength": 12,
                    "pattern": "[0-9A-F]{12}",
                    "type": "string"
                  },
                  "idVentana": {
                    "format": "integer",
                    "maxLength": 2,
                    "maximum": 24,
                    "minimum": 1,
                    "pattern": "\\d{2}",
                    "type": "number"
                  }
                },
                "required": [
                  "idBoton",
                  "idVentana"
                ],
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "additionalProperties": false,
                "description": "Representa la relación ManyToMany entre botones y ventanas horarias",
                "properties": {
                  "idBoton": {
                    "maxLength": 12,
                    "pattern": "[0-9A-F]{12}",
                    "type": "string"
                  },
                  "idVentana": {
                    "format": "integer",
                    "maxLength": 2,
                    "maximum": 24,
                    "minimum": 1,
                    "pattern": "\\d{2}",
                    "type": "number"
                  }
                },
                "required": [
                  "idBoton",
                  "idVentana"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Añadir Ventanas Horarias de un Botón."
      }
    },
    "/Cliente": {
      "get": {
        "parameters": [
          {
            "description": "Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "description": "Usuarios finales del servicio myDot. Tienen la App instalada en su dispositivo",
                    "properties": {
                      "apellido": {
                        "maxLength": 128,
                        "type": "string"
                      },
                      "avatar": {
                        "default": "https://static.mydot.app/avatar.png",
                        "maxLength": 512,
                        "type": "string"
                      },
                      "despachoGratis": {
                        "default": 1,
                        "format": "integer",
                        "maxLength": 1,
                        "type": "number"
                      },
                      "email": {
                        "format": "email",
                        "maxLength": 36,
                        "type": "string"
                      },
                      "id": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "id_direccion_default": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "id_mediopago_default": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "rut": {
                        "maxLength": 12,
                        "pattern": "\\d{1,2}\\.{0,1}\\d{3}\\.{0,1}\\d{3}-[0-9Kk]",
                        "type": "string"
                      },
                      "telefono": {
                        "maxLength": 15,
                        "pattern": "^56\\d{1} \\d{4} \\d{4}$",
                        "type": "string"
                      },
                      "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "username": {
                        "maxLength": 128,
                        "type": "string"
                      }
                    },
                    "required": [
                      "email"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Lista completa de Clientes (filtro opcional).",
        "oldsummary": "Find all instances of the model matched by filter from the data source.",
        "operationId": "Cliente.find",
        "summary": "Lista completa de Clientes (filtro opcional)."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Usuarios finales del servicio myDot. Tienen la App instalada en su dispositivo",
                  "properties": {
                    "apellido": {
                      "maxLength": 128,
                      "type": "string"
                    },
                    "avatar": {
                      "default": "https://static.mydot.app/avatar.png",
                      "maxLength": 512,
                      "type": "string"
                    },
                    "despachoGratis": {
                      "default": 1,
                      "format": "integer",
                      "maxLength": 1,
                      "type": "number"
                    },
                    "email": {
                      "format": "email",
                      "maxLength": 36,
                      "type": "string"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "id_direccion_default": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "id_mediopago_default": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "rut": {
                      "maxLength": 12,
                      "pattern": "\\d{1,2}\\.{0,1}\\d{3}\\.{0,1}\\d{3}-[0-9Kk]",
                      "type": "string"
                    },
                    "telefono": {
                      "maxLength": 15,
                      "pattern": "^56\\d{1} \\d{4} \\d{4}$",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "username": {
                      "maxLength": 128,
                      "type": "string"
                    }
                  },
                  "required": [
                    "email"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Crea un Cliente y persiste en BBDD.",
        "oldsummary": "Create a new instance of the model and persist it into the data source.",
        "operationId": "Cliente.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Model instance data",
                "additionalProperties": false,
                "properties": {
                  "apellido": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "avatar": {
                    "default": "https://static.mydot.app/avatar.png",
                    "maxLength": 512,
                    "type": "string"
                  },
                  "despachoGratis": {
                    "default": 1,
                    "format": "integer",
                    "maxLength": 1,
                    "type": "number"
                  },
                  "email": {
                    "format": "email",
                    "maxLength": 36,
                    "type": "string"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_direccion_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_mediopago_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "rut": {
                    "maxLength": 12,
                    "pattern": "\\d{1,2}\\.{0,1}\\d{3}\\.{0,1}\\d{3}-[0-9Kk]",
                    "type": "string"
                  },
                  "telefono": {
                    "maxLength": 15,
                    "pattern": "^56\\d{1} \\d{4} \\d{4}$",
                    "type": "string"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "username": {
                    "maxLength": 128,
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ],
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "description": "Model instance data",
                "additionalProperties": false,
                "properties": {
                  "apellido": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "avatar": {
                    "default": "https://static.mydot.app/avatar.png",
                    "maxLength": 512,
                    "type": "string"
                  },
                  "despachoGratis": {
                    "default": 1,
                    "format": "integer",
                    "maxLength": 1,
                    "type": "number"
                  },
                  "email": {
                    "format": "email",
                    "maxLength": 36,
                    "type": "string"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_direccion_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_mediopago_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "rut": {
                    "maxLength": 12,
                    "pattern": "\\d{1,2}\\.{0,1}\\d{3}\\.{0,1}\\d{3}-[0-9Kk]",
                    "type": "string"
                  },
                  "telefono": {
                    "maxLength": 15,
                    "pattern": "^56\\d{1} \\d{4} \\d{4}$",
                    "type": "string"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "username": {
                    "maxLength": 128,
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ],
                "type": "object"
              }
            }
          },
          "description": "Model instance data"
        },
        "summary": "Crea un Cliente y persiste en BBDD."
      }
    },
    "/Cliente/change-password": {
      "post": {
        "responses": {
          "204": {
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Cambia el password de un usuario.",
        "oldsummary": "Change a user's password.",
        "operationId": "Cliente.changePassword",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "newPassword": {
                    "type": "string"
                  },
                  "oldPassword": {
                    "type": "string"
                  }
                },
                "required": [
                  "oldPassword"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Cambia el password de un usuario."
      }
    },
    "/Cliente/confirm": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "redirect",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Cliente Confirma registro siguiendo un link.",
        "oldsummary": "Confirm a user registration with identity verification token.",
        "operationId": "Cliente.confirm",
        "summary": "Cliente Confirma registro siguiendo un link."
      }
    },
    "/Cliente/fbauth": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Inscribe o loguea a un usuario usando facebook",
        "oldsummary": "Inscribe o loguea a un usuario usando facebook",
        "operationId": "Cliente.fbAuth",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Usuarios finales del servicio myDot. Tienen la App instalada en su dispositivo",
                "properties": {
                  "apellido": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "avatar": {
                    "default": "https://static.mydot.app/avatar.png",
                    "maxLength": 512,
                    "type": "string"
                  },
                  "despachoGratis": {
                    "default": 1,
                    "format": "integer",
                    "maxLength": 1,
                    "type": "number"
                  },
                  "email": {
                    "format": "email",
                    "maxLength": 36,
                    "type": "string"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_direccion_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_mediopago_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "rut": {
                    "maxLength": 12,
                    "pattern": "\\d{1,2}\\.{0,1}\\d{3}\\.{0,1}\\d{3}-[0-9Kk]",
                    "type": "string"
                  },
                  "telefono": {
                    "maxLength": 15,
                    "pattern": "^56\\d{1} \\d{4} \\d{4}$",
                    "type": "string"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "username": {
                    "maxLength": 128,
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ],
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "additionalProperties": false,
                "description": "Usuarios finales del servicio myDot. Tienen la App instalada en su dispositivo",
                "properties": {
                  "apellido": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "avatar": {
                    "default": "https://static.mydot.app/avatar.png",
                    "maxLength": 512,
                    "type": "string"
                  },
                  "despachoGratis": {
                    "default": 1,
                    "format": "integer",
                    "maxLength": 1,
                    "type": "number"
                  },
                  "email": {
                    "format": "email",
                    "maxLength": 36,
                    "type": "string"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_direccion_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_mediopago_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "rut": {
                    "maxLength": 12,
                    "pattern": "\\d{1,2}\\.{0,1}\\d{3}\\.{0,1}\\d{3}-[0-9Kk]",
                    "type": "string"
                  },
                  "telefono": {
                    "maxLength": 15,
                    "pattern": "^56\\d{1} \\d{4} \\d{4}$",
                    "type": "string"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "username": {
                    "maxLength": 128,
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Inscribe o loguea a un usuario usando facebook"
      }
    },
    "/Cliente/isButtonClaimed/{idBoton}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "idBoton",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Verifica si un botón ya ha sido inscrito por este u otro cliente",
        "oldsummary": "Verifica si un botón ya ha sido inscrito por este u otro cliente",
        "operationId": "Cliente.isButtonClaimed",
        "summary": "Verifica si un botón ya ha sido inscrito por este u otro cliente"
      }
    },
    "/Cliente/login": {
      "post": {
        "parameters": [
          {
            "description": "Related objects to include in the response. See the description of return value for more details.",
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "El cuerpo de respuesta contiene propiedades de la AccessToken creada durante el inicio de la sesión.\nDependiendo del valor del parámetro `include`, el cuerpo puede contener propiedades adicionales:\n\n  - `user` - `U+007BUserU+007D` - Datos del usuario conectado actualmente. (`include=user`)\n\n",
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "USERNAME_EMAIL_REQUIRED",
                      "message": "username o email es obligatorio",
                      "name": "Error",
                      "statusCode": 400
                    }
                  }
                },
                "schema": {
                  "description": "Petición tiene error de sintaxis",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "BAD_REQUEST"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "LOGIN_FAILED",
                      "message": "El inicio de sesión ha fallado",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Se intentó acceder un modelo sobre el cual no se tiene permiso",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "LOGIN_FAILED"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Cliente Inicia sesión usando email y password.",
        "oldsummary": "Login a user with username/email and password.",
        "operationId": "Cliente.login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Cliente Inicia sesión usando email y password."
      }
    },
    "/Cliente/logout": {
      "post": {
        "responses": {
          "204": {
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Cliente Cierra sesión. Requiere AccessToken.",
        "oldsummary": "Logout a user with access token.",
        "operationId": "Cliente.logout",
        "summary": "Cliente Cierra sesión. Requiere AccessToken."
      }
    },
    "/Cliente/reset": {
      "post": {
        "responses": {
          "204": {
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Reset password for a user with email.",
        "oldsummary": "Reset password for a user with email.",
        "operationId": "Cliente.resetPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "summary": "Reset password for a user with email."
      }
    },
    "/Cliente/reset-password": {
      "post": {
        "responses": {
          "204": {
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Cliente Restablece password de un usuario mediante correoy link único.",
        "oldsummary": "Reset user's password via a password-reset token.",
        "operationId": "Cliente.setPassword",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "newPassword": {
                    "type": "string"
                  }
                },
                "required": [
                  "newPassword"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Cliente Restablece password de un usuario mediante correoy link único."
      }
    },
    "/Cliente/ventanasDireccion/{idDireccion}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "idDireccion",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "description": "Franjas horarias de despacho (8:00 a 22:00) y entrega inmediata",
                    "properties": {
                      "costoDespacho": {
                        "format": "integer",
                        "maxLength": 5,
                        "maximum": 99999,
                        "minimum": 0,
                        "pattern": "\\d{1,5}",
                        "type": "number"
                      },
                      "horaFin": {
                        "format": "integer",
                        "type": "number"
                      },
                      "horaInicio": {
                        "format": "integer",
                        "type": "number"
                      },
                      "id": {
                        "format": "integer",
                        "maxLength": 2,
                        "maximum": 26,
                        "minimum": 1,
                        "type": "number"
                      },
                      "isInmediate": {
                        "default": false,
                        "type": "boolean"
                      },
                      "nombre": {
                        "maxLength": 64,
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "nombre",
                      "horaInicio",
                      "horaFin",
                      "costoDespacho"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Lista ventanas horarias con el costo de despacho para una dirección específica",
        "oldsummary": "Lista ventanas horarias con el costo de despacho para una dirección específica",
        "operationId": "Cliente.ventanasDireccion",
        "summary": "Lista ventanas horarias con el costo de despacho para una dirección específica"
      }
    },
    "/Cliente/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Model id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "description": "Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Usuarios finales del servicio myDot. Tienen la App instalada en su dispositivo",
                  "properties": {
                    "apellido": {
                      "maxLength": 128,
                      "type": "string"
                    },
                    "avatar": {
                      "default": "https://static.mydot.app/avatar.png",
                      "maxLength": 512,
                      "type": "string"
                    },
                    "despachoGratis": {
                      "default": 1,
                      "format": "integer",
                      "maxLength": 1,
                      "type": "number"
                    },
                    "email": {
                      "format": "email",
                      "maxLength": 36,
                      "type": "string"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "id_direccion_default": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "id_mediopago_default": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "rut": {
                      "maxLength": 12,
                      "pattern": "\\d{1,2}\\.{0,1}\\d{3}\\.{0,1}\\d{3}-[0-9Kk]",
                      "type": "string"
                    },
                    "telefono": {
                      "maxLength": 15,
                      "pattern": "^56\\d{1} \\d{4} \\d{4}$",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "username": {
                      "maxLength": 128,
                      "type": "string"
                    }
                  },
                  "required": [
                    "email"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Encuentra un Cliente por {{id}} en la BBDD.",
        "oldsummary": "Find a model instance by {{id}} from the data source.",
        "operationId": "Cliente.findById",
        "summary": "Encuentra un Cliente por {{id}} en la BBDD."
      },
      "patch": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Usuarios finales del servicio myDot. Tienen la App instalada en su dispositivo",
                  "properties": {
                    "apellido": {
                      "maxLength": 128,
                      "type": "string"
                    },
                    "avatar": {
                      "default": "https://static.mydot.app/avatar.png",
                      "maxLength": 512,
                      "type": "string"
                    },
                    "despachoGratis": {
                      "default": 1,
                      "format": "integer",
                      "maxLength": 1,
                      "type": "number"
                    },
                    "email": {
                      "format": "email",
                      "maxLength": 36,
                      "type": "string"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "id_direccion_default": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "id_mediopago_default": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "rut": {
                      "maxLength": 12,
                      "pattern": "\\d{1,2}\\.{0,1}\\d{3}\\.{0,1}\\d{3}-[0-9Kk]",
                      "type": "string"
                    },
                    "telefono": {
                      "maxLength": 15,
                      "pattern": "^56\\d{1} \\d{4} \\d{4}$",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "username": {
                      "maxLength": 128,
                      "type": "string"
                    }
                  },
                  "required": [
                    "email"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Modifica o crea un Cliente y persiste en BBDD.",
        "oldsummary": "Patch attributes for a model instance and persist it into the data source.",
        "operationId": "Cliente.prototype.patchAttributes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "An object of model property name/value pairs",
                "additionalProperties": false,
                "properties": {
                  "apellido": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "avatar": {
                    "default": "https://static.mydot.app/avatar.png",
                    "maxLength": 512,
                    "type": "string"
                  },
                  "despachoGratis": {
                    "default": 1,
                    "format": "integer",
                    "maxLength": 1,
                    "type": "number"
                  },
                  "email": {
                    "format": "email",
                    "maxLength": 36,
                    "type": "string"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_direccion_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_mediopago_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "rut": {
                    "maxLength": 12,
                    "pattern": "\\d{1,2}\\.{0,1}\\d{3}\\.{0,1}\\d{3}-[0-9Kk]",
                    "type": "string"
                  },
                  "telefono": {
                    "maxLength": 15,
                    "pattern": "^56\\d{1} \\d{4} \\d{4}$",
                    "type": "string"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "username": {
                    "maxLength": 128,
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ],
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "description": "An object of model property name/value pairs",
                "additionalProperties": false,
                "properties": {
                  "apellido": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "avatar": {
                    "default": "https://static.mydot.app/avatar.png",
                    "maxLength": 512,
                    "type": "string"
                  },
                  "despachoGratis": {
                    "default": 1,
                    "format": "integer",
                    "maxLength": 1,
                    "type": "number"
                  },
                  "email": {
                    "format": "email",
                    "maxLength": 36,
                    "type": "string"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_direccion_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_mediopago_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "rut": {
                    "maxLength": 12,
                    "pattern": "\\d{1,2}\\.{0,1}\\d{3}\\.{0,1}\\d{3}-[0-9Kk]",
                    "type": "string"
                  },
                  "telefono": {
                    "maxLength": 15,
                    "pattern": "^56\\d{1} \\d{4} \\d{4}$",
                    "type": "string"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "username": {
                    "maxLength": 128,
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ],
                "type": "object"
              }
            }
          },
          "description": "An object of model property name/value pairs"
        },
        "summary": "Modifica o crea un Cliente y persiste en BBDD."
      }
    },
    "/Cliente/{id}/botones": {
      "get": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "description": "Los botones de un Cliente",
                    "properties": {
                      "comment": {
                        "description": "Comentario arbitrario en esta entidad",
                        "maxLength": 512,
                        "type": "string"
                      },
                      "id": {
                        "maxLength": 12,
                        "pattern": "[0-9A-F]{12}",
                        "type": "string"
                      },
                      "idCliente": {
                        "description": "ID del cliente que compró este dot",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idDireccion": {
                        "description": "Dirección de despacho asociada a este botón",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idMarca": {
                        "description": "Marca que limita los productos de este botón",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idMediopago": {
                        "description": "Medio de pago asociado a este botón",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "isActive": {
                        "default": true,
                        "type": "boolean"
                      },
                      "nombreMarca": {
                        "description": "Marca del botón",
                        "maxLength": 64,
                        "type": "string"
                      },
                      "saldo": {
                        "default": 5000,
                        "description": "Saldo a favor cargado en el botón",
                        "format": "integer",
                        "maxLength": 5,
                        "maximum": 99999,
                        "minimum": 0,
                        "pattern": "\\d{5}",
                        "type": "number"
                      },
                      "ssid": {
                        "description": "SSID de la wifi asociada al botón",
                        "maxLength": 128,
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "idCliente"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Lista botones de un Cliente.",
        "oldsummary": "botones consultas de Cliente.",
        "operationId": "Cliente.prototype.__get__botones",
        "summary": "Lista botones de un Cliente."
      }
    },
    "/Cliente/{id}/botones/{fk}": {
      "get": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "description": "Clave foránea para botones",
            "in": "path",
            "name": "fk",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Los botones de un Cliente",
                  "properties": {
                    "comment": {
                      "description": "Comentario arbitrario en esta entidad",
                      "maxLength": 512,
                      "type": "string"
                    },
                    "id": {
                      "maxLength": 12,
                      "pattern": "[0-9A-F]{12}",
                      "type": "string"
                    },
                    "idCliente": {
                      "description": "ID del cliente que compró este dot",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idDireccion": {
                      "description": "Dirección de despacho asociada a este botón",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idMarca": {
                      "description": "Marca que limita los productos de este botón",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idMediopago": {
                      "description": "Medio de pago asociado a este botón",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "isActive": {
                      "default": true,
                      "type": "boolean"
                    },
                    "nombreMarca": {
                      "description": "Marca del botón",
                      "maxLength": 64,
                      "type": "string"
                    },
                    "saldo": {
                      "default": 5000,
                      "description": "Saldo a favor cargado en el botón",
                      "format": "integer",
                      "maxLength": 5,
                      "maximum": 99999,
                      "minimum": 0,
                      "pattern": "\\d{5}",
                      "type": "number"
                    },
                    "ssid": {
                      "description": "SSID de la wifi asociada al botón",
                      "maxLength": 128,
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "idCliente"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Buscar botones de un Cliente.",
        "oldsummary": "Buscar un elemento relacionado por id para botones.",
        "operationId": "Cliente.prototype.__findById__botones",
        "summary": "Buscar botones de un Cliente."
      },
      "put": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "description": "Clave foránea para botones",
            "in": "path",
            "name": "fk",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Los botones de un Cliente",
                  "properties": {
                    "comment": {
                      "description": "Comentario arbitrario en esta entidad",
                      "maxLength": 512,
                      "type": "string"
                    },
                    "id": {
                      "maxLength": 12,
                      "pattern": "[0-9A-F]{12}",
                      "type": "string"
                    },
                    "idCliente": {
                      "description": "ID del cliente que compró este dot",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idDireccion": {
                      "description": "Dirección de despacho asociada a este botón",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idMarca": {
                      "description": "Marca que limita los productos de este botón",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idMediopago": {
                      "description": "Medio de pago asociado a este botón",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "isActive": {
                      "default": true,
                      "type": "boolean"
                    },
                    "nombreMarca": {
                      "description": "Marca del botón",
                      "maxLength": 64,
                      "type": "string"
                    },
                    "saldo": {
                      "default": 5000,
                      "description": "Saldo a favor cargado en el botón",
                      "format": "integer",
                      "maxLength": 5,
                      "maximum": 99999,
                      "minimum": 0,
                      "pattern": "\\d{5}",
                      "type": "number"
                    },
                    "ssid": {
                      "description": "SSID de la wifi asociada al botón",
                      "maxLength": 128,
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "idCliente"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Actualizar botones de un Cliente.",
        "oldsummary": "Actualizar un elemento relacionado por id para botones.",
        "operationId": "Cliente.prototype.__updateById__botones",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Los botones de un Cliente",
                "properties": {
                  "comment": {
                    "description": "Comentario arbitrario en esta entidad",
                    "maxLength": 512,
                    "type": "string"
                  },
                  "id": {
                    "maxLength": 12,
                    "pattern": "[0-9A-F]{12}",
                    "type": "string"
                  },
                  "idCliente": {
                    "description": "ID del cliente que compró este dot",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idDireccion": {
                    "description": "Dirección de despacho asociada a este botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idMarca": {
                    "description": "Marca que limita los productos de este botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idMediopago": {
                    "description": "Medio de pago asociado a este botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "isActive": {
                    "default": true,
                    "type": "boolean"
                  },
                  "nombreMarca": {
                    "description": "Marca del botón",
                    "maxLength": 64,
                    "type": "string"
                  },
                  "saldo": {
                    "default": 5000,
                    "description": "Saldo a favor cargado en el botón",
                    "format": "integer",
                    "maxLength": 5,
                    "maximum": 99999,
                    "minimum": 0,
                    "pattern": "\\d{5}",
                    "type": "number"
                  },
                  "ssid": {
                    "description": "SSID de la wifi asociada al botón",
                    "maxLength": 128,
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "idCliente"
                ],
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "additionalProperties": false,
                "description": "Los botones de un Cliente",
                "properties": {
                  "comment": {
                    "description": "Comentario arbitrario en esta entidad",
                    "maxLength": 512,
                    "type": "string"
                  },
                  "id": {
                    "maxLength": 12,
                    "pattern": "[0-9A-F]{12}",
                    "type": "string"
                  },
                  "idCliente": {
                    "description": "ID del cliente que compró este dot",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idDireccion": {
                    "description": "Dirección de despacho asociada a este botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idMarca": {
                    "description": "Marca que limita los productos de este botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idMediopago": {
                    "description": "Medio de pago asociado a este botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "isActive": {
                    "default": true,
                    "type": "boolean"
                  },
                  "nombreMarca": {
                    "description": "Marca del botón",
                    "maxLength": 64,
                    "type": "string"
                  },
                  "saldo": {
                    "default": 5000,
                    "description": "Saldo a favor cargado en el botón",
                    "format": "integer",
                    "maxLength": 5,
                    "maximum": 99999,
                    "minimum": 0,
                    "pattern": "\\d{5}",
                    "type": "number"
                  },
                  "ssid": {
                    "description": "SSID de la wifi asociada al botón",
                    "maxLength": 128,
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "idCliente"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Actualizar botones de un Cliente."
      }
    },
    "/Cliente/{id}/direccion_default": {
      "get": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "refresh",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Las direcciones de un Cliente",
                  "properties": {
                    "comuna": {
                      "maxLength": 64,
                      "type": "string"
                    },
                    "conCobertura": {
                      "default": false,
                      "type": "boolean"
                    },
                    "direccion": {
                      "maxLength": 65535,
                      "type": "string"
                    },
                    "geom": {
                      "properties": {
                        "lat": {
                          "type": "number"
                        },
                        "lng": {
                          "type": "number"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idCliente": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "instrucciones": {
                      "description": "Indicaciones para llegar, despachar, etc a esta dirección",
                      "type": "string"
                    },
                    "lat": {
                      "default": -70.38,
                      "format": "float",
                      "maxLength": 7,
                      "maximum": 80,
                      "minimum": -80,
                      "type": "number"
                    },
                    "link": {
                      "type": "string"
                    },
                    "lng": {
                      "default": -30.78,
                      "format": "float",
                      "maxLength": 7,
                      "maximum": 80,
                      "minimum": -80,
                      "type": "number"
                    },
                    "numero": {
                      "description": "Si aplica, el depto, oficina, letra o numeración interior",
                      "maxLength": 512,
                      "type": "string"
                    },
                    "pais": {
                      "maxLength": 64,
                      "type": "string"
                    },
                    "region": {
                      "maxLength": 128,
                      "type": "string"
                    }
                  },
                  "required": [
                    "direccion",
                    "lng",
                    "lat"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Muestra la Dirección por Defecto de un Cliente.",
        "oldsummary": "Capta la relación belongsTo direccion_default.",
        "operationId": "Cliente.prototype.__get__direccion_default",
        "summary": "Muestra la Dirección por Defecto de un Cliente."
      }
    },
    "/Cliente/{id}/direcciones": {
      "get": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "description": "Las direcciones de un Cliente",
                    "properties": {
                      "comuna": {
                        "maxLength": 64,
                        "type": "string"
                      },
                      "conCobertura": {
                        "default": false,
                        "type": "boolean"
                      },
                      "direccion": {
                        "maxLength": 65535,
                        "type": "string"
                      },
                      "geom": {
                        "properties": {
                          "lat": {
                            "type": "number"
                          },
                          "lng": {
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idCliente": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "instrucciones": {
                        "description": "Indicaciones para llegar, despachar, etc a esta dirección",
                        "type": "string"
                      },
                      "lat": {
                        "default": -70.38,
                        "format": "float",
                        "maxLength": 7,
                        "maximum": 80,
                        "minimum": -80,
                        "type": "number"
                      },
                      "link": {
                        "type": "string"
                      },
                      "lng": {
                        "default": -30.78,
                        "format": "float",
                        "maxLength": 7,
                        "maximum": 80,
                        "minimum": -80,
                        "type": "number"
                      },
                      "numero": {
                        "description": "Si aplica, el depto, oficina, letra o numeración interior",
                        "maxLength": 512,
                        "type": "string"
                      },
                      "pais": {
                        "maxLength": 64,
                        "type": "string"
                      },
                      "region": {
                        "maxLength": 128,
                        "type": "string"
                      }
                    },
                    "required": [
                      "direccion",
                      "lng",
                      "lat"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Lista direcciones de un Cliente.",
        "oldsummary": "direcciones consultas de Cliente.",
        "operationId": "Cliente.prototype.__get__direcciones",
        "summary": "Lista direcciones de un Cliente."
      },
      "post": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Las direcciones de un Cliente",
                  "properties": {
                    "comuna": {
                      "maxLength": 64,
                      "type": "string"
                    },
                    "conCobertura": {
                      "default": false,
                      "type": "boolean"
                    },
                    "direccion": {
                      "maxLength": 65535,
                      "type": "string"
                    },
                    "geom": {
                      "properties": {
                        "lat": {
                          "type": "number"
                        },
                        "lng": {
                          "type": "number"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idCliente": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "instrucciones": {
                      "description": "Indicaciones para llegar, despachar, etc a esta dirección",
                      "type": "string"
                    },
                    "lat": {
                      "default": -70.38,
                      "format": "float",
                      "maxLength": 7,
                      "maximum": 80,
                      "minimum": -80,
                      "type": "number"
                    },
                    "link": {
                      "type": "string"
                    },
                    "lng": {
                      "default": -30.78,
                      "format": "float",
                      "maxLength": 7,
                      "maximum": 80,
                      "minimum": -80,
                      "type": "number"
                    },
                    "numero": {
                      "description": "Si aplica, el depto, oficina, letra o numeración interior",
                      "maxLength": 512,
                      "type": "string"
                    },
                    "pais": {
                      "maxLength": 64,
                      "type": "string"
                    },
                    "region": {
                      "maxLength": 128,
                      "type": "string"
                    }
                  },
                  "required": [
                    "direccion",
                    "lng",
                    "lat"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Agrega una entidad direcciones a un Cliente.",
        "oldsummary": "Crea una nueva instancia en direcciones de este modelo.",
        "operationId": "Cliente.prototype.__create__direcciones",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Las direcciones de un Cliente",
                "properties": {
                  "comuna": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "conCobertura": {
                    "default": false,
                    "type": "boolean"
                  },
                  "direccion": {
                    "maxLength": 65535,
                    "type": "string"
                  },
                  "geom": {
                    "properties": {
                      "lat": {
                        "type": "number"
                      },
                      "lng": {
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idCliente": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "instrucciones": {
                    "description": "Indicaciones para llegar, despachar, etc a esta dirección",
                    "type": "string"
                  },
                  "lat": {
                    "default": -70.38,
                    "format": "float",
                    "maxLength": 7,
                    "maximum": 80,
                    "minimum": -80,
                    "type": "number"
                  },
                  "link": {
                    "type": "string"
                  },
                  "lng": {
                    "default": -30.78,
                    "format": "float",
                    "maxLength": 7,
                    "maximum": 80,
                    "minimum": -80,
                    "type": "number"
                  },
                  "numero": {
                    "description": "Si aplica, el depto, oficina, letra o numeración interior",
                    "maxLength": 512,
                    "type": "string"
                  },
                  "pais": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "region": {
                    "maxLength": 128,
                    "type": "string"
                  }
                },
                "required": [
                  "direccion",
                  "lng",
                  "lat"
                ],
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "additionalProperties": false,
                "description": "Las direcciones de un Cliente",
                "properties": {
                  "comuna": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "conCobertura": {
                    "default": false,
                    "type": "boolean"
                  },
                  "direccion": {
                    "maxLength": 65535,
                    "type": "string"
                  },
                  "geom": {
                    "properties": {
                      "lat": {
                        "type": "number"
                      },
                      "lng": {
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idCliente": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "instrucciones": {
                    "description": "Indicaciones para llegar, despachar, etc a esta dirección",
                    "type": "string"
                  },
                  "lat": {
                    "default": -70.38,
                    "format": "float",
                    "maxLength": 7,
                    "maximum": 80,
                    "minimum": -80,
                    "type": "number"
                  },
                  "link": {
                    "type": "string"
                  },
                  "lng": {
                    "default": -30.78,
                    "format": "float",
                    "maxLength": 7,
                    "maximum": 80,
                    "minimum": -80,
                    "type": "number"
                  },
                  "numero": {
                    "description": "Si aplica, el depto, oficina, letra o numeración interior",
                    "maxLength": 512,
                    "type": "string"
                  },
                  "pais": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "region": {
                    "maxLength": 128,
                    "type": "string"
                  }
                },
                "required": [
                  "direccion",
                  "lng",
                  "lat"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Agrega una entidad direcciones a un Cliente."
      }
    },
    "/Cliente/{id}/direcciones/{fk}": {
      "delete": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "description": "Clave foránea para direcciones",
            "in": "path",
            "name": "fk",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Suprimir direcciones de un Cliente.",
        "oldsummary": "Suprimir un elemento relacionado por id para direcciones.",
        "operationId": "Cliente.prototype.__destroyById__direcciones",
        "summary": "Suprimir direcciones de un Cliente."
      },
      "get": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "description": "Clave foránea para direcciones",
            "in": "path",
            "name": "fk",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Las direcciones de un Cliente",
                  "properties": {
                    "comuna": {
                      "maxLength": 64,
                      "type": "string"
                    },
                    "conCobertura": {
                      "default": false,
                      "type": "boolean"
                    },
                    "direccion": {
                      "maxLength": 65535,
                      "type": "string"
                    },
                    "geom": {
                      "properties": {
                        "lat": {
                          "type": "number"
                        },
                        "lng": {
                          "type": "number"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idCliente": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "instrucciones": {
                      "description": "Indicaciones para llegar, despachar, etc a esta dirección",
                      "type": "string"
                    },
                    "lat": {
                      "default": -70.38,
                      "format": "float",
                      "maxLength": 7,
                      "maximum": 80,
                      "minimum": -80,
                      "type": "number"
                    },
                    "link": {
                      "type": "string"
                    },
                    "lng": {
                      "default": -30.78,
                      "format": "float",
                      "maxLength": 7,
                      "maximum": 80,
                      "minimum": -80,
                      "type": "number"
                    },
                    "numero": {
                      "description": "Si aplica, el depto, oficina, letra o numeración interior",
                      "maxLength": 512,
                      "type": "string"
                    },
                    "pais": {
                      "maxLength": 64,
                      "type": "string"
                    },
                    "region": {
                      "maxLength": 128,
                      "type": "string"
                    }
                  },
                  "required": [
                    "direccion",
                    "lng",
                    "lat"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Buscar direcciones de un Cliente.",
        "oldsummary": "Buscar un elemento relacionado por id para direcciones.",
        "operationId": "Cliente.prototype.__findById__direcciones",
        "summary": "Buscar direcciones de un Cliente."
      },
      "put": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "description": "Clave foránea para direcciones",
            "in": "path",
            "name": "fk",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Las direcciones de un Cliente",
                  "properties": {
                    "comuna": {
                      "maxLength": 64,
                      "type": "string"
                    },
                    "conCobertura": {
                      "default": false,
                      "type": "boolean"
                    },
                    "direccion": {
                      "maxLength": 65535,
                      "type": "string"
                    },
                    "geom": {
                      "properties": {
                        "lat": {
                          "type": "number"
                        },
                        "lng": {
                          "type": "number"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idCliente": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "instrucciones": {
                      "description": "Indicaciones para llegar, despachar, etc a esta dirección",
                      "type": "string"
                    },
                    "lat": {
                      "default": -70.38,
                      "format": "float",
                      "maxLength": 7,
                      "maximum": 80,
                      "minimum": -80,
                      "type": "number"
                    },
                    "link": {
                      "type": "string"
                    },
                    "lng": {
                      "default": -30.78,
                      "format": "float",
                      "maxLength": 7,
                      "maximum": 80,
                      "minimum": -80,
                      "type": "number"
                    },
                    "numero": {
                      "description": "Si aplica, el depto, oficina, letra o numeración interior",
                      "maxLength": 512,
                      "type": "string"
                    },
                    "pais": {
                      "maxLength": 64,
                      "type": "string"
                    },
                    "region": {
                      "maxLength": 128,
                      "type": "string"
                    }
                  },
                  "required": [
                    "direccion",
                    "lng",
                    "lat"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Actualizar direcciones de un Cliente.",
        "oldsummary": "Actualizar un elemento relacionado por id para direcciones.",
        "operationId": "Cliente.prototype.__updateById__direcciones",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Las direcciones de un Cliente",
                "properties": {
                  "comuna": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "conCobertura": {
                    "default": false,
                    "type": "boolean"
                  },
                  "direccion": {
                    "maxLength": 65535,
                    "type": "string"
                  },
                  "geom": {
                    "properties": {
                      "lat": {
                        "type": "number"
                      },
                      "lng": {
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idCliente": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "instrucciones": {
                    "description": "Indicaciones para llegar, despachar, etc a esta dirección",
                    "type": "string"
                  },
                  "lat": {
                    "default": -70.38,
                    "format": "float",
                    "maxLength": 7,
                    "maximum": 80,
                    "minimum": -80,
                    "type": "number"
                  },
                  "link": {
                    "type": "string"
                  },
                  "lng": {
                    "default": -30.78,
                    "format": "float",
                    "maxLength": 7,
                    "maximum": 80,
                    "minimum": -80,
                    "type": "number"
                  },
                  "numero": {
                    "description": "Si aplica, el depto, oficina, letra o numeración interior",
                    "maxLength": 512,
                    "type": "string"
                  },
                  "pais": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "region": {
                    "maxLength": 128,
                    "type": "string"
                  }
                },
                "required": [
                  "direccion",
                  "lng",
                  "lat"
                ],
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "additionalProperties": false,
                "description": "Las direcciones de un Cliente",
                "properties": {
                  "comuna": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "conCobertura": {
                    "default": false,
                    "type": "boolean"
                  },
                  "direccion": {
                    "maxLength": 65535,
                    "type": "string"
                  },
                  "geom": {
                    "properties": {
                      "lat": {
                        "type": "number"
                      },
                      "lng": {
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idCliente": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "instrucciones": {
                    "description": "Indicaciones para llegar, despachar, etc a esta dirección",
                    "type": "string"
                  },
                  "lat": {
                    "default": -70.38,
                    "format": "float",
                    "maxLength": 7,
                    "maximum": 80,
                    "minimum": -80,
                    "type": "number"
                  },
                  "link": {
                    "type": "string"
                  },
                  "lng": {
                    "default": -30.78,
                    "format": "float",
                    "maxLength": 7,
                    "maximum": 80,
                    "minimum": -80,
                    "type": "number"
                  },
                  "numero": {
                    "description": "Si aplica, el depto, oficina, letra o numeración interior",
                    "maxLength": 512,
                    "type": "string"
                  },
                  "pais": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "region": {
                    "maxLength": 128,
                    "type": "string"
                  }
                },
                "required": [
                  "direccion",
                  "lng",
                  "lat"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Actualizar direcciones de un Cliente."
      }
    },
    "/Cliente/{id}/mediopago_default": {
      "get": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "refresh",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Los medios de pago de un Cliente",
                  "properties": {
                    "alias": {
                      "type": "string"
                    },
                    "creditCardType": {
                      "default": "Visa",
                      "type": "string"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idCliente": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idEstado": {
                      "default": 1,
                      "format": "integer",
                      "maxLength": 2,
                      "type": "number"
                    },
                    "last4CardDigits": {
                      "maxLength": 4,
                      "pattern": "\\d{4}",
                      "type": "string"
                    },
                    "nombreEstado": {
                      "type": "string"
                    },
                    "numero": {
                      "maxLength": 20,
                      "pattern": "\\*{4} \\*{4} \\*{4} \\d{4}",
                      "type": "string"
                    },
                    "ordenCompra": {
                      "type": "string"
                    },
                    "responseCode": {
                      "type": "string"
                    },
                    "responseMessage": {
                      "maxLength": 65535,
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Muestra el Medio de Pago por defecto de un Cliente.",
        "oldsummary": "Capta la relación belongsTo mediopago_default.",
        "operationId": "Cliente.prototype.__get__mediopago_default",
        "summary": "Muestra el Medio de Pago por defecto de un Cliente."
      }
    },
    "/Cliente/{id}/mediospago": {
      "get": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "description": "Los medios de pago de un Cliente",
                    "properties": {
                      "alias": {
                        "type": "string"
                      },
                      "creditCardType": {
                        "default": "Visa",
                        "type": "string"
                      },
                      "id": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idCliente": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idEstado": {
                        "default": 1,
                        "format": "integer",
                        "maxLength": 2,
                        "type": "number"
                      },
                      "last4CardDigits": {
                        "maxLength": 4,
                        "pattern": "\\d{4}",
                        "type": "string"
                      },
                      "nombreEstado": {
                        "type": "string"
                      },
                      "numero": {
                        "maxLength": 20,
                        "pattern": "\\*{4} \\*{4} \\*{4} \\d{4}",
                        "type": "string"
                      },
                      "ordenCompra": {
                        "type": "string"
                      },
                      "responseCode": {
                        "type": "string"
                      },
                      "responseMessage": {
                        "maxLength": 65535,
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Lista Medios de Pago de un Cliente.",
        "oldsummary": "mediospago consultas de Cliente.",
        "operationId": "Cliente.prototype.__get__mediospago",
        "summary": "Lista Medios de Pago de un Cliente."
      },
      "post": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Los medios de pago de un Cliente",
                  "properties": {
                    "alias": {
                      "type": "string"
                    },
                    "creditCardType": {
                      "default": "Visa",
                      "type": "string"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idCliente": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idEstado": {
                      "default": 1,
                      "format": "integer",
                      "maxLength": 2,
                      "type": "number"
                    },
                    "last4CardDigits": {
                      "maxLength": 4,
                      "pattern": "\\d{4}",
                      "type": "string"
                    },
                    "nombreEstado": {
                      "type": "string"
                    },
                    "numero": {
                      "maxLength": 20,
                      "pattern": "\\*{4} \\*{4} \\*{4} \\d{4}",
                      "type": "string"
                    },
                    "ordenCompra": {
                      "type": "string"
                    },
                    "responseCode": {
                      "type": "string"
                    },
                    "responseMessage": {
                      "maxLength": 65535,
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Agrega una entidad mediospago a un Cliente.",
        "oldsummary": "Crea una nueva instancia en mediospago de este modelo.",
        "operationId": "Cliente.prototype.__create__mediospago",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Los medios de pago de un Cliente",
                "properties": {
                  "alias": {
                    "type": "string"
                  },
                  "creditCardType": {
                    "default": "Visa",
                    "type": "string"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idCliente": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idEstado": {
                    "default": 1,
                    "format": "integer",
                    "maxLength": 2,
                    "type": "number"
                  },
                  "last4CardDigits": {
                    "maxLength": 4,
                    "pattern": "\\d{4}",
                    "type": "string"
                  },
                  "nombreEstado": {
                    "type": "string"
                  },
                  "numero": {
                    "maxLength": 20,
                    "pattern": "\\*{4} \\*{4} \\*{4} \\d{4}",
                    "type": "string"
                  },
                  "ordenCompra": {
                    "type": "string"
                  },
                  "responseCode": {
                    "type": "string"
                  },
                  "responseMessage": {
                    "maxLength": 65535,
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "additionalProperties": false,
                "description": "Los medios de pago de un Cliente",
                "properties": {
                  "alias": {
                    "type": "string"
                  },
                  "creditCardType": {
                    "default": "Visa",
                    "type": "string"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idCliente": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idEstado": {
                    "default": 1,
                    "format": "integer",
                    "maxLength": 2,
                    "type": "number"
                  },
                  "last4CardDigits": {
                    "maxLength": 4,
                    "pattern": "\\d{4}",
                    "type": "string"
                  },
                  "nombreEstado": {
                    "type": "string"
                  },
                  "numero": {
                    "maxLength": 20,
                    "pattern": "\\*{4} \\*{4} \\*{4} \\d{4}",
                    "type": "string"
                  },
                  "ordenCompra": {
                    "type": "string"
                  },
                  "responseCode": {
                    "type": "string"
                  },
                  "responseMessage": {
                    "maxLength": 65535,
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Agrega una entidad mediospago a un Cliente."
      }
    },
    "/Cliente/{id}/mediospago/{fk}": {
      "delete": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "description": "Clave foránea para mediospago",
            "in": "path",
            "name": "fk",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Suprimir Medios de Pago de un Cliente.",
        "oldsummary": "Suprimir un elemento relacionado por id para mediospago.",
        "operationId": "Cliente.prototype.__destroyById__mediospago",
        "summary": "Suprimir Medios de Pago de un Cliente."
      },
      "get": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "description": "Clave foránea para mediospago",
            "in": "path",
            "name": "fk",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Los medios de pago de un Cliente",
                  "properties": {
                    "alias": {
                      "type": "string"
                    },
                    "creditCardType": {
                      "default": "Visa",
                      "type": "string"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idCliente": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idEstado": {
                      "default": 1,
                      "format": "integer",
                      "maxLength": 2,
                      "type": "number"
                    },
                    "last4CardDigits": {
                      "maxLength": 4,
                      "pattern": "\\d{4}",
                      "type": "string"
                    },
                    "nombreEstado": {
                      "type": "string"
                    },
                    "numero": {
                      "maxLength": 20,
                      "pattern": "\\*{4} \\*{4} \\*{4} \\d{4}",
                      "type": "string"
                    },
                    "ordenCompra": {
                      "type": "string"
                    },
                    "responseCode": {
                      "type": "string"
                    },
                    "responseMessage": {
                      "maxLength": 65535,
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Buscar Medios de Pago de un Cliente.",
        "oldsummary": "Buscar un elemento relacionado por id para mediospago.",
        "operationId": "Cliente.prototype.__findById__mediospago",
        "summary": "Buscar Medios de Pago de un Cliente."
      }
    },
    "/Cliente/{id}/notification_token": {
      "get": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "description": "Modelo Básico que extiende PersistedModel",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "config_props": {
                        "type": "object"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "deviceId": {
                        "type": "string"
                      },
                      "idCliente": {
                        "format": "double",
                        "type": "number"
                      },
                      "platform": {
                        "type": "string"
                      },
                      "topic": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "deviceId"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Lista notification_token de un Cliente.",
        "oldsummary": "notification_token consultas de Cliente.",
        "operationId": "Cliente.prototype.__get__notification_token",
        "summary": "Lista notification_token de un Cliente."
      },
      "post": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Modelo Básico que extiende PersistedModel",
                  "properties": {
                    "access_token": {
                      "type": "string"
                    },
                    "config_props": {
                      "type": "object"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "deviceId": {
                      "type": "string"
                    },
                    "idCliente": {
                      "format": "double",
                      "type": "number"
                    },
                    "platform": {
                      "type": "string"
                    },
                    "topic": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "deviceId"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Crea o actualiza un notification token",
        "oldsummary": "Crea o actualiza un notification token",
        "operationId": "Cliente.prototype.upsertNotificationToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Usuarios finales del servicio myDot. Tienen la App instalada en su dispositivo",
                "properties": {
                  "apellido": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "avatar": {
                    "default": "https://static.mydot.app/avatar.png",
                    "maxLength": 512,
                    "type": "string"
                  },
                  "despachoGratis": {
                    "default": 1,
                    "format": "integer",
                    "maxLength": 1,
                    "type": "number"
                  },
                  "email": {
                    "format": "email",
                    "maxLength": 36,
                    "type": "string"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_direccion_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_mediopago_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "rut": {
                    "maxLength": 12,
                    "pattern": "\\d{1,2}\\.{0,1}\\d{3}\\.{0,1}\\d{3}-[0-9Kk]",
                    "type": "string"
                  },
                  "telefono": {
                    "maxLength": 15,
                    "pattern": "^56\\d{1} \\d{4} \\d{4}$",
                    "type": "string"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "username": {
                    "maxLength": 128,
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ],
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "additionalProperties": false,
                "description": "Usuarios finales del servicio myDot. Tienen la App instalada en su dispositivo",
                "properties": {
                  "apellido": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "avatar": {
                    "default": "https://static.mydot.app/avatar.png",
                    "maxLength": 512,
                    "type": "string"
                  },
                  "despachoGratis": {
                    "default": 1,
                    "format": "integer",
                    "maxLength": 1,
                    "type": "number"
                  },
                  "email": {
                    "format": "email",
                    "maxLength": 36,
                    "type": "string"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_direccion_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_mediopago_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "rut": {
                    "maxLength": 12,
                    "pattern": "\\d{1,2}\\.{0,1}\\d{3}\\.{0,1}\\d{3}-[0-9Kk]",
                    "type": "string"
                  },
                  "telefono": {
                    "maxLength": 15,
                    "pattern": "^56\\d{1} \\d{4} \\d{4}$",
                    "type": "string"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "username": {
                    "maxLength": 128,
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "Crea o actualiza un notification token"
      }
    },
    "/Cliente/{id}/notification_token/sendToDevice": {
      "post": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "envía notificación a un token específico",
        "oldsummary": "envía notificación a un token específico",
        "operationId": "Cliente.prototype.sendToDevice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Usuarios finales del servicio myDot. Tienen la App instalada en su dispositivo",
                "properties": {
                  "apellido": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "avatar": {
                    "default": "https://static.mydot.app/avatar.png",
                    "maxLength": 512,
                    "type": "string"
                  },
                  "despachoGratis": {
                    "default": 1,
                    "format": "integer",
                    "maxLength": 1,
                    "type": "number"
                  },
                  "email": {
                    "format": "email",
                    "maxLength": 36,
                    "type": "string"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_direccion_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_mediopago_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "rut": {
                    "maxLength": 12,
                    "pattern": "\\d{1,2}\\.{0,1}\\d{3}\\.{0,1}\\d{3}-[0-9Kk]",
                    "type": "string"
                  },
                  "telefono": {
                    "maxLength": 15,
                    "pattern": "^56\\d{1} \\d{4} \\d{4}$",
                    "type": "string"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "username": {
                    "maxLength": 128,
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ],
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "additionalProperties": false,
                "description": "Usuarios finales del servicio myDot. Tienen la App instalada en su dispositivo",
                "properties": {
                  "apellido": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "avatar": {
                    "default": "https://static.mydot.app/avatar.png",
                    "maxLength": 512,
                    "type": "string"
                  },
                  "despachoGratis": {
                    "default": 1,
                    "format": "integer",
                    "maxLength": 1,
                    "type": "number"
                  },
                  "email": {
                    "format": "email",
                    "maxLength": 36,
                    "type": "string"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_direccion_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_mediopago_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "rut": {
                    "maxLength": 12,
                    "pattern": "\\d{1,2}\\.{0,1}\\d{3}\\.{0,1}\\d{3}-[0-9Kk]",
                    "type": "string"
                  },
                  "telefono": {
                    "maxLength": 15,
                    "pattern": "^56\\d{1} \\d{4} \\d{4}$",
                    "type": "string"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "username": {
                    "maxLength": 128,
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "envía notificación a un token específico"
      }
    },
    "/Cliente/{id}/notification_token/sendToDeviceGroup": {
      "post": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "envía notificación al un grupo arbitrario",
        "oldsummary": "envía notificación al un grupo arbitrario",
        "operationId": "Cliente.prototype.sendToDeviceGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Usuarios finales del servicio myDot. Tienen la App instalada en su dispositivo",
                "properties": {
                  "apellido": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "avatar": {
                    "default": "https://static.mydot.app/avatar.png",
                    "maxLength": 512,
                    "type": "string"
                  },
                  "despachoGratis": {
                    "default": 1,
                    "format": "integer",
                    "maxLength": 1,
                    "type": "number"
                  },
                  "email": {
                    "format": "email",
                    "maxLength": 36,
                    "type": "string"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_direccion_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_mediopago_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "rut": {
                    "maxLength": 12,
                    "pattern": "\\d{1,2}\\.{0,1}\\d{3}\\.{0,1}\\d{3}-[0-9Kk]",
                    "type": "string"
                  },
                  "telefono": {
                    "maxLength": 15,
                    "pattern": "^56\\d{1} \\d{4} \\d{4}$",
                    "type": "string"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "username": {
                    "maxLength": 128,
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ],
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "additionalProperties": false,
                "description": "Usuarios finales del servicio myDot. Tienen la App instalada en su dispositivo",
                "properties": {
                  "apellido": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "avatar": {
                    "default": "https://static.mydot.app/avatar.png",
                    "maxLength": 512,
                    "type": "string"
                  },
                  "despachoGratis": {
                    "default": 1,
                    "format": "integer",
                    "maxLength": 1,
                    "type": "number"
                  },
                  "email": {
                    "format": "email",
                    "maxLength": 36,
                    "type": "string"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_direccion_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_mediopago_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "rut": {
                    "maxLength": 12,
                    "pattern": "\\d{1,2}\\.{0,1}\\d{3}\\.{0,1}\\d{3}-[0-9Kk]",
                    "type": "string"
                  },
                  "telefono": {
                    "maxLength": 15,
                    "pattern": "^56\\d{1} \\d{4} \\d{4}$",
                    "type": "string"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "username": {
                    "maxLength": 128,
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "envía notificación al un grupo arbitrario"
      }
    },
    "/Cliente/{id}/notification_token/sendToTopic": {
      "post": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "envía notificación al topic del usuario",
        "oldsummary": "envía notificación al topic del usuario",
        "operationId": "Cliente.prototype.sendToTopic",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Usuarios finales del servicio myDot. Tienen la App instalada en su dispositivo",
                "properties": {
                  "apellido": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "avatar": {
                    "default": "https://static.mydot.app/avatar.png",
                    "maxLength": 512,
                    "type": "string"
                  },
                  "despachoGratis": {
                    "default": 1,
                    "format": "integer",
                    "maxLength": 1,
                    "type": "number"
                  },
                  "email": {
                    "format": "email",
                    "maxLength": 36,
                    "type": "string"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_direccion_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_mediopago_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "rut": {
                    "maxLength": 12,
                    "pattern": "\\d{1,2}\\.{0,1}\\d{3}\\.{0,1}\\d{3}-[0-9Kk]",
                    "type": "string"
                  },
                  "telefono": {
                    "maxLength": 15,
                    "pattern": "^56\\d{1} \\d{4} \\d{4}$",
                    "type": "string"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "username": {
                    "maxLength": 128,
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ],
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "additionalProperties": false,
                "description": "Usuarios finales del servicio myDot. Tienen la App instalada en su dispositivo",
                "properties": {
                  "apellido": {
                    "maxLength": 128,
                    "type": "string"
                  },
                  "avatar": {
                    "default": "https://static.mydot.app/avatar.png",
                    "maxLength": 512,
                    "type": "string"
                  },
                  "despachoGratis": {
                    "default": 1,
                    "format": "integer",
                    "maxLength": 1,
                    "type": "number"
                  },
                  "email": {
                    "format": "email",
                    "maxLength": 36,
                    "type": "string"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_direccion_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id_mediopago_default": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "rut": {
                    "maxLength": 12,
                    "pattern": "\\d{1,2}\\.{0,1}\\d{3}\\.{0,1}\\d{3}-[0-9Kk]",
                    "type": "string"
                  },
                  "telefono": {
                    "maxLength": 15,
                    "pattern": "^56\\d{1} \\d{4} \\d{4}$",
                    "type": "string"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "username": {
                    "maxLength": 128,
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "envía notificación al topic del usuario"
      }
    },
    "/Cliente/{id}/notification_token/{fk}": {
      "delete": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "description": "Clave foránea para notification_token",
            "in": "path",
            "name": "fk",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Suprimir notification_token de un Cliente.",
        "oldsummary": "Suprimir un elemento relacionado por id para notification_token.",
        "operationId": "Cliente.prototype.__destroyById__notification_token",
        "summary": "Suprimir notification_token de un Cliente."
      },
      "get": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "description": "Clave foránea para notification_token",
            "in": "path",
            "name": "fk",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Modelo Básico que extiende PersistedModel",
                  "properties": {
                    "access_token": {
                      "type": "string"
                    },
                    "config_props": {
                      "type": "object"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "deviceId": {
                      "type": "string"
                    },
                    "idCliente": {
                      "format": "double",
                      "type": "number"
                    },
                    "platform": {
                      "type": "string"
                    },
                    "topic": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "deviceId"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Buscar notification_token de un Cliente.",
        "oldsummary": "Buscar un elemento relacionado por id para notification_token.",
        "operationId": "Cliente.prototype.__findById__notification_token",
        "summary": "Buscar notification_token de un Cliente."
      }
    },
    "/Cliente/{id}/pedidos": {
      "get": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "description": "Pedido generado por Botón o App. Sólo visible para Cliente dueño y Operadores",
                    "properties": {
                      "costoDespacho": {
                        "default": 0,
                        "description": "Costo del despacho, a priori cero para pedidos cuyo neto es mayor a 10.000",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 250000,
                        "minimum": 0,
                        "pattern": "\\d{6}",
                        "type": "number"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "descuento": {
                        "default": 0,
                        "description": "Descuento aplicado por promociones o saldo a favor en el Botón",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 250000,
                        "minimum": 0,
                        "pattern": "\\d{6}",
                        "type": "number"
                      },
                      "descuento_primer_pedido": {
                        "default": 0,
                        "description": "Descuento aplicado sobre el despacho en el primer pedido del cliente",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 250000,
                        "minimum": 0,
                        "pattern": "\\d{6}",
                        "type": "number"
                      },
                      "id": {
                        "format": "integer",
                        "maxLength": 5,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idBoton": {
                        "maxLength": 12,
                        "pattern": "[0-9A-F]{12}",
                        "type": "string"
                      },
                      "idCliente": {
                        "description": "ID del cliente que gatilla el pedido (se lee del token)",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idDireccion": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idEstado": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 9,
                        "minimum": 1,
                        "pattern": "\\d{1}",
                        "type": "number"
                      },
                      "idMarca": {
                        "description": "Marca que limita los productos de este botón",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idMediopago": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idProducto": {
                        "format": "integer",
                        "maxLength": 5,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idTransaccion": {
                        "format": "integer",
                        "maxLength": 16,
                        "maximum": 8565073562300389,
                        "minimum": 1565000000000001,
                        "pattern": "\\d{16}",
                        "type": "number"
                      },
                      "nombreMarca": {
                        "description": "Marca del los productos del pedido",
                        "maxLength": 64,
                        "type": "string"
                      },
                      "precioNeto": {
                        "description": "Precio neto, igual a la suma de los productos que componen el pedido",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 250000,
                        "minimum": 1,
                        "pattern": "\\d{6}",
                        "type": "number"
                      },
                      "precioTotal": {
                        "description": "Precio a pagar por el pedido = (precio neto + costo despacho - descuento)",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 250000,
                        "minimum": 1,
                        "pattern": "\\d{6}",
                        "type": "number"
                      },
                      "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Lista pedidos de un Cliente.",
        "oldsummary": "pedidos consultas de Cliente.",
        "operationId": "Cliente.prototype.__get__pedidos",
        "summary": "Lista pedidos de un Cliente."
      },
      "post": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Pedido generado por Botón o App. Sólo visible para Cliente dueño y Operadores",
                  "properties": {
                    "costoDespacho": {
                      "default": 0,
                      "description": "Costo del despacho, a priori cero para pedidos cuyo neto es mayor a 10.000",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 250000,
                      "minimum": 0,
                      "pattern": "\\d{6}",
                      "type": "number"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "descuento": {
                      "default": 0,
                      "description": "Descuento aplicado por promociones o saldo a favor en el Botón",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 250000,
                      "minimum": 0,
                      "pattern": "\\d{6}",
                      "type": "number"
                    },
                    "descuento_primer_pedido": {
                      "default": 0,
                      "description": "Descuento aplicado sobre el despacho en el primer pedido del cliente",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 250000,
                      "minimum": 0,
                      "pattern": "\\d{6}",
                      "type": "number"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 5,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idBoton": {
                      "maxLength": 12,
                      "pattern": "[0-9A-F]{12}",
                      "type": "string"
                    },
                    "idCliente": {
                      "description": "ID del cliente que gatilla el pedido (se lee del token)",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idDireccion": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idEstado": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 9,
                      "minimum": 1,
                      "pattern": "\\d{1}",
                      "type": "number"
                    },
                    "idMarca": {
                      "description": "Marca que limita los productos de este botón",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idMediopago": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idProducto": {
                      "format": "integer",
                      "maxLength": 5,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idTransaccion": {
                      "format": "integer",
                      "maxLength": 16,
                      "maximum": 8565073562300389,
                      "minimum": 1565000000000001,
                      "pattern": "\\d{16}",
                      "type": "number"
                    },
                    "nombreMarca": {
                      "description": "Marca del los productos del pedido",
                      "maxLength": 64,
                      "type": "string"
                    },
                    "precioNeto": {
                      "description": "Precio neto, igual a la suma de los productos que componen el pedido",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 250000,
                      "minimum": 1,
                      "pattern": "\\d{6}",
                      "type": "number"
                    },
                    "precioTotal": {
                      "description": "Precio a pagar por el pedido = (precio neto + costo despacho - descuento)",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 250000,
                      "minimum": 1,
                      "pattern": "\\d{6}",
                      "type": "number"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Agrega una entidad pedidos a un Cliente.",
        "oldsummary": "Crea una nueva instancia en pedidos de este modelo.",
        "operationId": "Cliente.prototype.__create__pedidos",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Pedido generado por Botón o App. Sólo visible para Cliente dueño y Operadores",
                "properties": {
                  "costoDespacho": {
                    "default": 0,
                    "description": "Costo del despacho, a priori cero para pedidos cuyo neto es mayor a 10.000",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 0,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "createdAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "descuento": {
                    "default": 0,
                    "description": "Descuento aplicado por promociones o saldo a favor en el Botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 0,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "descuento_primer_pedido": {
                    "default": 0,
                    "description": "Descuento aplicado sobre el despacho en el primer pedido del cliente",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 0,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 5,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idBoton": {
                    "maxLength": 12,
                    "pattern": "[0-9A-F]{12}",
                    "type": "string"
                  },
                  "idCliente": {
                    "description": "ID del cliente que gatilla el pedido (se lee del token)",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idDireccion": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idEstado": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 9,
                    "minimum": 1,
                    "pattern": "\\d{1}",
                    "type": "number"
                  },
                  "idMarca": {
                    "description": "Marca que limita los productos de este botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idMediopago": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idProducto": {
                    "format": "integer",
                    "maxLength": 5,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idTransaccion": {
                    "format": "integer",
                    "maxLength": 16,
                    "maximum": 8565073562300389,
                    "minimum": 1565000000000001,
                    "pattern": "\\d{16}",
                    "type": "number"
                  },
                  "nombreMarca": {
                    "description": "Marca del los productos del pedido",
                    "maxLength": 64,
                    "type": "string"
                  },
                  "precioNeto": {
                    "description": "Precio neto, igual a la suma de los productos que componen el pedido",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 1,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "precioTotal": {
                    "description": "Precio a pagar por el pedido = (precio neto + costo despacho - descuento)",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 1,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "additionalProperties": false,
                "description": "Pedido generado por Botón o App. Sólo visible para Cliente dueño y Operadores",
                "properties": {
                  "costoDespacho": {
                    "default": 0,
                    "description": "Costo del despacho, a priori cero para pedidos cuyo neto es mayor a 10.000",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 0,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "createdAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "descuento": {
                    "default": 0,
                    "description": "Descuento aplicado por promociones o saldo a favor en el Botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 0,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "descuento_primer_pedido": {
                    "default": 0,
                    "description": "Descuento aplicado sobre el despacho en el primer pedido del cliente",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 0,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 5,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idBoton": {
                    "maxLength": 12,
                    "pattern": "[0-9A-F]{12}",
                    "type": "string"
                  },
                  "idCliente": {
                    "description": "ID del cliente que gatilla el pedido (se lee del token)",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idDireccion": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idEstado": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 9,
                    "minimum": 1,
                    "pattern": "\\d{1}",
                    "type": "number"
                  },
                  "idMarca": {
                    "description": "Marca que limita los productos de este botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idMediopago": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idProducto": {
                    "format": "integer",
                    "maxLength": 5,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idTransaccion": {
                    "format": "integer",
                    "maxLength": 16,
                    "maximum": 8565073562300389,
                    "minimum": 1565000000000001,
                    "pattern": "\\d{16}",
                    "type": "number"
                  },
                  "nombreMarca": {
                    "description": "Marca del los productos del pedido",
                    "maxLength": 64,
                    "type": "string"
                  },
                  "precioNeto": {
                    "description": "Precio neto, igual a la suma de los productos que componen el pedido",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 1,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "precioTotal": {
                    "description": "Precio a pagar por el pedido = (precio neto + costo despacho - descuento)",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 1,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Agrega una entidad pedidos a un Cliente."
      }
    },
    "/Cliente/{id}/pedidos/{fk}": {
      "delete": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "description": "Clave foránea para pedidos",
            "in": "path",
            "name": "fk",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Suprimir pedidos de un Cliente.",
        "oldsummary": "Suprimir un elemento relacionado por id para pedidos.",
        "operationId": "Cliente.prototype.__destroyById__pedidos",
        "summary": "Suprimir pedidos de un Cliente."
      },
      "get": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "description": "Clave foránea para pedidos",
            "in": "path",
            "name": "fk",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Pedido generado por Botón o App. Sólo visible para Cliente dueño y Operadores",
                  "properties": {
                    "costoDespacho": {
                      "default": 0,
                      "description": "Costo del despacho, a priori cero para pedidos cuyo neto es mayor a 10.000",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 250000,
                      "minimum": 0,
                      "pattern": "\\d{6}",
                      "type": "number"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "descuento": {
                      "default": 0,
                      "description": "Descuento aplicado por promociones o saldo a favor en el Botón",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 250000,
                      "minimum": 0,
                      "pattern": "\\d{6}",
                      "type": "number"
                    },
                    "descuento_primer_pedido": {
                      "default": 0,
                      "description": "Descuento aplicado sobre el despacho en el primer pedido del cliente",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 250000,
                      "minimum": 0,
                      "pattern": "\\d{6}",
                      "type": "number"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 5,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idBoton": {
                      "maxLength": 12,
                      "pattern": "[0-9A-F]{12}",
                      "type": "string"
                    },
                    "idCliente": {
                      "description": "ID del cliente que gatilla el pedido (se lee del token)",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idDireccion": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idEstado": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 9,
                      "minimum": 1,
                      "pattern": "\\d{1}",
                      "type": "number"
                    },
                    "idMarca": {
                      "description": "Marca que limita los productos de este botón",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idMediopago": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idProducto": {
                      "format": "integer",
                      "maxLength": 5,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idTransaccion": {
                      "format": "integer",
                      "maxLength": 16,
                      "maximum": 8565073562300389,
                      "minimum": 1565000000000001,
                      "pattern": "\\d{16}",
                      "type": "number"
                    },
                    "nombreMarca": {
                      "description": "Marca del los productos del pedido",
                      "maxLength": 64,
                      "type": "string"
                    },
                    "precioNeto": {
                      "description": "Precio neto, igual a la suma de los productos que componen el pedido",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 250000,
                      "minimum": 1,
                      "pattern": "\\d{6}",
                      "type": "number"
                    },
                    "precioTotal": {
                      "description": "Precio a pagar por el pedido = (precio neto + costo despacho - descuento)",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 250000,
                      "minimum": 1,
                      "pattern": "\\d{6}",
                      "type": "number"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Buscar pedidos de un Cliente.",
        "oldsummary": "Buscar un elemento relacionado por id para pedidos.",
        "operationId": "Cliente.prototype.__findById__pedidos",
        "summary": "Buscar pedidos de un Cliente."
      }
    },
    "/Cliente/{id}/transacciones_webpay": {
      "get": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "description": "Transacción registrada a través de Webpay OneClick",
                    "properties": {
                      "amount": {
                        "format": "double",
                        "type": "number"
                      },
                      "authorizationCode": {
                        "type": "string"
                      },
                      "buyOrder": {
                        "format": "double",
                        "type": "number"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "creditCardType": {
                        "default": "Visa",
                        "type": "string"
                      },
                      "id": {
                        "format": "integer",
                        "maxLength": 16,
                        "maximum": 8565073562300389,
                        "minimum": 1565000000000001,
                        "pattern": "\\d{16}",
                        "type": "number"
                      },
                      "idMediopago": {
                        "format": "double",
                        "type": "number"
                      },
                      "idPedido": {
                        "format": "double",
                        "type": "number"
                      },
                      "last4CardDigits": {
                        "default": "0000",
                        "maxLength": 4,
                        "pattern": "\\d{4}",
                        "type": "string"
                      },
                      "responseCode": {
                        "format": "double",
                        "type": "number"
                      },
                      "responseCodeLocaleSpanish": {
                        "maxLength": 65535,
                        "type": "string"
                      },
                      "responseMessage": {
                        "maxLength": 65535,
                        "type": "string"
                      },
                      "reverseCode": {
                        "type": "string"
                      },
                      "status": {
                        "maxLength": 32,
                        "type": "string"
                      },
                      "tbkUser": {
                        "type": "string"
                      },
                      "transactionId": {
                        "format": "double",
                        "type": "number"
                      },
                      "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "idMediopago",
                      "amount",
                      "last4CardDigits"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Lista transacciones_webpay de un Cliente.",
        "oldsummary": "transacciones_webpay consultas de Cliente.",
        "operationId": "Cliente.prototype.__get__transacciones_webpay",
        "summary": "Lista transacciones_webpay de un Cliente."
      }
    },
    "/Cliente/{id}/transacciones_webpay/{fk}": {
      "get": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "description": "Clave foránea para transacciones_webpay",
            "in": "path",
            "name": "fk",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Transacción registrada a través de Webpay OneClick",
                  "properties": {
                    "amount": {
                      "format": "double",
                      "type": "number"
                    },
                    "authorizationCode": {
                      "type": "string"
                    },
                    "buyOrder": {
                      "format": "double",
                      "type": "number"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "creditCardType": {
                      "default": "Visa",
                      "type": "string"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 16,
                      "maximum": 8565073562300389,
                      "minimum": 1565000000000001,
                      "pattern": "\\d{16}",
                      "type": "number"
                    },
                    "idMediopago": {
                      "format": "double",
                      "type": "number"
                    },
                    "idPedido": {
                      "format": "double",
                      "type": "number"
                    },
                    "last4CardDigits": {
                      "default": "0000",
                      "maxLength": 4,
                      "pattern": "\\d{4}",
                      "type": "string"
                    },
                    "responseCode": {
                      "format": "double",
                      "type": "number"
                    },
                    "responseCodeLocaleSpanish": {
                      "maxLength": 65535,
                      "type": "string"
                    },
                    "responseMessage": {
                      "maxLength": 65535,
                      "type": "string"
                    },
                    "reverseCode": {
                      "type": "string"
                    },
                    "status": {
                      "maxLength": 32,
                      "type": "string"
                    },
                    "tbkUser": {
                      "type": "string"
                    },
                    "transactionId": {
                      "format": "double",
                      "type": "number"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "idMediopago",
                    "amount",
                    "last4CardDigits"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Buscar transacciones_webpay de un Cliente.",
        "oldsummary": "Buscar un elemento relacionado por id para transacciones_webpay.",
        "operationId": "Cliente.prototype.__findById__transacciones_webpay",
        "summary": "Buscar transacciones_webpay de un Cliente."
      }
    },
    "/Cliente/{id}/verify": {
      "post": {
        "parameters": [
          {
            "description": "Cliente id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Cliente"
        ],
        "deprecated": false,
        "description": "Gatilla la verificación de la cuenta de usuario",
        "oldsummary": "Trigger user's identity verification with configured verifyOptions",
        "operationId": "Cliente.prototype.verify",
        "summary": "Gatilla la verificación de la cuenta de usuario"
      }
    },
    "/Marca": {
      "get": {
        "parameters": [
          {
            "description": "Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "description": "Marcas de producto (pueden ser de un mismo fabricante)",
                    "properties": {
                      "categoriaPrincipal": {
                        "maxLength": 64,
                        "type": "string"
                      },
                      "id": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idFabricante": {
                        "format": "integer",
                        "type": "number"
                      },
                      "image": {
                        "maxLength": 512,
                        "type": "string"
                      },
                      "nombreMarca": {
                        "maxLength": 65535,
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "nombreMarca",
                      "idFabricante"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Marca"
        ],
        "deprecated": false,
        "description": "Lista completa de Marcas (filtro opcional).",
        "oldsummary": "Find all instances of the model matched by filter from the data source.",
        "operationId": "Marca.find",
        "summary": "Lista completa de Marcas (filtro opcional)."
      }
    },
    "/Marca/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Model id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "description": "Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Marcas de producto (pueden ser de un mismo fabricante)",
                  "properties": {
                    "categoriaPrincipal": {
                      "maxLength": 64,
                      "type": "string"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idFabricante": {
                      "format": "integer",
                      "type": "number"
                    },
                    "image": {
                      "maxLength": 512,
                      "type": "string"
                    },
                    "nombreMarca": {
                      "maxLength": 65535,
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "nombreMarca",
                    "idFabricante"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Marca"
        ],
        "deprecated": false,
        "description": "Encuentra una Marca por {{id}} en la BBDD.",
        "oldsummary": "Find a model instance by {{id}} from the data source.",
        "operationId": "Marca.findById",
        "summary": "Encuentra una Marca por {{id}} en la BBDD."
      }
    },
    "/Marca/{id}/botones": {
      "get": {
        "parameters": [
          {
            "description": "Marca id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "description": "Los botones de un Cliente",
                    "properties": {
                      "comment": {
                        "description": "Comentario arbitrario en esta entidad",
                        "maxLength": 512,
                        "type": "string"
                      },
                      "id": {
                        "maxLength": 12,
                        "pattern": "[0-9A-F]{12}",
                        "type": "string"
                      },
                      "idCliente": {
                        "description": "ID del cliente que compró este dot",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idDireccion": {
                        "description": "Dirección de despacho asociada a este botón",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idMarca": {
                        "description": "Marca que limita los productos de este botón",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idMediopago": {
                        "description": "Medio de pago asociado a este botón",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "isActive": {
                        "default": true,
                        "type": "boolean"
                      },
                      "nombreMarca": {
                        "description": "Marca del botón",
                        "maxLength": 64,
                        "type": "string"
                      },
                      "saldo": {
                        "default": 5000,
                        "description": "Saldo a favor cargado en el botón",
                        "format": "integer",
                        "maxLength": 5,
                        "maximum": 99999,
                        "minimum": 0,
                        "pattern": "\\d{5}",
                        "type": "number"
                      },
                      "ssid": {
                        "description": "SSID de la wifi asociada al botón",
                        "maxLength": 128,
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "idCliente"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Marca"
        ],
        "deprecated": false,
        "description": "Lista botones de una Marca.",
        "oldsummary": "botones consultas de Marca.",
        "operationId": "Marca.prototype.__get__botones",
        "summary": "Lista botones de una Marca."
      }
    },
    "/Marca/{id}/botones_disponibles": {
      "get": {
        "parameters": [
          {
            "description": "Marca id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "description": "Los botones disponibles asociados a una marca",
                    "properties": {
                      "id": {
                        "maxLength": 12,
                        "pattern": "[0-9A-F]{12}",
                        "type": "string"
                      },
                      "idMarca": {
                        "description": "Marca que limita los productos de este botón",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Marca"
        ],
        "deprecated": false,
        "description": "Lista botones_disponibles de una Marca.",
        "oldsummary": "botones_disponibles consultas de Marca.",
        "operationId": "Marca.prototype.__get__botones_disponibles",
        "summary": "Lista botones_disponibles de una Marca."
      }
    },
    "/Marca/{id}/productos": {
      "get": {
        "parameters": [
          {
            "description": "Marca id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "description": "Los productos disponibles para comprar",
                    "properties": {
                      "descripcion": {
                        "maxLength": 65535,
                        "type": "string"
                      },
                      "descuento": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "id": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idCategoria": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "type": "number"
                      },
                      "idMarca": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "type": "number"
                      },
                      "image": {
                        "format": "uri",
                        "maxLength": 512,
                        "type": "string"
                      },
                      "isButton": {
                        "description": "Define si el producto es un botón o un consumible",
                        "type": "boolean"
                      },
                      "nombreMarca": {
                        "description": "Marca del producto",
                        "maxLength": 64,
                        "type": "string"
                      },
                      "nombre_categoria": {
                        "maxLength": 64,
                        "type": "string"
                      },
                      "precioBase": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "sku": {
                        "format": "[A-Z]{5,8}00\\w{2}",
                        "maxLength": 14,
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "descripcion",
                      "idCategoria",
                      "idMarca",
                      "precioBase",
                      "descuento"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Marca"
        ],
        "deprecated": false,
        "description": "Lista Productos de una Marca.",
        "oldsummary": "productos consultas de Marca.",
        "operationId": "Marca.prototype.__get__productos",
        "summary": "Lista Productos de una Marca."
      }
    },
    "/Misc/banner": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Misc"
        ],
        "deprecated": false,
        "description": "Devuelve un banner para mostrar al cliente",
        "oldsummary": "Devuelve un banner para mostrar al cliente",
        "operationId": "Misc.banner",
        "summary": "Devuelve un banner para mostrar al cliente"
      }
    },
    "/Misc/banners": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Misc"
        ],
        "deprecated": false,
        "description": "Listado de banners por tamaño y posición",
        "oldsummary": "Listado de banners por tamaño y posición",
        "operationId": "Misc.banners",
        "summary": "Listado de banners por tamaño y posición"
      }
    },
    "/Misc/cobertura": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Misc"
        ],
        "deprecated": false,
        "description": "Devuelve el polígono de cobertura como pares de coordenadas",
        "oldsummary": "Devuelve el polígono de cobertura como pares de coordenadas",
        "operationId": "Misc.cobertura",
        "summary": "Devuelve el polígono de cobertura como pares de coordenadas"
      }
    },
    "/Misc/coberturaFC": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Misc"
        ],
        "deprecated": false,
        "description": "Devuelve la cobertura como FeatureCollection (soporta varios polígonos)",
        "oldsummary": "Devuelve la cobertura como FeatureCollection (soporta varios polígonos)",
        "operationId": "Misc.coberturaFC",
        "summary": "Devuelve la cobertura como FeatureCollection (soporta varios polígonos)"
      }
    },
    "/Misc/coberturaGeoJson": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Misc"
        ],
        "deprecated": false,
        "description": "Devuelve el polígono de cobertura como GeoJSON",
        "oldsummary": "Devuelve el polígono de cobertura como GeoJSON",
        "operationId": "Misc.coberturaGeoJson",
        "summary": "Devuelve el polígono de cobertura como GeoJSON"
      }
    },
    "/Misc/cspReport": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "ER_DUP_ENTRY",
                      "message": "Se intentó insertar un registro duplicado",
                      "name": "Error",
                      "statusCode": 422
                    }
                  }
                },
                "schema": {
                  "description": "Se ha intentado crear una entidad existente",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "ER_DUP_ENTRY"
          }
        },
        "tags": [
          "Misc"
        ],
        "deprecated": false,
        "description": "cspReport",
        "oldsummary": "cspReport",
        "operationId": "Misc.cspReport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Endpoints no relacionados a ningún modelo en particular",
                "properties": {
                  "id": {
                    "format": "double",
                    "type": "number"
                  }
                },
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "additionalProperties": false,
                "description": "Endpoints no relacionados a ningún modelo en particular",
                "properties": {
                  "id": {
                    "format": "double",
                    "type": "number"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "cspReport"
      }
    },
    "/Misc/echo": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "ER_DUP_ENTRY",
                      "message": "Se intentó insertar un registro duplicado",
                      "name": "Error",
                      "statusCode": 422
                    }
                  }
                },
                "schema": {
                  "description": "Se ha intentado crear una entidad existente",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "ER_DUP_ENTRY"
          }
        },
        "tags": [
          "Misc"
        ],
        "deprecated": false,
        "description": "Verifica si una direccion tiene cobertura",
        "oldsummary": "Verifica si una direccion tiene cobertura",
        "operationId": "Misc.echo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Endpoints no relacionados a ningún modelo en particular",
                "properties": {
                  "id": {
                    "format": "double",
                    "type": "number"
                  }
                },
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "additionalProperties": false,
                "description": "Endpoints no relacionados a ningún modelo en particular",
                "properties": {
                  "id": {
                    "format": "double",
                    "type": "number"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Verifica si una direccion tiene cobertura"
      }
    },
    "/Misc/faq": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Misc"
        ],
        "deprecated": false,
        "description": "Devuelve las preguntas frecuentes en un objeto",
        "oldsummary": "Devuelve las preguntas frecuentes en un objeto",
        "operationId": "Misc.faq",
        "summary": "Devuelve las preguntas frecuentes en un objeto"
      }
    },
    "/Misc/hasCobertura": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "ER_DUP_ENTRY",
                      "message": "Se intentó insertar un registro duplicado",
                      "name": "Error",
                      "statusCode": 422
                    }
                  }
                },
                "schema": {
                  "description": "Se ha intentado crear una entidad existente",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "ER_DUP_ENTRY"
          }
        },
        "tags": [
          "Misc"
        ],
        "deprecated": false,
        "description": "Verifica si una direccion tiene cobertura",
        "oldsummary": "Verifica si una direccion tiene cobertura",
        "operationId": "Misc.hasCobertura",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Endpoints no relacionados a ningún modelo en particular",
                "properties": {
                  "id": {
                    "format": "double",
                    "type": "number"
                  }
                },
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "additionalProperties": false,
                "description": "Endpoints no relacionados a ningún modelo en particular",
                "properties": {
                  "id": {
                    "format": "double",
                    "type": "number"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Verifica si una direccion tiene cobertura"
      }
    },
    "/Misc/image": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "ER_DUP_ENTRY",
                      "message": "Se intentó insertar un registro duplicado",
                      "name": "Error",
                      "statusCode": 422
                    }
                  }
                },
                "schema": {
                  "description": "Se ha intentado crear una entidad existente",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "ER_DUP_ENTRY"
          }
        },
        "tags": [
          "Misc"
        ],
        "deprecated": false,
        "description": "sube una imagen a firebase",
        "oldsummary": "sube una imagen a firebase",
        "operationId": "Misc.uploadImage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Endpoints no relacionados a ningún modelo en particular",
                "properties": {
                  "id": {
                    "format": "double",
                    "type": "number"
                  }
                },
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "additionalProperties": false,
                "description": "Endpoints no relacionados a ningún modelo en particular",
                "properties": {
                  "id": {
                    "format": "double",
                    "type": "number"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "sube una imagen a firebase"
      }
    },
    "/Misc/preguntas_frecuentes": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Misc"
        ],
        "deprecated": false,
        "description": "Devuelve las preguntas frecuentes como HTML",
        "oldsummary": "Devuelve las preguntas frecuentes como HTML",
        "operationId": "Misc.preguntas_frecuentes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Endpoints no relacionados a ningún modelo en particular",
                "properties": {
                  "id": {
                    "format": "double",
                    "type": "number"
                  }
                },
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "additionalProperties": false,
                "description": "Endpoints no relacionados a ningún modelo en particular",
                "properties": {
                  "id": {
                    "format": "double",
                    "type": "number"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Devuelve las preguntas frecuentes como HTML"
      }
    },
    "/Misc/privacidad": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Misc"
        ],
        "deprecated": false,
        "description": "Devuelve la política de privacidad como HTML",
        "oldsummary": "Devuelve la política de privacidad como HTML",
        "operationId": "Misc.privacidad",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Endpoints no relacionados a ningún modelo en particular",
                "properties": {
                  "id": {
                    "format": "double",
                    "type": "number"
                  }
                },
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "additionalProperties": false,
                "description": "Endpoints no relacionados a ningún modelo en particular",
                "properties": {
                  "id": {
                    "format": "double",
                    "type": "number"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Devuelve la política de privacidad como HTML"
      }
    },
    "/Misc/privacy": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Misc"
        ],
        "deprecated": false,
        "description": "Devuelve la política de privacidad en un objeto",
        "oldsummary": "Devuelve la política de privacidad en un objeto",
        "operationId": "Misc.privacy",
        "summary": "Devuelve la política de privacidad en un objeto"
      }
    },
    "/Misc/terminos_de_servicio": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Misc"
        ],
        "deprecated": false,
        "description": "Devuelve los términos de servicio como HTML",
        "oldsummary": "Devuelve los términos de servicio como HTML",
        "operationId": "Misc.terminos_de_servicio",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Endpoints no relacionados a ningún modelo en particular",
                "properties": {
                  "id": {
                    "format": "double",
                    "type": "number"
                  }
                },
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "additionalProperties": false,
                "description": "Endpoints no relacionados a ningún modelo en particular",
                "properties": {
                  "id": {
                    "format": "double",
                    "type": "number"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Devuelve los términos de servicio como HTML"
      }
    },
    "/Misc/throwError": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "ER_DUP_ENTRY",
                      "message": "Se intentó insertar un registro duplicado",
                      "name": "Error",
                      "statusCode": 422
                    }
                  }
                },
                "schema": {
                  "description": "Se ha intentado crear una entidad existente",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "ER_DUP_ENTRY"
          }
        },
        "tags": [
          "Misc"
        ],
        "deprecated": false,
        "description": "Test method to throw custom errors",
        "oldsummary": "Test method to throw custom errors",
        "operationId": "Misc.throwError",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Endpoints no relacionados a ningún modelo en particular",
                "properties": {
                  "id": {
                    "format": "double",
                    "type": "number"
                  }
                },
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "additionalProperties": false,
                "description": "Endpoints no relacionados a ningún modelo en particular",
                "properties": {
                  "id": {
                    "format": "double",
                    "type": "number"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "summary": "Test method to throw custom errors"
      }
    },
    "/Misc/tos": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Misc"
        ],
        "deprecated": false,
        "description": "Devuelve los términos de servicio en un objeto",
        "oldsummary": "Devuelve los términos de servicio en un objeto",
        "operationId": "Misc.tos",
        "summary": "Devuelve los términos de servicio en un objeto"
      }
    },
    "/Pedido": {
      "get": {
        "parameters": [
          {
            "description": "Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "description": "Pedido generado por Botón o App. Sólo visible para Cliente dueño y Operadores",
                    "properties": {
                      "costoDespacho": {
                        "default": 0,
                        "description": "Costo del despacho, a priori cero para pedidos cuyo neto es mayor a 10.000",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 250000,
                        "minimum": 0,
                        "pattern": "\\d{6}",
                        "type": "number"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "descuento": {
                        "default": 0,
                        "description": "Descuento aplicado por promociones o saldo a favor en el Botón",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 250000,
                        "minimum": 0,
                        "pattern": "\\d{6}",
                        "type": "number"
                      },
                      "descuento_primer_pedido": {
                        "default": 0,
                        "description": "Descuento aplicado sobre el despacho en el primer pedido del cliente",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 250000,
                        "minimum": 0,
                        "pattern": "\\d{6}",
                        "type": "number"
                      },
                      "id": {
                        "format": "integer",
                        "maxLength": 5,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idBoton": {
                        "maxLength": 12,
                        "pattern": "[0-9A-F]{12}",
                        "type": "string"
                      },
                      "idCliente": {
                        "description": "ID del cliente que gatilla el pedido (se lee del token)",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idDireccion": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idEstado": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 9,
                        "minimum": 1,
                        "pattern": "\\d{1}",
                        "type": "number"
                      },
                      "idMarca": {
                        "description": "Marca que limita los productos de este botón",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idMediopago": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idProducto": {
                        "format": "integer",
                        "maxLength": 5,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idTransaccion": {
                        "format": "integer",
                        "maxLength": 16,
                        "maximum": 8565073562300389,
                        "minimum": 1565000000000001,
                        "pattern": "\\d{16}",
                        "type": "number"
                      },
                      "nombreMarca": {
                        "description": "Marca del los productos del pedido",
                        "maxLength": 64,
                        "type": "string"
                      },
                      "precioNeto": {
                        "description": "Precio neto, igual a la suma de los productos que componen el pedido",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 250000,
                        "minimum": 1,
                        "pattern": "\\d{6}",
                        "type": "number"
                      },
                      "precioTotal": {
                        "description": "Precio a pagar por el pedido = (precio neto + costo despacho - descuento)",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 250000,
                        "minimum": 1,
                        "pattern": "\\d{6}",
                        "type": "number"
                      },
                      "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Pedido"
        ],
        "deprecated": false,
        "description": "Lista completa de Pedidos (propios) (filtro opcional).",
        "oldsummary": "Find all instances of the model matched by filter from the data source.",
        "operationId": "Pedido.find",
        "summary": "Lista completa de Pedidos (propios) (filtro opcional)."
      }
    },
    "/Pedido/costo_despacho/{monto}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "monto",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Pedido"
        ],
        "deprecated": false,
        "description": "Lista costo despacho dado un monto",
        "oldsummary": "Lista costo despacho dado un monto",
        "operationId": "Pedido.costo_despacho",
        "summary": "Lista costo despacho dado un monto"
      }
    },
    "/Pedido/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Model id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "description": "Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Pedido generado por Botón o App. Sólo visible para Cliente dueño y Operadores",
                  "properties": {
                    "costoDespacho": {
                      "default": 0,
                      "description": "Costo del despacho, a priori cero para pedidos cuyo neto es mayor a 10.000",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 250000,
                      "minimum": 0,
                      "pattern": "\\d{6}",
                      "type": "number"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "descuento": {
                      "default": 0,
                      "description": "Descuento aplicado por promociones o saldo a favor en el Botón",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 250000,
                      "minimum": 0,
                      "pattern": "\\d{6}",
                      "type": "number"
                    },
                    "descuento_primer_pedido": {
                      "default": 0,
                      "description": "Descuento aplicado sobre el despacho en el primer pedido del cliente",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 250000,
                      "minimum": 0,
                      "pattern": "\\d{6}",
                      "type": "number"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 5,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idBoton": {
                      "maxLength": 12,
                      "pattern": "[0-9A-F]{12}",
                      "type": "string"
                    },
                    "idCliente": {
                      "description": "ID del cliente que gatilla el pedido (se lee del token)",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idDireccion": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idEstado": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 9,
                      "minimum": 1,
                      "pattern": "\\d{1}",
                      "type": "number"
                    },
                    "idMarca": {
                      "description": "Marca que limita los productos de este botón",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idMediopago": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idProducto": {
                      "format": "integer",
                      "maxLength": 5,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idTransaccion": {
                      "format": "integer",
                      "maxLength": 16,
                      "maximum": 8565073562300389,
                      "minimum": 1565000000000001,
                      "pattern": "\\d{16}",
                      "type": "number"
                    },
                    "nombreMarca": {
                      "description": "Marca del los productos del pedido",
                      "maxLength": 64,
                      "type": "string"
                    },
                    "precioNeto": {
                      "description": "Precio neto, igual a la suma de los productos que componen el pedido",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 250000,
                      "minimum": 1,
                      "pattern": "\\d{6}",
                      "type": "number"
                    },
                    "precioTotal": {
                      "description": "Precio a pagar por el pedido = (precio neto + costo despacho - descuento)",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 250000,
                      "minimum": 1,
                      "pattern": "\\d{6}",
                      "type": "number"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Pedido"
        ],
        "deprecated": false,
        "description": "Encuentra un Pedido por {{id}} en la BBDD.",
        "oldsummary": "Find a model instance by {{id}} from the data source.",
        "operationId": "Pedido.findById",
        "summary": "Encuentra un Pedido por {{id}} en la BBDD."
      },
      "patch": {
        "parameters": [
          {
            "description": "Pedido id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Pedido generado por Botón o App. Sólo visible para Cliente dueño y Operadores",
                  "properties": {
                    "costoDespacho": {
                      "default": 0,
                      "description": "Costo del despacho, a priori cero para pedidos cuyo neto es mayor a 10.000",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 250000,
                      "minimum": 0,
                      "pattern": "\\d{6}",
                      "type": "number"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "descuento": {
                      "default": 0,
                      "description": "Descuento aplicado por promociones o saldo a favor en el Botón",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 250000,
                      "minimum": 0,
                      "pattern": "\\d{6}",
                      "type": "number"
                    },
                    "descuento_primer_pedido": {
                      "default": 0,
                      "description": "Descuento aplicado sobre el despacho en el primer pedido del cliente",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 250000,
                      "minimum": 0,
                      "pattern": "\\d{6}",
                      "type": "number"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 5,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idBoton": {
                      "maxLength": 12,
                      "pattern": "[0-9A-F]{12}",
                      "type": "string"
                    },
                    "idCliente": {
                      "description": "ID del cliente que gatilla el pedido (se lee del token)",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idDireccion": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idEstado": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 9,
                      "minimum": 1,
                      "pattern": "\\d{1}",
                      "type": "number"
                    },
                    "idMarca": {
                      "description": "Marca que limita los productos de este botón",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idMediopago": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idProducto": {
                      "format": "integer",
                      "maxLength": 5,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idTransaccion": {
                      "format": "integer",
                      "maxLength": 16,
                      "maximum": 8565073562300389,
                      "minimum": 1565000000000001,
                      "pattern": "\\d{16}",
                      "type": "number"
                    },
                    "nombreMarca": {
                      "description": "Marca del los productos del pedido",
                      "maxLength": 64,
                      "type": "string"
                    },
                    "precioNeto": {
                      "description": "Precio neto, igual a la suma de los productos que componen el pedido",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 250000,
                      "minimum": 1,
                      "pattern": "\\d{6}",
                      "type": "number"
                    },
                    "precioTotal": {
                      "description": "Precio a pagar por el pedido = (precio neto + costo despacho - descuento)",
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 250000,
                      "minimum": 1,
                      "pattern": "\\d{6}",
                      "type": "number"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Pedido"
        ],
        "deprecated": false,
        "description": "Modifica o crea un Pedido y persiste en BBDD.",
        "oldsummary": "Patch attributes for a model instance and persist it into the data source.",
        "operationId": "Pedido.prototype.patchAttributes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "An object of model property name/value pairs",
                "additionalProperties": false,
                "properties": {
                  "costoDespacho": {
                    "default": 0,
                    "description": "Costo del despacho, a priori cero para pedidos cuyo neto es mayor a 10.000",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 0,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "createdAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "descuento": {
                    "default": 0,
                    "description": "Descuento aplicado por promociones o saldo a favor en el Botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 0,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "descuento_primer_pedido": {
                    "default": 0,
                    "description": "Descuento aplicado sobre el despacho en el primer pedido del cliente",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 0,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 5,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idBoton": {
                    "maxLength": 12,
                    "pattern": "[0-9A-F]{12}",
                    "type": "string"
                  },
                  "idCliente": {
                    "description": "ID del cliente que gatilla el pedido (se lee del token)",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idDireccion": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idEstado": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 9,
                    "minimum": 1,
                    "pattern": "\\d{1}",
                    "type": "number"
                  },
                  "idMarca": {
                    "description": "Marca que limita los productos de este botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idMediopago": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idProducto": {
                    "format": "integer",
                    "maxLength": 5,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idTransaccion": {
                    "format": "integer",
                    "maxLength": 16,
                    "maximum": 8565073562300389,
                    "minimum": 1565000000000001,
                    "pattern": "\\d{16}",
                    "type": "number"
                  },
                  "nombreMarca": {
                    "description": "Marca del los productos del pedido",
                    "maxLength": 64,
                    "type": "string"
                  },
                  "precioNeto": {
                    "description": "Precio neto, igual a la suma de los productos que componen el pedido",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 1,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "precioTotal": {
                    "description": "Precio a pagar por el pedido = (precio neto + costo despacho - descuento)",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 1,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "description": "An object of model property name/value pairs",
                "additionalProperties": false,
                "properties": {
                  "costoDespacho": {
                    "default": 0,
                    "description": "Costo del despacho, a priori cero para pedidos cuyo neto es mayor a 10.000",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 0,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "createdAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "descuento": {
                    "default": 0,
                    "description": "Descuento aplicado por promociones o saldo a favor en el Botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 0,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "descuento_primer_pedido": {
                    "default": 0,
                    "description": "Descuento aplicado sobre el despacho en el primer pedido del cliente",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 0,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 5,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idBoton": {
                    "maxLength": 12,
                    "pattern": "[0-9A-F]{12}",
                    "type": "string"
                  },
                  "idCliente": {
                    "description": "ID del cliente que gatilla el pedido (se lee del token)",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idDireccion": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idEstado": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 9,
                    "minimum": 1,
                    "pattern": "\\d{1}",
                    "type": "number"
                  },
                  "idMarca": {
                    "description": "Marca que limita los productos de este botón",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idMediopago": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idProducto": {
                    "format": "integer",
                    "maxLength": 5,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idTransaccion": {
                    "format": "integer",
                    "maxLength": 16,
                    "maximum": 8565073562300389,
                    "minimum": 1565000000000001,
                    "pattern": "\\d{16}",
                    "type": "number"
                  },
                  "nombreMarca": {
                    "description": "Marca del los productos del pedido",
                    "maxLength": 64,
                    "type": "string"
                  },
                  "precioNeto": {
                    "description": "Precio neto, igual a la suma de los productos que componen el pedido",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 1,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "precioTotal": {
                    "description": "Precio a pagar por el pedido = (precio neto + costo despacho - descuento)",
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 250000,
                    "minimum": 1,
                    "pattern": "\\d{6}",
                    "type": "number"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "An object of model property name/value pairs"
        },
        "summary": "Modifica o crea un Pedido y persiste en BBDD."
      }
    },
    "/Pedido/{id}/direccion": {
      "get": {
        "parameters": [
          {
            "description": "Pedido id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "refresh",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Las direcciones de un Cliente",
                  "properties": {
                    "comuna": {
                      "maxLength": 64,
                      "type": "string"
                    },
                    "conCobertura": {
                      "default": false,
                      "type": "boolean"
                    },
                    "direccion": {
                      "maxLength": 65535,
                      "type": "string"
                    },
                    "geom": {
                      "properties": {
                        "lat": {
                          "type": "number"
                        },
                        "lng": {
                          "type": "number"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idCliente": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "instrucciones": {
                      "description": "Indicaciones para llegar, despachar, etc a esta dirección",
                      "type": "string"
                    },
                    "lat": {
                      "default": -70.38,
                      "format": "float",
                      "maxLength": 7,
                      "maximum": 80,
                      "minimum": -80,
                      "type": "number"
                    },
                    "link": {
                      "type": "string"
                    },
                    "lng": {
                      "default": -30.78,
                      "format": "float",
                      "maxLength": 7,
                      "maximum": 80,
                      "minimum": -80,
                      "type": "number"
                    },
                    "numero": {
                      "description": "Si aplica, el depto, oficina, letra o numeración interior",
                      "maxLength": 512,
                      "type": "string"
                    },
                    "pais": {
                      "maxLength": 64,
                      "type": "string"
                    },
                    "region": {
                      "maxLength": 128,
                      "type": "string"
                    }
                  },
                  "required": [
                    "direccion",
                    "lng",
                    "lat"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Pedido"
        ],
        "deprecated": false,
        "description": "Muestra la Dirección asociada a un Pedido.",
        "oldsummary": "Capta la relación belongsTo direccion.",
        "operationId": "Pedido.prototype.__get__direccion",
        "summary": "Muestra la Dirección asociada a un Pedido."
      }
    },
    "/Pedido/{id}/estado": {
      "get": {
        "parameters": [
          {
            "description": "Pedido id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "refresh",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Estados posibles en que puede encontrarse un pedido",
                  "properties": {
                    "descripcion": {
                      "maxLength": 256,
                      "type": "string"
                    },
                    "detalle": {
                      "maxLength": 256,
                      "type": "string"
                    },
                    "estadoCancelado": {
                      "default": 0,
                      "description": "Cancelado: No se puede pasar a este estado desde un estado final. No se puede modificar este estado.",
                      "format": "double",
                      "maxLength": 1,
                      "type": "number"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 2,
                      "maximum": 10,
                      "minimum": 1,
                      "type": "number"
                    },
                    "nombreEstado": {
                      "maxLength": 64,
                      "type": "string"
                    },
                    "soloEstadoFinal": {
                      "default": 0,
                      "description": "No se puede cambiar el estado de un pedido que está en un estado final (Entregado o Fallido)",
                      "format": "double",
                      "maxLength": 1,
                      "type": "number"
                    },
                    "soloEstadoInicial": {
                      "default": 0,
                      "description": "No se puede devolver un pedido al estado inicial cuando ha pasado por otro estado",
                      "format": "double",
                      "maxLength": 1,
                      "type": "number"
                    }
                  },
                  "required": [
                    "id",
                    "nombreEstado",
                    "descripcion",
                    "detalle"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Pedido"
        ],
        "deprecated": false,
        "description": "Muestra el Estado Actual de un Pedido.",
        "oldsummary": "Capta la relación belongsTo estado.",
        "operationId": "Pedido.prototype.__get__estado",
        "summary": "Muestra el Estado Actual de un Pedido."
      }
    },
    "/Pedido/{id}/historial": {
      "get": {
        "parameters": [
          {
            "description": "Pedido id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "description": "Historial de los distintos estados por los que ha pasado un pedido",
                    "properties": {
                      "id": {
                        "format": "integer",
                        "type": "number"
                      },
                      "idEstado": {
                        "format": "integer",
                        "type": "number"
                      },
                      "idPedido": {
                        "format": "integer",
                        "type": "number"
                      }
                    },
                    "required": [
                      "id",
                      "idPedido",
                      "idEstado"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Pedido"
        ],
        "deprecated": false,
        "description": "Lista historial de un Pedido.",
        "oldsummary": "historial consultas de Pedido.",
        "operationId": "Pedido.prototype.__get__historial",
        "summary": "Lista historial de un Pedido."
      }
    },
    "/Pedido/{id}/mediopago": {
      "get": {
        "parameters": [
          {
            "description": "Pedido id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "refresh",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Los medios de pago de un Cliente",
                  "properties": {
                    "alias": {
                      "type": "string"
                    },
                    "creditCardType": {
                      "default": "Visa",
                      "type": "string"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idCliente": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idEstado": {
                      "default": 1,
                      "format": "integer",
                      "maxLength": 2,
                      "type": "number"
                    },
                    "last4CardDigits": {
                      "maxLength": 4,
                      "pattern": "\\d{4}",
                      "type": "string"
                    },
                    "nombreEstado": {
                      "type": "string"
                    },
                    "numero": {
                      "maxLength": 20,
                      "pattern": "\\*{4} \\*{4} \\*{4} \\d{4}",
                      "type": "string"
                    },
                    "ordenCompra": {
                      "type": "string"
                    },
                    "responseCode": {
                      "type": "string"
                    },
                    "responseMessage": {
                      "maxLength": 65535,
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Pedido"
        ],
        "deprecated": false,
        "description": "Muestra el Medio de Pago asociado a un Pedido.",
        "oldsummary": "Capta la relación belongsTo mediopago.",
        "operationId": "Pedido.prototype.__get__mediopago",
        "summary": "Muestra el Medio de Pago asociado a un Pedido."
      }
    },
    "/Pedido/{id}/resumen": {
      "get": {
        "parameters": [
          {
            "description": "Pedido id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Pedido"
        ],
        "deprecated": false,
        "description": "Lista un resumen del pedido",
        "oldsummary": "Lista un resumen del pedido",
        "operationId": "Pedido.prototype.resumen",
        "summary": "Lista un resumen del pedido"
      }
    },
    "/Pedido/{id}/transaccion": {
      "get": {
        "parameters": [
          {
            "description": "Pedido id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "refresh",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Transacción registrada a través de Webpay OneClick",
                  "properties": {
                    "amount": {
                      "format": "double",
                      "type": "number"
                    },
                    "authorizationCode": {
                      "type": "string"
                    },
                    "buyOrder": {
                      "format": "double",
                      "type": "number"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "creditCardType": {
                      "default": "Visa",
                      "type": "string"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 16,
                      "maximum": 8565073562300389,
                      "minimum": 1565000000000001,
                      "pattern": "\\d{16}",
                      "type": "number"
                    },
                    "idMediopago": {
                      "format": "double",
                      "type": "number"
                    },
                    "idPedido": {
                      "format": "double",
                      "type": "number"
                    },
                    "last4CardDigits": {
                      "default": "0000",
                      "maxLength": 4,
                      "pattern": "\\d{4}",
                      "type": "string"
                    },
                    "responseCode": {
                      "format": "double",
                      "type": "number"
                    },
                    "responseCodeLocaleSpanish": {
                      "maxLength": 65535,
                      "type": "string"
                    },
                    "responseMessage": {
                      "maxLength": 65535,
                      "type": "string"
                    },
                    "reverseCode": {
                      "type": "string"
                    },
                    "status": {
                      "maxLength": 32,
                      "type": "string"
                    },
                    "tbkUser": {
                      "type": "string"
                    },
                    "transactionId": {
                      "format": "double",
                      "type": "number"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "idMediopago",
                    "amount",
                    "last4CardDigits"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Pedido"
        ],
        "deprecated": false,
        "description": "Muestra transaccion un Pedido.",
        "oldsummary": "Capta la relación hasOne transaccion.",
        "operationId": "Pedido.prototype.__get__transaccion",
        "summary": "Muestra transaccion un Pedido."
      }
    },
    "/Producto": {
      "get": {
        "parameters": [
          {
            "description": "Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "description": "Los productos disponibles para comprar",
                    "properties": {
                      "descripcion": {
                        "maxLength": 65535,
                        "type": "string"
                      },
                      "descuento": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "id": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idCategoria": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "type": "number"
                      },
                      "idMarca": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "type": "number"
                      },
                      "image": {
                        "format": "uri",
                        "maxLength": 512,
                        "type": "string"
                      },
                      "isButton": {
                        "description": "Define si el producto es un botón o un consumible",
                        "type": "boolean"
                      },
                      "nombreMarca": {
                        "description": "Marca del producto",
                        "maxLength": 64,
                        "type": "string"
                      },
                      "nombre_categoria": {
                        "maxLength": 64,
                        "type": "string"
                      },
                      "precioBase": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "sku": {
                        "format": "[A-Z]{5,8}00\\w{2}",
                        "maxLength": 14,
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "descripcion",
                      "idCategoria",
                      "idMarca",
                      "precioBase",
                      "descuento"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Producto"
        ],
        "deprecated": false,
        "description": "Lista completa de Productos (filtro opcional).",
        "oldsummary": "Find all instances of the model matched by filter from the data source.",
        "operationId": "Producto.find",
        "summary": "Lista completa de Productos (filtro opcional)."
      }
    },
    "/Producto/botones": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "description": "Los botones de un Cliente",
                    "properties": {
                      "comment": {
                        "description": "Comentario arbitrario en esta entidad",
                        "maxLength": 512,
                        "type": "string"
                      },
                      "id": {
                        "maxLength": 12,
                        "pattern": "[0-9A-F]{12}",
                        "type": "string"
                      },
                      "idCliente": {
                        "description": "ID del cliente que compró este dot",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idDireccion": {
                        "description": "Dirección de despacho asociada a este botón",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idMarca": {
                        "description": "Marca que limita los productos de este botón",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idMediopago": {
                        "description": "Medio de pago asociado a este botón",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "isActive": {
                        "default": true,
                        "type": "boolean"
                      },
                      "nombreMarca": {
                        "description": "Marca del botón",
                        "maxLength": 64,
                        "type": "string"
                      },
                      "saldo": {
                        "default": 5000,
                        "description": "Saldo a favor cargado en el botón",
                        "format": "integer",
                        "maxLength": 5,
                        "maximum": 99999,
                        "minimum": 0,
                        "pattern": "\\d{5}",
                        "type": "number"
                      },
                      "ssid": {
                        "description": "SSID de la wifi asociada al botón",
                        "maxLength": 128,
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "idCliente"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Producto"
        ],
        "deprecated": false,
        "description": "Lista Productos de tipo Botón.",
        "oldsummary": "botones consultas de Producto.",
        "operationId": "Producto.__get__botones",
        "summary": "Lista Productos de tipo Botón."
      }
    },
    "/Producto/consumibles": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "description": "Los productos disponibles para comprar",
                    "properties": {
                      "descripcion": {
                        "maxLength": 65535,
                        "type": "string"
                      },
                      "descuento": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "id": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idCategoria": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "type": "number"
                      },
                      "idMarca": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "type": "number"
                      },
                      "image": {
                        "format": "uri",
                        "maxLength": 512,
                        "type": "string"
                      },
                      "isButton": {
                        "description": "Define si el producto es un botón o un consumible",
                        "type": "boolean"
                      },
                      "nombreMarca": {
                        "description": "Marca del producto",
                        "maxLength": 64,
                        "type": "string"
                      },
                      "nombre_categoria": {
                        "maxLength": 64,
                        "type": "string"
                      },
                      "precioBase": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "sku": {
                        "format": "[A-Z]{5,8}00\\w{2}",
                        "maxLength": 14,
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "descripcion",
                      "idCategoria",
                      "idMarca",
                      "precioBase",
                      "descuento"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "Producto"
        ],
        "deprecated": false,
        "description": "Lista Productos de tipo consumible.",
        "oldsummary": "consumibles consultas de Producto.",
        "operationId": "Producto.__get__consumibles",
        "summary": "Lista Productos de tipo consumible."
      }
    },
    "/Producto/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Model id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "description": "Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Los productos disponibles para comprar",
                  "properties": {
                    "descripcion": {
                      "maxLength": 65535,
                      "type": "string"
                    },
                    "descuento": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idCategoria": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "type": "number"
                    },
                    "idMarca": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "type": "number"
                    },
                    "image": {
                      "format": "uri",
                      "maxLength": 512,
                      "type": "string"
                    },
                    "isButton": {
                      "description": "Define si el producto es un botón o un consumible",
                      "type": "boolean"
                    },
                    "nombreMarca": {
                      "description": "Marca del producto",
                      "maxLength": 64,
                      "type": "string"
                    },
                    "nombre_categoria": {
                      "maxLength": 64,
                      "type": "string"
                    },
                    "precioBase": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "sku": {
                      "format": "[A-Z]{5,8}00\\w{2}",
                      "maxLength": 14,
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "descripcion",
                    "idCategoria",
                    "idMarca",
                    "precioBase",
                    "descuento"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Producto"
        ],
        "deprecated": false,
        "description": "Encuentra un Producto por {{id}} en la BBDD.",
        "oldsummary": "Find a model instance by {{id}} from the data source.",
        "operationId": "Producto.findById",
        "summary": "Encuentra un Producto por {{id}} en la BBDD."
      }
    },
    "/Producto/{id}/categoria": {
      "get": {
        "parameters": [
          {
            "description": "Producto id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "refresh",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Categorías de producto",
                  "properties": {
                    "descripcion": {
                      "maxLength": 65535,
                      "type": "string"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 3,
                      "maximum": 100,
                      "minimum": 1,
                      "type": "number"
                    }
                  },
                  "required": [
                    "id",
                    "descripcion"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Producto"
        ],
        "deprecated": false,
        "description": "Muestra la Categoria de un Producto.",
        "oldsummary": "Capta la relación belongsTo categoria.",
        "operationId": "Producto.prototype.__get__categoria",
        "summary": "Muestra la Categoria de un Producto."
      }
    },
    "/Producto/{id}/comunas_restringidas": {
      "get": {
        "parameters": [
          {
            "description": "Producto id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "description": "Comuna asociada a una dirección",
                    "properties": {
                      "id": {
                        "format": "\\w{5}",
                        "maxLength": 5,
                        "type": "string"
                      },
                      "idProvincia": {
                        "maxLength": 3,
                        "type": "string"
                      },
                      "idRegion": {
                        "maxLength": 2,
                        "type": "string"
                      },
                      "nombreComuna": {
                        "maxLength": 64,
                        "type": "string"
                      },
                      "nombreProvincia": {
                        "maxLength": 256,
                        "type": "string"
                      },
                      "nombreRegion": {
                        "maxLength": 256,
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "nombreComuna",
                      "idProvincia",
                      "nombreProvincia",
                      "idRegion",
                      "nombreRegion"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Producto"
        ],
        "deprecated": false,
        "description": "Lista Comunas Restringidas de un Producto.",
        "oldsummary": "comunas_restringidas consultas de Producto.",
        "operationId": "Producto.prototype.__get__comunas_restringidas",
        "summary": "Lista Comunas Restringidas de un Producto."
      }
    },
    "/Producto/{id}/image": {
      "post": {
        "parameters": [
          {
            "description": "Producto id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "ER_DUP_ENTRY",
                      "message": "Se intentó insertar un registro duplicado",
                      "name": "Error",
                      "statusCode": 422
                    }
                  }
                },
                "schema": {
                  "description": "Se ha intentado crear una entidad existente",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "ER_DUP_ENTRY"
          }
        },
        "tags": [
          "Producto"
        ],
        "deprecated": false,
        "description": "actualiza la imagen del Producto",
        "oldsummary": "actualiza la imagen del Producto",
        "operationId": "Producto.prototype.uploadImage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Los productos disponibles para comprar",
                "properties": {
                  "descripcion": {
                    "maxLength": 65535,
                    "type": "string"
                  },
                  "descuento": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idCategoria": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "type": "number"
                  },
                  "idMarca": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "type": "number"
                  },
                  "image": {
                    "format": "uri",
                    "maxLength": 512,
                    "type": "string"
                  },
                  "isButton": {
                    "description": "Define si el producto es un botón o un consumible",
                    "type": "boolean"
                  },
                  "nombreMarca": {
                    "description": "Marca del producto",
                    "maxLength": 64,
                    "type": "string"
                  },
                  "nombre_categoria": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "precioBase": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "sku": {
                    "format": "[A-Z]{5,8}00\\w{2}",
                    "maxLength": 14,
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "descripcion",
                  "idCategoria",
                  "idMarca",
                  "precioBase",
                  "descuento"
                ],
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "additionalProperties": false,
                "description": "Los productos disponibles para comprar",
                "properties": {
                  "descripcion": {
                    "maxLength": 65535,
                    "type": "string"
                  },
                  "descuento": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "id": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "idCategoria": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "type": "number"
                  },
                  "idMarca": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "type": "number"
                  },
                  "image": {
                    "format": "uri",
                    "maxLength": 512,
                    "type": "string"
                  },
                  "isButton": {
                    "description": "Define si el producto es un botón o un consumible",
                    "type": "boolean"
                  },
                  "nombreMarca": {
                    "description": "Marca del producto",
                    "maxLength": 64,
                    "type": "string"
                  },
                  "nombre_categoria": {
                    "maxLength": 64,
                    "type": "string"
                  },
                  "precioBase": {
                    "format": "integer",
                    "maxLength": 7,
                    "maximum": 10000,
                    "minimum": 1,
                    "pattern": "\\d{3}",
                    "type": "number"
                  },
                  "sku": {
                    "format": "[A-Z]{5,8}00\\w{2}",
                    "maxLength": 14,
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "descripcion",
                  "idCategoria",
                  "idMarca",
                  "precioBase",
                  "descuento"
                ],
                "type": "object"
              }
            }
          }
        },
        "summary": "actualiza la imagen del Producto"
      }
    },
    "/Producto/{id}/marca": {
      "get": {
        "parameters": [
          {
            "description": "Producto id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "refresh",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Marcas de producto (pueden ser de un mismo fabricante)",
                  "properties": {
                    "categoriaPrincipal": {
                      "maxLength": 64,
                      "type": "string"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 7,
                      "maximum": 10000,
                      "minimum": 1,
                      "pattern": "\\d{3}",
                      "type": "number"
                    },
                    "idFabricante": {
                      "format": "integer",
                      "type": "number"
                    },
                    "image": {
                      "maxLength": 512,
                      "type": "string"
                    },
                    "nombreMarca": {
                      "maxLength": 65535,
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "nombreMarca",
                    "idFabricante"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "Producto"
        ],
        "deprecated": false,
        "description": "Muestra la Marca de un Producto.",
        "oldsummary": "Capta la relación belongsTo marca.",
        "operationId": "Producto.prototype.__get__marca",
        "summary": "Muestra la Marca de un Producto."
      }
    },
    "/ProductoCategoria": {
      "get": {
        "parameters": [
          {
            "description": "Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "description": "Categorías de producto",
                    "properties": {
                      "descripcion": {
                        "maxLength": 65535,
                        "type": "string"
                      },
                      "id": {
                        "format": "integer",
                        "maxLength": 3,
                        "maximum": 100,
                        "minimum": 1,
                        "type": "number"
                      }
                    },
                    "required": [
                      "id",
                      "descripcion"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "ProductoCategoria"
        ],
        "deprecated": false,
        "description": "Lista completa de Categorías de Producto (filtro opcional).",
        "oldsummary": "Find all instances of the model matched by filter from the data source.",
        "operationId": "ProductoCategoria.find",
        "summary": "Lista completa de Categorías de Producto (filtro opcional)."
      }
    },
    "/ProductoCategoria/botones": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "description": "Categorías de producto",
                    "properties": {
                      "descripcion": {
                        "maxLength": 65535,
                        "type": "string"
                      },
                      "id": {
                        "format": "integer",
                        "maxLength": 3,
                        "maximum": 100,
                        "minimum": 1,
                        "type": "number"
                      }
                    },
                    "required": [
                      "id",
                      "descripcion"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "ProductoCategoria"
        ],
        "deprecated": false,
        "description": "Lista Productos de tipo Botón de una Categoría de Producto.",
        "oldsummary": "botones consultas de ProductoCategoria.",
        "operationId": "ProductoCategoria.__get__botones",
        "summary": "Lista Productos de tipo Botón de una Categoría de Producto."
      }
    },
    "/ProductoCategoria/consumibles": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "description": "Categorías de producto",
                    "properties": {
                      "descripcion": {
                        "maxLength": 65535,
                        "type": "string"
                      },
                      "id": {
                        "format": "integer",
                        "maxLength": 3,
                        "maximum": 100,
                        "minimum": 1,
                        "type": "number"
                      }
                    },
                    "required": [
                      "id",
                      "descripcion"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "ProductoCategoria"
        ],
        "deprecated": false,
        "description": "Lista Productos de tipo consumible de una Categoría de Producto.",
        "oldsummary": "consumibles consultas de ProductoCategoria.",
        "operationId": "ProductoCategoria.__get__consumibles",
        "summary": "Lista Productos de tipo consumible de una Categoría de Producto."
      }
    },
    "/ProductoCategoria/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Model id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "description": "Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Categorías de producto",
                  "properties": {
                    "descripcion": {
                      "maxLength": 65535,
                      "type": "string"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 3,
                      "maximum": 100,
                      "minimum": 1,
                      "type": "number"
                    }
                  },
                  "required": [
                    "id",
                    "descripcion"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "ProductoCategoria"
        ],
        "deprecated": false,
        "description": "Encuentra una Categoría de Producto por {{id}} en la BBDD.",
        "oldsummary": "Find a model instance by {{id}} from the data source.",
        "operationId": "ProductoCategoria.findById",
        "summary": "Encuentra una Categoría de Producto por {{id}} en la BBDD."
      }
    },
    "/VentanaHoraria": {
      "get": {
        "parameters": [
          {
            "description": "Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string (`{\"where\":{\"something\":\"value\"}}`).  See https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries for more details.",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "description": "Franjas horarias de despacho (8:00 a 22:00) y entrega inmediata",
                    "properties": {
                      "costoDespacho": {
                        "format": "integer",
                        "maxLength": 5,
                        "maximum": 99999,
                        "minimum": 0,
                        "pattern": "\\d{1,5}",
                        "type": "number"
                      },
                      "horaFin": {
                        "format": "integer",
                        "type": "number"
                      },
                      "horaInicio": {
                        "format": "integer",
                        "type": "number"
                      },
                      "id": {
                        "format": "integer",
                        "maxLength": 2,
                        "maximum": 26,
                        "minimum": 1,
                        "type": "number"
                      },
                      "isInmediate": {
                        "default": false,
                        "type": "boolean"
                      },
                      "nombre": {
                        "maxLength": 64,
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "nombre",
                      "horaInicio",
                      "horaFin",
                      "costoDespacho"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          }
        },
        "tags": [
          "VentanaHoraria"
        ],
        "deprecated": false,
        "description": "Lista completa de Ventanas Horarias (filtro opcional).",
        "oldsummary": "Find all instances of the model matched by filter from the data source.",
        "operationId": "VentanaHoraria.find",
        "summary": "Lista completa de Ventanas Horarias (filtro opcional)."
      }
    },
    "/VentanaHoraria/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Model id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "description": "Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Franjas horarias de despacho (8:00 a 22:00) y entrega inmediata",
                  "properties": {
                    "costoDespacho": {
                      "format": "integer",
                      "maxLength": 5,
                      "maximum": 99999,
                      "minimum": 0,
                      "pattern": "\\d{1,5}",
                      "type": "number"
                    },
                    "horaFin": {
                      "format": "integer",
                      "type": "number"
                    },
                    "horaInicio": {
                      "format": "integer",
                      "type": "number"
                    },
                    "id": {
                      "format": "integer",
                      "maxLength": 2,
                      "maximum": 26,
                      "minimum": 1,
                      "type": "number"
                    },
                    "isInmediate": {
                      "default": false,
                      "type": "boolean"
                    },
                    "nombre": {
                      "maxLength": 64,
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "nombre",
                    "horaInicio",
                    "horaFin",
                    "costoDespacho"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "VentanaHoraria"
        ],
        "deprecated": false,
        "description": "Encuentra una Ventana Horaria por {{id}} en la BBDD.",
        "oldsummary": "Find a model instance by {{id}} from the data source.",
        "operationId": "VentanaHoraria.findById",
        "summary": "Encuentra una Ventana Horaria por {{id}} en la BBDD."
      }
    },
    "/VentanaHoraria/{id}/pedidos": {
      "get": {
        "parameters": [
          {
            "description": "VentanaHoraria id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "format": "JSON",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": false,
                    "description": "Pedido generado por Botón o App. Sólo visible para Cliente dueño y Operadores",
                    "properties": {
                      "costoDespacho": {
                        "default": 0,
                        "description": "Costo del despacho, a priori cero para pedidos cuyo neto es mayor a 10.000",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 250000,
                        "minimum": 0,
                        "pattern": "\\d{6}",
                        "type": "number"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "descuento": {
                        "default": 0,
                        "description": "Descuento aplicado por promociones o saldo a favor en el Botón",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 250000,
                        "minimum": 0,
                        "pattern": "\\d{6}",
                        "type": "number"
                      },
                      "descuento_primer_pedido": {
                        "default": 0,
                        "description": "Descuento aplicado sobre el despacho en el primer pedido del cliente",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 250000,
                        "minimum": 0,
                        "pattern": "\\d{6}",
                        "type": "number"
                      },
                      "id": {
                        "format": "integer",
                        "maxLength": 5,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idBoton": {
                        "maxLength": 12,
                        "pattern": "[0-9A-F]{12}",
                        "type": "string"
                      },
                      "idCliente": {
                        "description": "ID del cliente que gatilla el pedido (se lee del token)",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idDireccion": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idEstado": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 9,
                        "minimum": 1,
                        "pattern": "\\d{1}",
                        "type": "number"
                      },
                      "idMarca": {
                        "description": "Marca que limita los productos de este botón",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idMediopago": {
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idProducto": {
                        "format": "integer",
                        "maxLength": 5,
                        "maximum": 10000,
                        "minimum": 1,
                        "pattern": "\\d{3}",
                        "type": "number"
                      },
                      "idTransaccion": {
                        "format": "integer",
                        "maxLength": 16,
                        "maximum": 8565073562300389,
                        "minimum": 1565000000000001,
                        "pattern": "\\d{16}",
                        "type": "number"
                      },
                      "nombreMarca": {
                        "description": "Marca del los productos del pedido",
                        "maxLength": 64,
                        "type": "string"
                      },
                      "precioNeto": {
                        "description": "Precio neto, igual a la suma de los productos que componen el pedido",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 250000,
                        "minimum": 1,
                        "pattern": "\\d{6}",
                        "type": "number"
                      },
                      "precioTotal": {
                        "description": "Precio a pagar por el pedido = (precio neto + costo despacho - descuento)",
                        "format": "integer",
                        "maxLength": 7,
                        "maximum": 250000,
                        "minimum": 1,
                        "pattern": "\\d{6}",
                        "type": "number"
                      },
                      "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Request was successful"
          },
          "401": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "message": "Autorización necesaria",
                      "name": "Error",
                      "statusCode": 401
                    }
                  }
                },
                "schema": {
                  "description": "Requiere Autorización (login)",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "AUTHORIZATION_REQUIRED"
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "code": "MODEL_NOT_FOUND",
                      "message": "no se ha encontrado el modelo solicitado",
                      "name": "Error",
                      "statusCode": 404
                    }
                  }
                },
                "schema": {
                  "description": "No se ha encontrado instancia del modelo",
                  "properties": {
                    "error": {
                      "type": "x-any"
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "MODEL_NOT_FOUND"
          }
        },
        "tags": [
          "VentanaHoraria"
        ],
        "deprecated": false,
        "description": "Lista pedidos (propios) dentro de una Ventana Horaria.",
        "oldsummary": "pedidos consultas de VentanaHoraria.",
        "operationId": "VentanaHoraria.prototype.__get__pedidos",
        "summary": "Lista pedidos (propios) dentro de una Ventana Horaria."
      }
    }
  },
  "components": {
    "requestBodies": {
      "Boton": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "description": "Los botones de un Cliente",
              "properties": {
                "comment": {
                  "description": "Comentario arbitrario en esta entidad",
                  "maxLength": 512,
                  "type": "string"
                },
                "id": {
                  "maxLength": 12,
                  "pattern": "[0-9A-F]{12}",
                  "type": "string"
                },
                "idCliente": {
                  "description": "ID del cliente que compró este dot",
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "idDireccion": {
                  "description": "Dirección de despacho asociada a este botón",
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "idMarca": {
                  "description": "Marca que limita los productos de este botón",
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "idMediopago": {
                  "description": "Medio de pago asociado a este botón",
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "isActive": {
                  "default": true,
                  "type": "boolean"
                },
                "nombreMarca": {
                  "description": "Marca del botón",
                  "maxLength": 64,
                  "type": "string"
                },
                "saldo": {
                  "default": 5000,
                  "description": "Saldo a favor cargado en el botón",
                  "format": "integer",
                  "maxLength": 5,
                  "maximum": 99999,
                  "minimum": 0,
                  "pattern": "\\d{5}",
                  "type": "number"
                },
                "ssid": {
                  "description": "SSID de la wifi asociada al botón",
                  "maxLength": 128,
                  "type": "string"
                }
              },
              "required": [
                "id",
                "idCliente"
              ],
              "type": "object"
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "additionalProperties": false,
              "description": "Los botones de un Cliente",
              "properties": {
                "comment": {
                  "description": "Comentario arbitrario en esta entidad",
                  "maxLength": 512,
                  "type": "string"
                },
                "id": {
                  "maxLength": 12,
                  "pattern": "[0-9A-F]{12}",
                  "type": "string"
                },
                "idCliente": {
                  "description": "ID del cliente que compró este dot",
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "idDireccion": {
                  "description": "Dirección de despacho asociada a este botón",
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "idMarca": {
                  "description": "Marca que limita los productos de este botón",
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "idMediopago": {
                  "description": "Medio de pago asociado a este botón",
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "isActive": {
                  "default": true,
                  "type": "boolean"
                },
                "nombreMarca": {
                  "description": "Marca del botón",
                  "maxLength": 64,
                  "type": "string"
                },
                "saldo": {
                  "default": 5000,
                  "description": "Saldo a favor cargado en el botón",
                  "format": "integer",
                  "maxLength": 5,
                  "maximum": 99999,
                  "minimum": 0,
                  "pattern": "\\d{5}",
                  "type": "number"
                },
                "ssid": {
                  "description": "SSID de la wifi asociada al botón",
                  "maxLength": 128,
                  "type": "string"
                }
              },
              "required": [
                "id",
                "idCliente"
              ],
              "type": "object"
            }
          }
        }
      },
      "Cliente": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "description": "Usuarios finales del servicio myDot. Tienen la App instalada en su dispositivo",
              "properties": {
                "apellido": {
                  "maxLength": 128,
                  "type": "string"
                },
                "avatar": {
                  "default": "https://static.mydot.app/avatar.png",
                  "maxLength": 512,
                  "type": "string"
                },
                "despachoGratis": {
                  "default": 1,
                  "format": "integer",
                  "maxLength": 1,
                  "type": "number"
                },
                "email": {
                  "format": "email",
                  "maxLength": 36,
                  "type": "string"
                },
                "id": {
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "id_direccion_default": {
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "id_mediopago_default": {
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "rut": {
                  "maxLength": 12,
                  "pattern": "\\d{1,2}\\.{0,1}\\d{3}\\.{0,1}\\d{3}-[0-9Kk]",
                  "type": "string"
                },
                "telefono": {
                  "maxLength": 15,
                  "pattern": "^56\\d{1} \\d{4} \\d{4}$",
                  "type": "string"
                },
                "updatedAt": {
                  "format": "date-time",
                  "type": "string"
                },
                "username": {
                  "maxLength": 128,
                  "type": "string"
                }
              },
              "required": [
                "email"
              ],
              "type": "object"
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "additionalProperties": false,
              "description": "Usuarios finales del servicio myDot. Tienen la App instalada en su dispositivo",
              "properties": {
                "apellido": {
                  "maxLength": 128,
                  "type": "string"
                },
                "avatar": {
                  "default": "https://static.mydot.app/avatar.png",
                  "maxLength": 512,
                  "type": "string"
                },
                "despachoGratis": {
                  "default": 1,
                  "format": "integer",
                  "maxLength": 1,
                  "type": "number"
                },
                "email": {
                  "format": "email",
                  "maxLength": 36,
                  "type": "string"
                },
                "id": {
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "id_direccion_default": {
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "id_mediopago_default": {
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "rut": {
                  "maxLength": 12,
                  "pattern": "\\d{1,2}\\.{0,1}\\d{3}\\.{0,1}\\d{3}-[0-9Kk]",
                  "type": "string"
                },
                "telefono": {
                  "maxLength": 15,
                  "pattern": "^56\\d{1} \\d{4} \\d{4}$",
                  "type": "string"
                },
                "updatedAt": {
                  "format": "date-time",
                  "type": "string"
                },
                "username": {
                  "maxLength": 128,
                  "type": "string"
                }
              },
              "required": [
                "email"
              ],
              "type": "object"
            }
          }
        }
      },
      "Cliente.loginCredentials": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object"
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "type": "object"
            }
          }
        },
        "required": true
      },
      "Direccion": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "description": "Las direcciones de un Cliente",
              "properties": {
                "comuna": {
                  "maxLength": 64,
                  "type": "string"
                },
                "conCobertura": {
                  "default": false,
                  "type": "boolean"
                },
                "direccion": {
                  "maxLength": 65535,
                  "type": "string"
                },
                "geom": {
                  "properties": {
                    "lat": {
                      "type": "number"
                    },
                    "lng": {
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "idCliente": {
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "instrucciones": {
                  "description": "Indicaciones para llegar, despachar, etc a esta dirección",
                  "type": "string"
                },
                "lat": {
                  "default": -70.38,
                  "format": "float",
                  "maxLength": 7,
                  "maximum": 80,
                  "minimum": -80,
                  "type": "number"
                },
                "link": {
                  "type": "string"
                },
                "lng": {
                  "default": -30.78,
                  "format": "float",
                  "maxLength": 7,
                  "maximum": 80,
                  "minimum": -80,
                  "type": "number"
                },
                "numero": {
                  "description": "Si aplica, el depto, oficina, letra o numeración interior",
                  "maxLength": 512,
                  "type": "string"
                },
                "pais": {
                  "maxLength": 64,
                  "type": "string"
                },
                "region": {
                  "maxLength": 128,
                  "type": "string"
                }
              },
              "required": [
                "direccion",
                "lng",
                "lat"
              ],
              "type": "object"
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "additionalProperties": false,
              "description": "Las direcciones de un Cliente",
              "properties": {
                "comuna": {
                  "maxLength": 64,
                  "type": "string"
                },
                "conCobertura": {
                  "default": false,
                  "type": "boolean"
                },
                "direccion": {
                  "maxLength": 65535,
                  "type": "string"
                },
                "geom": {
                  "properties": {
                    "lat": {
                      "type": "number"
                    },
                    "lng": {
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "idCliente": {
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "instrucciones": {
                  "description": "Indicaciones para llegar, despachar, etc a esta dirección",
                  "type": "string"
                },
                "lat": {
                  "default": -70.38,
                  "format": "float",
                  "maxLength": 7,
                  "maximum": 80,
                  "minimum": -80,
                  "type": "number"
                },
                "link": {
                  "type": "string"
                },
                "lng": {
                  "default": -30.78,
                  "format": "float",
                  "maxLength": 7,
                  "maximum": 80,
                  "minimum": -80,
                  "type": "number"
                },
                "numero": {
                  "description": "Si aplica, el depto, oficina, letra o numeración interior",
                  "maxLength": 512,
                  "type": "string"
                },
                "pais": {
                  "maxLength": 64,
                  "type": "string"
                },
                "region": {
                  "maxLength": 128,
                  "type": "string"
                }
              },
              "required": [
                "direccion",
                "lng",
                "lat"
              ],
              "type": "object"
            }
          }
        }
      },
      "Misc": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "description": "Endpoints no relacionados a ningún modelo en particular",
              "properties": {
                "id": {
                  "format": "double",
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "additionalProperties": false,
              "description": "Endpoints no relacionados a ningún modelo en particular",
              "properties": {
                "id": {
                  "format": "double",
                  "type": "number"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "Pedido": {
        "content": {
          "application/json": {
            "schema": {
              "additionalProperties": false,
              "description": "Pedido generado por Botón o App. Sólo visible para Cliente dueño y Operadores",
              "properties": {
                "costoDespacho": {
                  "default": 0,
                  "description": "Costo del despacho, a priori cero para pedidos cuyo neto es mayor a 10.000",
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 250000,
                  "minimum": 0,
                  "pattern": "\\d{6}",
                  "type": "number"
                },
                "createdAt": {
                  "format": "date-time",
                  "type": "string"
                },
                "descuento": {
                  "default": 0,
                  "description": "Descuento aplicado por promociones o saldo a favor en el Botón",
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 250000,
                  "minimum": 0,
                  "pattern": "\\d{6}",
                  "type": "number"
                },
                "descuento_primer_pedido": {
                  "default": 0,
                  "description": "Descuento aplicado sobre el despacho en el primer pedido del cliente",
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 250000,
                  "minimum": 0,
                  "pattern": "\\d{6}",
                  "type": "number"
                },
                "id": {
                  "format": "integer",
                  "maxLength": 5,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "idBoton": {
                  "maxLength": 12,
                  "pattern": "[0-9A-F]{12}",
                  "type": "string"
                },
                "idCliente": {
                  "description": "ID del cliente que gatilla el pedido (se lee del token)",
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "idDireccion": {
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "idEstado": {
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 9,
                  "minimum": 1,
                  "pattern": "\\d{1}",
                  "type": "number"
                },
                "idMarca": {
                  "description": "Marca que limita los productos de este botón",
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "idMediopago": {
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "idProducto": {
                  "format": "integer",
                  "maxLength": 5,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "idTransaccion": {
                  "format": "integer",
                  "maxLength": 16,
                  "maximum": 8565073562300389,
                  "minimum": 1565000000000001,
                  "pattern": "\\d{16}",
                  "type": "number"
                },
                "nombreMarca": {
                  "description": "Marca del los productos del pedido",
                  "maxLength": 64,
                  "type": "string"
                },
                "precioNeto": {
                  "description": "Precio neto, igual a la suma de los productos que componen el pedido",
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 250000,
                  "minimum": 1,
                  "pattern": "\\d{6}",
                  "type": "number"
                },
                "precioTotal": {
                  "description": "Precio a pagar por el pedido = (precio neto + costo despacho - descuento)",
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 250000,
                  "minimum": 1,
                  "pattern": "\\d{6}",
                  "type": "number"
                },
                "updatedAt": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "additionalProperties": false,
              "description": "Pedido generado por Botón o App. Sólo visible para Cliente dueño y Operadores",
              "properties": {
                "costoDespacho": {
                  "default": 0,
                  "description": "Costo del despacho, a priori cero para pedidos cuyo neto es mayor a 10.000",
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 250000,
                  "minimum": 0,
                  "pattern": "\\d{6}",
                  "type": "number"
                },
                "createdAt": {
                  "format": "date-time",
                  "type": "string"
                },
                "descuento": {
                  "default": 0,
                  "description": "Descuento aplicado por promociones o saldo a favor en el Botón",
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 250000,
                  "minimum": 0,
                  "pattern": "\\d{6}",
                  "type": "number"
                },
                "descuento_primer_pedido": {
                  "default": 0,
                  "description": "Descuento aplicado sobre el despacho en el primer pedido del cliente",
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 250000,
                  "minimum": 0,
                  "pattern": "\\d{6}",
                  "type": "number"
                },
                "id": {
                  "format": "integer",
                  "maxLength": 5,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "idBoton": {
                  "maxLength": 12,
                  "pattern": "[0-9A-F]{12}",
                  "type": "string"
                },
                "idCliente": {
                  "description": "ID del cliente que gatilla el pedido (se lee del token)",
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "idDireccion": {
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "idEstado": {
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 9,
                  "minimum": 1,
                  "pattern": "\\d{1}",
                  "type": "number"
                },
                "idMarca": {
                  "description": "Marca que limita los productos de este botón",
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "idMediopago": {
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "idProducto": {
                  "format": "integer",
                  "maxLength": 5,
                  "maximum": 10000,
                  "minimum": 1,
                  "pattern": "\\d{3}",
                  "type": "number"
                },
                "idTransaccion": {
                  "format": "integer",
                  "maxLength": 16,
                  "maximum": 8565073562300389,
                  "minimum": 1565000000000001,
                  "pattern": "\\d{16}",
                  "type": "number"
                },
                "nombreMarca": {
                  "description": "Marca del los productos del pedido",
                  "maxLength": 64,
                  "type": "string"
                },
                "precioNeto": {
                  "description": "Precio neto, igual a la suma de los productos que componen el pedido",
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 250000,
                  "minimum": 1,
                  "pattern": "\\d{6}",
                  "type": "number"
                },
                "precioTotal": {
                  "description": "Precio a pagar por el pedido = (precio neto + costo despacho - descuento)",
                  "format": "integer",
                  "maxLength": 7,
                  "maximum": 250000,
                  "minimum": 1,
                  "pattern": "\\d{6}",
                  "type": "number"
                },
                "updatedAt": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "schemas": {
      "ACCESS_DENIED": {
        "description": "Se intentó acceder un modelo sobre el cual no se tiene permiso",
        "properties": {
          "error": {
            "type": "x-any"
          }
        },
        "required": [
          "error"
        ],
        "type": "object"
      },
      "AUTHORIZATION_REQUIRED": {
        "description": "Requiere Autorización (login)",
        "properties": {
          "error": {
            "type": "x-any"
          }
        },
        "required": [
          "error"
        ],
        "type": "object"
      },
      "BAD_REQUEST": {
        "description": "Petición tiene error de sintaxis",
        "properties": {
          "error": {
            "type": "x-any"
          }
        },
        "required": [
          "error"
        ],
        "type": "object"
      },
      "Boton": {
        "additionalProperties": false,
        "description": "Los botones de un Cliente",
        "properties": {
          "comment": {
            "description": "Comentario arbitrario en esta entidad",
            "maxLength": 512,
            "type": "string"
          },
          "id": {
            "maxLength": 12,
            "pattern": "[0-9A-F]{12}",
            "type": "string"
          },
          "idCliente": {
            "description": "ID del cliente que compró este dot",
            "format": "integer",
            "maxLength": 7,
            "maximum": 10000,
            "minimum": 1,
            "pattern": "\\d{3}",
            "type": "number"
          },
          "idDireccion": {
            "description": "Dirección de despacho asociada a este botón",
            "format": "integer",
            "maxLength": 7,
            "maximum": 10000,
            "minimum": 1,
            "pattern": "\\d{3}",
            "type": "number"
          },
          "idMarca": {
            "description": "Marca que limita los productos de este botón",
            "format": "integer",
            "maxLength": 7,
            "maximum": 10000,
            "minimum": 1,
            "pattern": "\\d{3}",
            "type": "number"
          },
          "idMediopago": {
            "description": "Medio de pago asociado a este botón",
            "format": "integer",
            "maxLength": 7,
            "maximum": 10000,
            "minimum": 1,
            "pattern": "\\d{3}",
            "type": "number"
          },
          "isActive": {
            "default": true,
            "type": "boolean"
          },
          "nombreMarca": {
            "description": "Marca del botón",
            "maxLength": 64,
            "type": "string"
          },
          "saldo": {
            "default": 5000,
            "description": "Saldo a favor cargado en el botón",
            "format": "integer",
            "maxLength": 5,
            "maximum": 99999,
            "minimum": 0,
            "pattern": "\\d{5}",
            "type": "number"
          },
          "ssid": {
            "description": "SSID de la wifi asociada al botón",
            "maxLength": 128,
            "type": "string"
          }
        },
        "required": [
          "id",
          "idCliente"
        ],
        "type": "object"
      },
      "BotonDisponible": {
        "additionalProperties": false,
        "description": "Los botones disponibles asociados a una marca",
        "properties": {
          "id": {
            "maxLength": 12,
            "pattern": "[0-9A-F]{12}",
            "type": "string"
          },
          "idMarca": {
            "description": "Marca que limita los productos de este botón",
            "format": "integer",
            "maxLength": 7,
            "maximum": 10000,
            "minimum": 1,
            "pattern": "\\d{3}",
            "type": "number"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "BotonProducto": {
        "additionalProperties": false,
        "description": "Relación entre un botón y los productos que ordena al presionar",
        "properties": {
          "cantidad": {
            "default": 1,
            "format": "integer",
            "pattern": "\\d{1}",
            "type": "number"
          },
          "idBoton": {
            "maxLength": 12,
            "pattern": "[0-9A-F]{12}",
            "type": "string"
          },
          "idProducto": {
            "format": "integer",
            "maxLength": 7,
            "maximum": 10000,
            "minimum": 1,
            "pattern": "\\d{3}",
            "type": "number"
          }
        },
        "required": [
          "idBoton",
          "idProducto"
        ],
        "type": "object"
      },
      "BotonVentanaHoraria": {
        "additionalProperties": false,
        "description": "Representa la relación ManyToMany entre botones y ventanas horarias",
        "properties": {
          "idBoton": {
            "maxLength": 12,
            "pattern": "[0-9A-F]{12}",
            "type": "string"
          },
          "idVentana": {
            "format": "integer",
            "maxLength": 2,
            "maximum": 24,
            "minimum": 1,
            "pattern": "\\d{2}",
            "type": "number"
          }
        },
        "required": [
          "idBoton",
          "idVentana"
        ],
        "type": "object"
      },
      "Cliente": {
        "additionalProperties": false,
        "description": "Usuarios finales del servicio myDot. Tienen la App instalada en su dispositivo",
        "properties": {
          "apellido": {
            "maxLength": 128,
            "type": "string"
          },
          "avatar": {
            "default": "https://static.mydot.app/avatar.png",
            "maxLength": 512,
            "type": "string"
          },
          "despachoGratis": {
            "default": 1,
            "format": "integer",
            "maxLength": 1,
            "type": "number"
          },
          "email": {
            "format": "email",
            "maxLength": 36,
            "type": "string"
          },
          "id": {
            "format": "integer",
            "maxLength": 7,
            "maximum": 10000,
            "minimum": 1,
            "pattern": "\\d{3}",
            "type": "number"
          },
          "id_direccion_default": {
            "format": "integer",
            "maxLength": 7,
            "maximum": 10000,
            "minimum": 1,
            "pattern": "\\d{3}",
            "type": "number"
          },
          "id_mediopago_default": {
            "format": "integer",
            "maxLength": 7,
            "maximum": 10000,
            "minimum": 1,
            "pattern": "\\d{3}",
            "type": "number"
          },
          "rut": {
            "maxLength": 12,
            "pattern": "\\d{1,2}\\.{0,1}\\d{3}\\.{0,1}\\d{3}-[0-9Kk]",
            "type": "string"
          },
          "telefono": {
            "maxLength": 15,
            "pattern": "^56\\d{1} \\d{4} \\d{4}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "username": {
            "maxLength": 128,
            "type": "string"
          }
        },
        "required": [
          "email"
        ],
        "type": "object"
      },
      "Comuna": {
        "additionalProperties": false,
        "description": "Comuna asociada a una dirección",
        "properties": {
          "id": {
            "format": "\\w{5}",
            "maxLength": 5,
            "type": "string"
          },
          "idProvincia": {
            "maxLength": 3,
            "type": "string"
          },
          "idRegion": {
            "maxLength": 2,
            "type": "string"
          },
          "nombreComuna": {
            "maxLength": 64,
            "type": "string"
          },
          "nombreProvincia": {
            "maxLength": 256,
            "type": "string"
          },
          "nombreRegion": {
            "maxLength": 256,
            "type": "string"
          }
        },
        "required": [
          "id",
          "nombreComuna",
          "idProvincia",
          "nombreProvincia",
          "idRegion",
          "nombreRegion"
        ],
        "type": "object"
      },
      "Direccion": {
        "additionalProperties": false,
        "description": "Las direcciones de un Cliente",
        "properties": {
          "comuna": {
            "maxLength": 64,
            "type": "string"
          },
          "conCobertura": {
            "default": false,
            "type": "boolean"
          },
          "direccion": {
            "maxLength": 65535,
            "type": "string"
          },
          "geom": {
            "properties": {
              "lat": {
                "type": "number"
              },
              "lng": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "id": {
            "format": "integer",
            "maxLength": 7,
            "maximum": 10000,
            "minimum": 1,
            "pattern": "\\d{3}",
            "type": "number"
          },
          "idCliente": {
            "format": "integer",
            "maxLength": 7,
            "maximum": 10000,
            "minimum": 1,
            "pattern": "\\d{3}",
            "type": "number"
          },
          "instrucciones": {
            "description": "Indicaciones para llegar, despachar, etc a esta dirección",
            "type": "string"
          },
          "lat": {
            "default": -70.38,
            "format": "float",
            "maxLength": 7,
            "maximum": 80,
            "minimum": -80,
            "type": "number"
          },
          "link": {
            "type": "string"
          },
          "lng": {
            "default": -30.78,
            "format": "float",
            "maxLength": 7,
            "maximum": 80,
            "minimum": -80,
            "type": "number"
          },
          "numero": {
            "description": "Si aplica, el depto, oficina, letra o numeración interior",
            "maxLength": 512,
            "type": "string"
          },
          "pais": {
            "maxLength": 64,
            "type": "string"
          },
          "region": {
            "maxLength": 128,
            "type": "string"
          }
        },
        "required": [
          "direccion",
          "lng",
          "lat"
        ],
        "type": "object"
      },
      "ER_DUP_ENTRY": {
        "description": "Se ha intentado crear una entidad existente",
        "properties": {
          "error": {
            "type": "x-any"
          }
        },
        "required": [
          "error"
        ],
        "type": "object"
      },
      "GeoPoint": {
        "properties": {
          "lat": {
            "type": "number"
          },
          "lng": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "LOGIN_FAILED": {
        "description": "Se intentó acceder un modelo sobre el cual no se tiene permiso",
        "properties": {
          "error": {
            "type": "x-any"
          }
        },
        "required": [
          "error"
        ],
        "type": "object"
      },
      "MODEL_NOT_FOUND": {
        "description": "No se ha encontrado instancia del modelo",
        "properties": {
          "error": {
            "type": "x-any"
          }
        },
        "required": [
          "error"
        ],
        "type": "object"
      },
      "Marca": {
        "additionalProperties": false,
        "description": "Marcas de producto (pueden ser de un mismo fabricante)",
        "properties": {
          "categoriaPrincipal": {
            "maxLength": 64,
            "type": "string"
          },
          "id": {
            "format": "integer",
            "maxLength": 7,
            "maximum": 10000,
            "minimum": 1,
            "pattern": "\\d{3}",
            "type": "number"
          },
          "idFabricante": {
            "format": "integer",
            "type": "number"
          },
          "image": {
            "maxLength": 512,
            "type": "string"
          },
          "nombreMarca": {
            "maxLength": 65535,
            "type": "string"
          }
        },
        "required": [
          "id",
          "nombreMarca",
          "idFabricante"
        ],
        "type": "object"
      },
      "MedioPago": {
        "additionalProperties": false,
        "description": "Los medios de pago de un Cliente",
        "properties": {
          "alias": {
            "type": "string"
          },
          "creditCardType": {
            "default": "Visa",
            "type": "string"
          },
          "id": {
            "format": "integer",
            "maxLength": 7,
            "maximum": 10000,
            "minimum": 1,
            "pattern": "\\d{3}",
            "type": "number"
          },
          "idCliente": {
            "format": "integer",
            "maxLength": 7,
            "maximum": 10000,
            "minimum": 1,
            "pattern": "\\d{3}",
            "type": "number"
          },
          "idEstado": {
            "default": 1,
            "format": "integer",
            "maxLength": 2,
            "type": "number"
          },
          "last4CardDigits": {
            "maxLength": 4,
            "pattern": "\\d{4}",
            "type": "string"
          },
          "nombreEstado": {
            "type": "string"
          },
          "numero": {
            "maxLength": 20,
            "pattern": "\\*{4} \\*{4} \\*{4} \\d{4}",
            "type": "string"
          },
          "ordenCompra": {
            "type": "string"
          },
          "responseCode": {
            "type": "string"
          },
          "responseMessage": {
            "maxLength": 65535,
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Misc": {
        "additionalProperties": false,
        "description": "Endpoints no relacionados a ningún modelo en particular",
        "properties": {
          "id": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "NotificationToken": {
        "additionalProperties": false,
        "description": "Modelo Básico que extiende PersistedModel",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "config_props": {
            "type": "object"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "deviceId": {
            "type": "string"
          },
          "idCliente": {
            "format": "double",
            "type": "number"
          },
          "platform": {
            "type": "string"
          },
          "topic": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "deviceId"
        ],
        "type": "object"
      },
      "Pedido": {
        "additionalProperties": false,
        "description": "Pedido generado por Botón o App. Sólo visible para Cliente dueño y Operadores",
        "properties": {
          "costoDespacho": {
            "default": 0,
            "description": "Costo del despacho, a priori cero para pedidos cuyo neto es mayor a 10.000",
            "format": "integer",
            "maxLength": 7,
            "maximum": 250000,
            "minimum": 0,
            "pattern": "\\d{6}",
            "type": "number"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "descuento": {
            "default": 0,
            "description": "Descuento aplicado por promociones o saldo a favor en el Botón",
            "format": "integer",
            "maxLength": 7,
            "maximum": 250000,
            "minimum": 0,
            "pattern": "\\d{6}",
            "type": "number"
          },
          "descuento_primer_pedido": {
            "default": 0,
            "description": "Descuento aplicado sobre el despacho en el primer pedido del cliente",
            "format": "integer",
            "maxLength": 7,
            "maximum": 250000,
            "minimum": 0,
            "pattern": "\\d{6}",
            "type": "number"
          },
          "id": {
            "format": "integer",
            "maxLength": 5,
            "maximum": 10000,
            "minimum": 1,
            "pattern": "\\d{3}",
            "type": "number"
          },
          "idBoton": {
            "maxLength": 12,
            "pattern": "[0-9A-F]{12}",
            "type": "string"
          },
          "idCliente": {
            "description": "ID del cliente que gatilla el pedido (se lee del token)",
            "format": "integer",
            "maxLength": 7,
            "maximum": 10000,
            "minimum": 1,
            "pattern": "\\d{3}",
            "type": "number"
          },
          "idDireccion": {
            "format": "integer",
            "maxLength": 7,
            "maximum": 10000,
            "minimum": 1,
            "pattern": "\\d{3}",
            "type": "number"
          },
          "idEstado": {
            "format": "integer",
            "maxLength": 7,
            "maximum": 9,
            "minimum": 1,
            "pattern": "\\d{1}",
            "type": "number"
          },
          "idMarca": {
            "description": "Marca que limita los productos de este botón",
            "format": "integer",
            "maxLength": 7,
            "maximum": 10000,
            "minimum": 1,
            "pattern": "\\d{3}",
            "type": "number"
          },
          "idMediopago": {
            "format": "integer",
            "maxLength": 7,
            "maximum": 10000,
            "minimum": 1,
            "pattern": "\\d{3}",
            "type": "number"
          },
          "idProducto": {
            "format": "integer",
            "maxLength": 5,
            "maximum": 10000,
            "minimum": 1,
            "pattern": "\\d{3}",
            "type": "number"
          },
          "idTransaccion": {
            "format": "integer",
            "maxLength": 16,
            "maximum": 8565073562300389,
            "minimum": 1565000000000001,
            "pattern": "\\d{16}",
            "type": "number"
          },
          "nombreMarca": {
            "description": "Marca del los productos del pedido",
            "maxLength": 64,
            "type": "string"
          },
          "precioNeto": {
            "description": "Precio neto, igual a la suma de los productos que componen el pedido",
            "format": "integer",
            "maxLength": 7,
            "maximum": 250000,
            "minimum": 1,
            "pattern": "\\d{6}",
            "type": "number"
          },
          "precioTotal": {
            "description": "Precio a pagar por el pedido = (precio neto + costo despacho - descuento)",
            "format": "integer",
            "maxLength": 7,
            "maximum": 250000,
            "minimum": 1,
            "pattern": "\\d{6}",
            "type": "number"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PedidoEstado": {
        "additionalProperties": false,
        "description": "Estados posibles en que puede encontrarse un pedido",
        "properties": {
          "descripcion": {
            "maxLength": 256,
            "type": "string"
          },
          "detalle": {
            "maxLength": 256,
            "type": "string"
          },
          "estadoCancelado": {
            "default": 0,
            "description": "Cancelado: No se puede pasar a este estado desde un estado final. No se puede modificar este estado.",
            "format": "double",
            "maxLength": 1,
            "type": "number"
          },
          "id": {
            "format": "integer",
            "maxLength": 2,
            "maximum": 10,
            "minimum": 1,
            "type": "number"
          },
          "nombreEstado": {
            "maxLength": 64,
            "type": "string"
          },
          "soloEstadoFinal": {
            "default": 0,
            "description": "No se puede cambiar el estado de un pedido que está en un estado final (Entregado o Fallido)",
            "format": "double",
            "maxLength": 1,
            "type": "number"
          },
          "soloEstadoInicial": {
            "default": 0,
            "description": "No se puede devolver un pedido al estado inicial cuando ha pasado por otro estado",
            "format": "double",
            "maxLength": 1,
            "type": "number"
          }
        },
        "required": [
          "id",
          "nombreEstado",
          "descripcion",
          "detalle"
        ],
        "type": "object"
      },
      "PedidoHistorial": {
        "additionalProperties": false,
        "description": "Historial de los distintos estados por los que ha pasado un pedido",
        "properties": {
          "id": {
            "format": "integer",
            "type": "number"
          },
          "idEstado": {
            "format": "integer",
            "type": "number"
          },
          "idPedido": {
            "format": "integer",
            "type": "number"
          }
        },
        "required": [
          "id",
          "idPedido",
          "idEstado"
        ],
        "type": "object"
      },
      "Producto": {
        "additionalProperties": false,
        "description": "Los productos disponibles para comprar",
        "properties": {
          "descripcion": {
            "maxLength": 65535,
            "type": "string"
          },
          "descuento": {
            "format": "integer",
            "maxLength": 7,
            "maximum": 10000,
            "minimum": 1,
            "pattern": "\\d{3}",
            "type": "number"
          },
          "id": {
            "format": "integer",
            "maxLength": 7,
            "maximum": 10000,
            "minimum": 1,
            "pattern": "\\d{3}",
            "type": "number"
          },
          "idCategoria": {
            "format": "integer",
            "maxLength": 7,
            "maximum": 10000,
            "minimum": 1,
            "type": "number"
          },
          "idMarca": {
            "format": "integer",
            "maxLength": 7,
            "maximum": 10000,
            "minimum": 1,
            "type": "number"
          },
          "image": {
            "format": "uri",
            "maxLength": 512,
            "type": "string"
          },
          "isButton": {
            "description": "Define si el producto es un botón o un consumible",
            "type": "boolean"
          },
          "nombreMarca": {
            "description": "Marca del producto",
            "maxLength": 64,
            "type": "string"
          },
          "nombre_categoria": {
            "maxLength": 64,
            "type": "string"
          },
          "precioBase": {
            "format": "integer",
            "maxLength": 7,
            "maximum": 10000,
            "minimum": 1,
            "pattern": "\\d{3}",
            "type": "number"
          },
          "sku": {
            "format": "[A-Z]{5,8}00\\w{2}",
            "maxLength": 14,
            "type": "string"
          }
        },
        "required": [
          "id",
          "descripcion",
          "idCategoria",
          "idMarca",
          "precioBase",
          "descuento"
        ],
        "type": "object"
      },
      "ProductoCategoria": {
        "additionalProperties": false,
        "description": "Categorías de producto",
        "properties": {
          "descripcion": {
            "maxLength": 65535,
            "type": "string"
          },
          "id": {
            "format": "integer",
            "maxLength": 3,
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          }
        },
        "required": [
          "id",
          "descripcion"
        ],
        "type": "object"
      },
      "VentanaHoraria": {
        "additionalProperties": false,
        "description": "Franjas horarias de despacho (8:00 a 22:00) y entrega inmediata",
        "properties": {
          "costoDespacho": {
            "format": "integer",
            "maxLength": 5,
            "maximum": 99999,
            "minimum": 0,
            "pattern": "\\d{1,5}",
            "type": "number"
          },
          "horaFin": {
            "format": "integer",
            "type": "number"
          },
          "horaInicio": {
            "format": "integer",
            "type": "number"
          },
          "id": {
            "format": "integer",
            "maxLength": 2,
            "maximum": 26,
            "minimum": 1,
            "type": "number"
          },
          "isInmediate": {
            "default": false,
            "type": "boolean"
          },
          "nombre": {
            "maxLength": 64,
            "type": "string"
          }
        },
        "required": [
          "id",
          "nombre",
          "horaInicio",
          "horaFin",
          "costoDespacho"
        ],
        "type": "object"
      },
      "WebpayTransaccion": {
        "additionalProperties": false,
        "description": "Transacción registrada a través de Webpay OneClick",
        "properties": {
          "amount": {
            "format": "double",
            "type": "number"
          },
          "authorizationCode": {
            "type": "string"
          },
          "buyOrder": {
            "format": "double",
            "type": "number"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "creditCardType": {
            "default": "Visa",
            "type": "string"
          },
          "id": {
            "format": "integer",
            "maxLength": 16,
            "maximum": 8565073562300389,
            "minimum": 1565000000000001,
            "pattern": "\\d{16}",
            "type": "number"
          },
          "idMediopago": {
            "format": "double",
            "type": "number"
          },
          "idPedido": {
            "format": "double",
            "type": "number"
          },
          "last4CardDigits": {
            "default": "0000",
            "maxLength": 4,
            "pattern": "\\d{4}",
            "type": "string"
          },
          "responseCode": {
            "format": "double",
            "type": "number"
          },
          "responseCodeLocaleSpanish": {
            "maxLength": 65535,
            "type": "string"
          },
          "responseMessage": {
            "maxLength": 65535,
            "type": "string"
          },
          "reverseCode": {
            "type": "string"
          },
          "status": {
            "maxLength": 32,
            "type": "string"
          },
          "tbkUser": {
            "type": "string"
          },
          "transactionId": {
            "format": "double",
            "type": "number"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "idMediopago",
          "amount",
          "last4CardDigits"
        ],
        "type": "object"
      },
      "x-any": {
        "properties": {},
        "type": "object"
      }
    }
  },
  "tags": [
    {
      "description": "Endpoints no relacionados a ningún modelo en particular",
      "name": "Misc"
    },
    {
      "description": "Los botones de un Cliente",
      "name": "Boton"
    },
    {
      "description": "Usuarios finales del servicio myDot. Tienen la App instalada en su dispositivo",
      "name": "Cliente"
    },
    {
      "description": "Pedido generado por Botón o App. Sólo visible para Cliente dueño y Operadores",
      "name": "Pedido"
    },
    {
      "description": "Los productos disponibles para comprar",
      "name": "Producto"
    },
    {
      "description": "Categorías de producto",
      "name": "ProductoCategoria"
    },
    {
      "description": "Marcas de producto (pueden ser de un mismo fabricante)",
      "name": "Marca"
    },
    {
      "description": "Franjas horarias de despacho (8:00 a 22:00) y entrega inmediata",
      "name": "VentanaHoraria"
    }
  ]
}
{
  "swagger": "2.0",
  "info": {
    "version": "0.20.0",
    "description": "Esta es la definición el API MyDot, la capa visible del backend del Servicio MyDot"
  },
  "basePath": "/api",
  "paths": {
    "/Boton/{id}/botonProducto/{fk}": {
      "get": {
        "tags": [
          "Boton"
        ],
        "summary": "Buscar botonProducto de un Botón.",
        "operationId": "Boton.prototype.__findById__botonProducto",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Boton id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "fk",
            "in": "path",
            "description": "Clave foránea para botonProducto",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/BotonProducto"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Buscar un elemento relacionado por id para botonProducto.",
        "description": "Buscar botonProducto de un Botón."
      },
      "put": {
        "tags": [
          "Boton"
        ],
        "summary": "Actualizar botonProducto de un Botón.",
        "operationId": "Boton.prototype.__updateById__botonProducto",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Boton id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "fk",
            "in": "path",
            "description": "Clave foránea para botonProducto",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BotonProducto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/BotonProducto"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Actualizar un elemento relacionado por id para botonProducto.",
        "description": "Actualizar botonProducto de un Botón."
      }
    },
    "/Boton/{id}/cliente": {
      "get": {
        "tags": [
          "Boton"
        ],
        "summary": "Muestra el Cliente asociado a un Botón.",
        "operationId": "Boton.prototype.__get__cliente",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Boton id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "refresh",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Cliente"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Capta la relación belongsTo cliente.",
        "description": "Muestra el Cliente asociado a un Botón."
      }
    },
    "/Boton/{id}/direccion": {
      "get": {
        "tags": [
          "Boton"
        ],
        "summary": "Muestra la Dirección asociada a un Botón.",
        "operationId": "Boton.prototype.__get__direccion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Boton id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "refresh",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Direccion"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Capta la relación belongsTo direccion.",
        "description": "Muestra la Dirección asociada a un Botón."
      }
    },
    "/Boton/{id}/mediopago": {
      "get": {
        "tags": [
          "Boton"
        ],
        "summary": "Muestra el Medio de Pago asociado a un Botón.",
        "operationId": "Boton.prototype.__get__mediopago",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Boton id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "refresh",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/MedioPago"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Capta la relación belongsTo mediopago.",
        "description": "Muestra el Medio de Pago asociado a un Botón."
      }
    },
    "/Boton/{id}/productos/rel/{fk}": {
      "put": {
        "tags": [
          "Boton"
        ],
        "summary": "Añadir Productos de un Botón.",
        "operationId": "Boton.prototype.__link__productos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Boton id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "fk",
            "in": "path",
            "description": "Clave foránea para productos",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BotonProducto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/BotonProducto"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Añadir un elemento relacionado por id para productos.",
        "description": "Añadir Productos de un Botón."
      },
      "delete": {
        "tags": [
          "Boton"
        ],
        "summary": "Elimina Productos de un Botón.",
        "operationId": "Boton.prototype.__unlink__productos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Boton id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "fk",
            "in": "path",
            "description": "Clave foránea para productos",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Eliminar la relación productos con un elemento por id.",
        "description": "Elimina Productos de un Botón."
      }
    },
    "/Boton/{id}/marca": {
      "get": {
        "tags": [
          "Boton"
        ],
        "summary": "Muestra la Marca de un Botón.",
        "operationId": "Boton.prototype.__get__marca",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Boton id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "refresh",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Marca"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Capta la relación belongsTo marca.",
        "description": "Muestra la Marca de un Botón."
      }
    },
    "/Boton/{id}/ventanas_horario/rel/{fk}": {
      "put": {
        "tags": [
          "Boton"
        ],
        "summary": "Añadir Ventanas Horarias de un Botón.",
        "operationId": "Boton.prototype.__link__ventanas_horario",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Boton id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "fk",
            "in": "path",
            "description": "Clave foránea para ventanas_horario",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BotonVentanaHoraria"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/BotonVentanaHoraria"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Añadir un elemento relacionado por id para ventanas_horario.",
        "description": "Añadir Ventanas Horarias de un Botón."
      },
      "delete": {
        "tags": [
          "Boton"
        ],
        "summary": "Elimina Ventanas Horarias de un Botón.",
        "operationId": "Boton.prototype.__unlink__ventanas_horario",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Boton id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "fk",
            "in": "path",
            "description": "Clave foránea para ventanas_horario",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Eliminar la relación ventanas_horario con un elemento por id.",
        "description": "Elimina Ventanas Horarias de un Botón."
      }
    },
    "/Boton/{id}/botonProducto": {
      "get": {
        "tags": [
          "Boton"
        ],
        "summary": "Lista botonProducto de un Botón.",
        "operationId": "Boton.prototype.__get__botonProducto",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Boton id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BotonProducto"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "botonProducto consultas de Boton.",
        "description": "Lista botonProducto de un Botón."
      },
      "post": {
        "tags": [
          "Boton"
        ],
        "summary": "Agrega una entidad botonProducto a un Botón.",
        "operationId": "Boton.prototype.__create__botonProducto",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Boton id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BotonProducto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/BotonProducto"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          },
          "422": {
            "description": "ER_DUP_ENTRY",
            "schema": {
              "$ref": "#/definitions/ER_DUP_ENTRY"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 422,
                  "name": "Error",
                  "message": "Se intentó insertar un registro duplicado",
                  "code": "ER_DUP_ENTRY"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Crea una nueva instancia en botonProducto de este modelo.",
        "description": "Agrega una entidad botonProducto a un Botón."
      }
    },
    "/Boton/{id}/botonProducto/count": {
      "get": {
        "tags": [
          "Boton"
        ],
        "summary": "Cuenta botonProducto pertenecientes a un Botón.",
        "operationId": "Boton.prototype.__count__botonProducto",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Boton id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "where",
            "in": "query",
            "description": "Criteria to match model instances",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Recuentos botonProducto de Boton.",
        "description": "Cuenta botonProducto pertenecientes a un Botón."
      }
    },
    "/Boton/{id}/pedidos": {
      "get": {
        "tags": [
          "Boton"
        ],
        "summary": "Lista pedidos de un Botón.",
        "operationId": "Boton.prototype.__get__pedidos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Boton id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pedido"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "pedidos consultas de Boton.",
        "description": "Lista pedidos de un Botón."
      },
      "post": {
        "tags": [
          "Boton"
        ],
        "summary": "Agrega una entidad pedidos a un Botón.",
        "operationId": "Boton.prototype.__create__pedidos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Boton id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Pedido"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Pedido"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          },
          "422": {
            "description": "ER_DUP_ENTRY",
            "schema": {
              "$ref": "#/definitions/ER_DUP_ENTRY"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 422,
                  "name": "Error",
                  "message": "Se intentó insertar un registro duplicado",
                  "code": "ER_DUP_ENTRY"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Crea una nueva instancia en pedidos de este modelo.",
        "description": "Agrega una entidad pedidos a un Botón."
      }
    },
    "/Boton/{id}/productos": {
      "get": {
        "tags": [
          "Boton"
        ],
        "summary": "Lista Productos de un Botón.",
        "operationId": "Boton.prototype.__get__productos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Boton id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Producto"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "productos consultas de Boton.",
        "description": "Lista Productos de un Botón."
      },
      "post": {
        "tags": [
          "Boton"
        ],
        "summary": "Agrega una entidad productos a un Botón.",
        "operationId": "Boton.prototype.__create__productos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Boton id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Producto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Producto"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          },
          "422": {
            "description": "ER_DUP_ENTRY",
            "schema": {
              "$ref": "#/definitions/ER_DUP_ENTRY"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 422,
                  "name": "Error",
                  "message": "Se intentó insertar un registro duplicado",
                  "code": "ER_DUP_ENTRY"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Crea una nueva instancia en productos de este modelo.",
        "description": "Agrega una entidad productos a un Botón."
      }
    },
    "/Boton/{id}/ventanas_horario": {
      "get": {
        "tags": [
          "Boton"
        ],
        "summary": "Lista Ventanas Horarias de un Botón.",
        "operationId": "Boton.prototype.__get__ventanas_horario",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Boton id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VentanaHoraria"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "ventanas_horario consultas de Boton.",
        "description": "Lista Ventanas Horarias de un Botón."
      }
    },
    "/Boton/upsertWithWhere": {
      "post": {
        "tags": [
          "Boton"
        ],
        "summary": "Update an existing model instance or insert a new one into the data source based on the where criteria.",
        "operationId": "Boton.upsertWithWhere",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "Criteria to match model instances",
            "required": false,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": false,
            "schema": {
              "description": "An object of model property name/value pairs",
              "$ref": "#/definitions/Boton"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Boton"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "422": {
            "description": "ER_DUP_ENTRY",
            "schema": {
              "$ref": "#/definitions/ER_DUP_ENTRY"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 422,
                  "name": "Error",
                  "message": "Se intentó insertar un registro duplicado",
                  "code": "ER_DUP_ENTRY"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Update an existing model instance or insert a new one into the data source based on the where criteria.",
        "description": "Update an existing model instance or insert a new one into the data source based on the where criteria."
      }
    },
    "/Boton/{id}": {
      "get": {
        "tags": [
          "Boton"
        ],
        "summary": "Encuentra un Botón por {{id}} en la BBDD.",
        "operationId": "Boton.findById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Boton"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Find a model instance by {{id}} from the data source.",
        "description": "Encuentra un Botón por {{id}} en la BBDD."
      },
      "patch": {
        "tags": [
          "Boton"
        ],
        "summary": "Modifica o crea un Botón y persiste en BBDD.",
        "operationId": "Boton.prototype.patchAttributes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Boton id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": false,
            "schema": {
              "description": "An object of model property name/value pairs",
              "$ref": "#/definitions/Boton"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Boton"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Patch attributes for a model instance and persist it into the data source.",
        "description": "Modifica o crea un Botón y persiste en BBDD."
      }
    },
    "/Boton": {
      "get": {
        "tags": [
          "Boton"
        ],
        "summary": "Lista completa de Botones (propios) (filtro opcional).",
        "operationId": "Boton.find",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Boton"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Find all instances of the model matched by filter from the data source.",
        "description": "Lista completa de Botones (propios) (filtro opcional)."
      }
    },
    "/Boton/{id}/relatedProducts": {
      "get": {
        "tags": [
          "Boton"
        ],
        "summary": "Devuelve los productos que se pueden asociar a un botón dado",
        "operationId": "Boton.prototype.relatedProducts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Boton id",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "description": "Listado de productos",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Producto"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Devuelve los productos que se pueden asociar a un botón dado",
        "description": "Devuelve los productos que se pueden asociar a un botón dado"
      }
    },
    "/Boton/claim": {
      "post": {
        "tags": [
          "Boton"
        ],
        "summary": "Inscribe un botón a nombre del usuario",
        "operationId": "Boton.claim",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Boton"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "422": {
            "description": "ER_DUP_ENTRY",
            "schema": {
              "$ref": "#/definitions/ER_DUP_ENTRY"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 422,
                  "name": "Error",
                  "message": "Se intentó insertar un registro duplicado",
                  "code": "ER_DUP_ENTRY"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Inscribe un botón a nombre del usuario",
        "description": "Inscribe un botón a nombre del usuario"
      }
    },
    "/BotonProducto/{id}/botones": {
      "get": {
        "tags": [
          "BotonProducto"
        ],
        "summary": "Muestra botones una entidad BotonProducto.",
        "operationId": "BotonProducto.prototype.__get__botones",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "BotonProducto id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "refresh",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Boton"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Capta la relación belongsTo botones.",
        "description": "Muestra botones una entidad BotonProducto."
      }
    },
    "/BotonProducto/{id}/productos": {
      "get": {
        "tags": [
          "BotonProducto"
        ],
        "summary": "Muestra productos una entidad BotonProducto.",
        "operationId": "BotonProducto.prototype.__get__productos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "BotonProducto id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "refresh",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Producto"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Capta la relación belongsTo productos.",
        "description": "Muestra productos una entidad BotonProducto."
      }
    },
    "/BotonProducto": {
      "post": {
        "tags": [
          "BotonProducto"
        ],
        "summary": "Crea una entidad BotonProducto y persiste en BBDD.",
        "operationId": "BotonProducto.create",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": false,
            "schema": {
              "description": "Model instance data",
              "$ref": "#/definitions/BotonProducto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/BotonProducto"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "422": {
            "description": "ER_DUP_ENTRY",
            "schema": {
              "$ref": "#/definitions/ER_DUP_ENTRY"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 422,
                  "name": "Error",
                  "message": "Se intentó insertar un registro duplicado",
                  "code": "ER_DUP_ENTRY"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Create a new instance of the model and persist it into the data source.",
        "description": "Crea una entidad BotonProducto y persiste en BBDD."
      },
      "put": {
        "tags": [
          "BotonProducto"
        ],
        "summary": "Modifica o crea una entidad BotonProducto y persiste en BBDD.",
        "operationId": "BotonProducto.patchOrCreate__put_BotonProducto",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": false,
            "schema": {
              "description": "Model instance data",
              "$ref": "#/definitions/BotonProducto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/BotonProducto"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Patch an existing model instance or insert a new one into the data source.",
        "description": "Modifica o crea una entidad BotonProducto y persiste en BBDD."
      },
      "patch": {
        "tags": [
          "BotonProducto"
        ],
        "summary": "Modifica o crea una entidad BotonProducto y persiste en BBDD.",
        "operationId": "BotonProducto.patchOrCreate__patch_BotonProducto",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": false,
            "schema": {
              "description": "Model instance data",
              "$ref": "#/definitions/BotonProducto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/BotonProducto"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Patch an existing model instance or insert a new one into the data source.",
        "description": "Modifica o crea una entidad BotonProducto y persiste en BBDD."
      },
      "get": {
        "tags": [
          "BotonProducto"
        ],
        "summary": "Lista completa de BotonProductos (filtro opcional).",
        "operationId": "BotonProducto.find",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BotonProducto"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Find all instances of the model matched by filter from the data source.",
        "description": "Lista completa de BotonProductos (filtro opcional)."
      }
    },
    "/BotonProducto/replaceOrCreate": {
      "post": {
        "tags": [
          "BotonProducto"
        ],
        "summary": "Replace an existing model instance or insert a new one into the data source.",
        "operationId": "BotonProducto.replaceOrCreate",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": false,
            "schema": {
              "description": "Model instance data",
              "$ref": "#/definitions/BotonProducto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/BotonProducto"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "422": {
            "description": "ER_DUP_ENTRY",
            "schema": {
              "$ref": "#/definitions/ER_DUP_ENTRY"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 422,
                  "name": "Error",
                  "message": "Se intentó insertar un registro duplicado",
                  "code": "ER_DUP_ENTRY"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Replace an existing model instance or insert a new one into the data source.",
        "description": "Replace an existing model instance or insert a new one into the data source."
      }
    },
    "/BotonProducto/upsertWithWhere": {
      "post": {
        "tags": [
          "BotonProducto"
        ],
        "summary": "Update an existing model instance or insert a new one into the data source based on the where criteria.",
        "operationId": "BotonProducto.upsertWithWhere",
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "description": "Criteria to match model instances",
            "required": false,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": false,
            "schema": {
              "description": "An object of model property name/value pairs",
              "$ref": "#/definitions/BotonProducto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/BotonProducto"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "422": {
            "description": "ER_DUP_ENTRY",
            "schema": {
              "$ref": "#/definitions/ER_DUP_ENTRY"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 422,
                  "name": "Error",
                  "message": "Se intentó insertar un registro duplicado",
                  "code": "ER_DUP_ENTRY"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Update an existing model instance or insert a new one into the data source based on the where criteria.",
        "description": "Update an existing model instance or insert a new one into the data source based on the where criteria."
      }
    },
    "/BotonProducto/{id}": {
      "get": {
        "tags": [
          "BotonProducto"
        ],
        "summary": "Encuentra una entidad BotonProducto por {{id}} en la BBDD.",
        "operationId": "BotonProducto.findById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/BotonProducto"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Find a model instance by {{id}} from the data source.",
        "description": "Encuentra una entidad BotonProducto por {{id}} en la BBDD."
      },
      "delete": {
        "tags": [
          "BotonProducto"
        ],
        "summary": "Eliminar una entidad BotonProducto por {{id}} en la BBDD.",
        "operationId": "BotonProducto.deleteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Delete a model instance by {{id}} from the data source.",
        "description": "Eliminar una entidad BotonProducto por {{id}} en la BBDD."
      },
      "put": {
        "tags": [
          "BotonProducto"
        ],
        "summary": "Modifica o crea una entidad BotonProducto y persiste en BBDD.",
        "operationId": "BotonProducto.prototype.patchAttributes__put_BotonProducto_{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "BotonProducto id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": false,
            "schema": {
              "description": "An object of model property name/value pairs",
              "$ref": "#/definitions/BotonProducto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/BotonProducto"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Patch attributes for a model instance and persist it into the data source.",
        "description": "Modifica o crea una entidad BotonProducto y persiste en BBDD."
      },
      "patch": {
        "tags": [
          "BotonProducto"
        ],
        "summary": "Modifica o crea una entidad BotonProducto y persiste en BBDD.",
        "operationId": "BotonProducto.prototype.patchAttributes__patch_BotonProducto_{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "BotonProducto id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": false,
            "schema": {
              "description": "An object of model property name/value pairs",
              "$ref": "#/definitions/BotonProducto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/BotonProducto"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Patch attributes for a model instance and persist it into the data source.",
        "description": "Modifica o crea una entidad BotonProducto y persiste en BBDD."
      }
    },
    "/BotonProducto/upsert/{idProducto}": {
      "put": {
        "tags": [
          "BotonProducto"
        ],
        "summary": "Actualiza o crea la relación entre un botón y un producto",
        "operationId": "BotonProducto.upsert",
        "parameters": [
          {
            "name": "idProducto",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Actualiza o crea la relación entre un botón y un producto",
        "description": "Actualiza o crea la relación entre un botón y un producto"
      }
    },
    "/Cliente/{id}/botones/{fk}": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Buscar botones de un Cliente.",
        "operationId": "Cliente.prototype.__findById__botones",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cliente id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "fk",
            "in": "path",
            "description": "Clave foránea para botones",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Boton"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Buscar un elemento relacionado por id para botones.",
        "description": "Buscar botones de un Cliente."
      },
      "put": {
        "tags": [
          "Cliente"
        ],
        "summary": "Actualizar botones de un Cliente.",
        "operationId": "Cliente.prototype.__updateById__botones",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cliente id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "fk",
            "in": "path",
            "description": "Clave foránea para botones",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Boton"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Boton"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Actualizar un elemento relacionado por id para botones.",
        "description": "Actualizar botones de un Cliente."
      }
    },
    "/Cliente/{id}/direcciones/{fk}": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Buscar direcciones de un Cliente.",
        "operationId": "Cliente.prototype.__findById__direcciones",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cliente id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "fk",
            "in": "path",
            "description": "Clave foránea para direcciones",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Direccion"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Buscar un elemento relacionado por id para direcciones.",
        "description": "Buscar direcciones de un Cliente."
      },
      "delete": {
        "tags": [
          "Cliente"
        ],
        "summary": "Suprimir direcciones de un Cliente.",
        "operationId": "Cliente.prototype.__destroyById__direcciones",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cliente id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "fk",
            "in": "path",
            "description": "Clave foránea para direcciones",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Suprimir un elemento relacionado por id para direcciones.",
        "description": "Suprimir direcciones de un Cliente."
      },
      "put": {
        "tags": [
          "Cliente"
        ],
        "summary": "Actualizar direcciones de un Cliente.",
        "operationId": "Cliente.prototype.__updateById__direcciones",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cliente id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "fk",
            "in": "path",
            "description": "Clave foránea para direcciones",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Direccion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Direccion"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Actualizar un elemento relacionado por id para direcciones.",
        "description": "Actualizar direcciones de un Cliente."
      }
    },
    "/Cliente/{id}/direccion_default": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Muestra la Dirección por Defecto de un Cliente.",
        "operationId": "Cliente.prototype.__get__direccion_default",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cliente id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "refresh",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Direccion"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Capta la relación belongsTo direccion_default.",
        "description": "Muestra la Dirección por Defecto de un Cliente."
      }
    },
    "/Cliente/{id}/mediospago/{fk}": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Buscar Medios de Pago de un Cliente.",
        "operationId": "Cliente.prototype.__findById__mediospago",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cliente id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "fk",
            "in": "path",
            "description": "Clave foránea para mediospago",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/MedioPago"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Buscar un elemento relacionado por id para mediospago.",
        "description": "Buscar Medios de Pago de un Cliente."
      },
      "delete": {
        "tags": [
          "Cliente"
        ],
        "summary": "Suprimir Medios de Pago de un Cliente.",
        "operationId": "Cliente.prototype.__destroyById__mediospago",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cliente id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "fk",
            "in": "path",
            "description": "Clave foránea para mediospago",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Suprimir un elemento relacionado por id para mediospago.",
        "description": "Suprimir Medios de Pago de un Cliente."
      }
    },
    "/Cliente/{id}/mediopago_default": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Muestra el Medio de Pago por defecto de un Cliente.",
        "operationId": "Cliente.prototype.__get__mediopago_default",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cliente id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "refresh",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/MedioPago"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Capta la relación belongsTo mediopago_default.",
        "description": "Muestra el Medio de Pago por defecto de un Cliente."
      }
    },
    "/Cliente/{id}/pedidos/{fk}": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Buscar pedidos de un Cliente.",
        "operationId": "Cliente.prototype.__findById__pedidos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cliente id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "fk",
            "in": "path",
            "description": "Clave foránea para pedidos",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Pedido"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Buscar un elemento relacionado por id para pedidos.",
        "description": "Buscar pedidos de un Cliente."
      },
      "put": {
        "tags": [
          "Cliente"
        ],
        "summary": "Actualizar pedidos de un Cliente.",
        "operationId": "Cliente.prototype.__updateById__pedidos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cliente id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "fk",
            "in": "path",
            "description": "Clave foránea para pedidos",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Pedido"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Pedido"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Actualizar un elemento relacionado por id para pedidos.",
        "description": "Actualizar pedidos de un Cliente."
      }
    },
    "/Cliente/{id}/transacciones_webpay/{fk}": {
      "put": {
        "tags": [
          "Cliente"
        ],
        "summary": "Actualizar transacciones_webpay de un Cliente.",
        "operationId": "Cliente.prototype.__updateById__transacciones_webpay",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cliente id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "fk",
            "in": "path",
            "description": "Clave foránea para transacciones_webpay",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WebpayTransaccion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/WebpayTransaccion"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Actualizar un elemento relacionado por id para transacciones_webpay.",
        "description": "Actualizar transacciones_webpay de un Cliente."
      }
    },
    "/Cliente/{id}/botones": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Lista botones de un Cliente.",
        "operationId": "Cliente.prototype.__get__botones",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cliente id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Boton"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "botones consultas de Cliente.",
        "description": "Lista botones de un Cliente."
      }
    },
    "/Cliente/{id}/direcciones": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Lista direcciones de un Cliente.",
        "operationId": "Cliente.prototype.__get__direcciones",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cliente id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Direccion"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "direcciones consultas de Cliente.",
        "description": "Lista direcciones de un Cliente."
      },
      "post": {
        "tags": [
          "Cliente"
        ],
        "summary": "Agrega una entidad direcciones a un Cliente.",
        "operationId": "Cliente.prototype.__create__direcciones",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cliente id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Direccion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Direccion"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Crea una nueva instancia en direcciones de este modelo.",
        "description": "Agrega una entidad direcciones a un Cliente."
      }
    },
    "/Cliente/{id}/mediospago": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Lista Medios de Pago de un Cliente.",
        "operationId": "Cliente.prototype.__get__mediospago",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cliente id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MedioPago"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "mediospago consultas de Cliente.",
        "description": "Lista Medios de Pago de un Cliente."
      },
      "post": {
        "tags": [
          "Cliente"
        ],
        "summary": "Agrega una entidad mediospago a un Cliente.",
        "operationId": "Cliente.prototype.__create__mediospago",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cliente id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MedioPago"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/MedioPago"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Crea una nueva instancia en mediospago de este modelo.",
        "description": "Agrega una entidad mediospago a un Cliente."
      }
    },
    "/Cliente/{id}/pedidos": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Lista pedidos de un Cliente.",
        "operationId": "Cliente.prototype.__get__pedidos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cliente id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pedido"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "pedidos consultas de Cliente.",
        "description": "Lista pedidos de un Cliente."
      },
      "post": {
        "tags": [
          "Cliente"
        ],
        "summary": "Agrega una entidad pedidos a un Cliente.",
        "operationId": "Cliente.prototype.__create__pedidos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cliente id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Pedido"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Pedido"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Crea una nueva instancia en pedidos de este modelo.",
        "description": "Agrega una entidad pedidos a un Cliente."
      }
    },
    "/Cliente/{id}/transacciones_webpay": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Lista transacciones_webpay de un Cliente.",
        "operationId": "Cliente.prototype.__get__transacciones_webpay",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cliente id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WebpayTransaccion"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "transacciones_webpay consultas de Cliente.",
        "description": "Lista transacciones_webpay de un Cliente."
      },
      "post": {
        "tags": [
          "Cliente"
        ],
        "summary": "Agrega una entidad transacciones_webpay a un Cliente.",
        "operationId": "Cliente.prototype.__create__transacciones_webpay",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cliente id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WebpayTransaccion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/WebpayTransaccion"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Crea una nueva instancia en transacciones_webpay de este modelo.",
        "description": "Agrega una entidad transacciones_webpay a un Cliente."
      }
    },
    "/Cliente": {
      "post": {
        "tags": [
          "Cliente"
        ],
        "summary": "Crea un Cliente y persiste en BBDD.",
        "operationId": "Cliente.create",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": false,
            "schema": {
              "description": "Model instance data",
              "$ref": "#/definitions/Cliente"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Cliente"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Create a new instance of the model and persist it into the data source.",
        "description": "Crea un Cliente y persiste en BBDD."
      },
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Lista completa de Clientes (filtro opcional).",
        "operationId": "Cliente.find",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Cliente"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Find all instances of the model matched by filter from the data source.",
        "description": "Lista completa de Clientes (filtro opcional)."
      }
    },
    "/Cliente/{id}": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Encuentra un Cliente por {{id}} en la BBDD.",
        "operationId": "Cliente.findById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Cliente"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Find a model instance by {{id}} from the data source.",
        "description": "Encuentra un Cliente por {{id}} en la BBDD."
      },
      "patch": {
        "tags": [
          "Cliente"
        ],
        "summary": "Modifica o crea un Cliente y persiste en BBDD.",
        "operationId": "Cliente.prototype.patchAttributes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cliente id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": false,
            "schema": {
              "description": "An object of model property name/value pairs",
              "$ref": "#/definitions/Cliente"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Cliente"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Patch attributes for a model instance and persist it into the data source.",
        "description": "Modifica o crea un Cliente y persiste en BBDD."
      }
    },
    "/Cliente/login": {
      "post": {
        "tags": [
          "Cliente"
        ],
        "summary": "Cliente Inicia sesión usando email y password.",
        "operationId": "Cliente.login",
        "parameters": [
          {
            "name": "credentials",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Related objects to include in the response. See the description of return value for more details.",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "description": "El cuerpo de respuesta contiene propiedades de la AccessToken creada durante el inicio de la sesión.\nDependiendo del valor del parámetro `include`, el cuerpo puede contener propiedades adicionales:\n\n  - `user` - `U+007BUserU+007D` - Datos del usuario conectado actualmente. (`include=user`)\n\n",
              "type": "object"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "Error",
                  "message": "username o email es obligatorio",
                  "code": "USERNAME_EMAIL_REQUIRED"
                }
              }
            }
          },
          "401": {
            "description": "LOGIN_FAILED",
            "schema": {
              "$ref": "#/definitions/LOGIN_FAILED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "El inicio de sesión ha fallado",
                  "code": "LOGIN_FAILED"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Login a user with username/email and password.",
        "description": "Cliente Inicia sesión usando email y password."
      }
    },
    "/Cliente/logout": {
      "post": {
        "tags": [
          "Cliente"
        ],
        "summary": "Cliente Cierra sesión. Requiere AccessToken.",
        "operationId": "Cliente.logout",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Request was successful"
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Logout a user with access token.",
        "description": "Cliente Cierra sesión. Requiere AccessToken."
      }
    },
    "/Cliente/{id}/verify": {
      "post": {
        "tags": [
          "Cliente"
        ],
        "summary": "Gatilla la verificación de la cuenta de usuario",
        "operationId": "Cliente.prototype.verify",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cliente id",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Trigger user's identity verification with configured verifyOptions",
        "description": "Gatilla la verificación de la cuenta de usuario"
      }
    },
    "/Cliente/confirm": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Cliente Confirma registro siguiendo un link.",
        "operationId": "Cliente.confirm",
        "parameters": [
          {
            "name": "uid",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "redirect",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Confirm a user registration with identity verification token.",
        "description": "Cliente Confirma registro siguiendo un link."
      }
    },
    "/Cliente/reset": {
      "post": {
        "tags": [
          "Cliente"
        ],
        "summary": "Reset password for a user with email.",
        "operationId": "Cliente.resetPassword",
        "parameters": [
          {
            "name": "options",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Reset password for a user with email.",
        "description": "Reset password for a user with email."
      }
    },
    "/Cliente/change-password": {
      "post": {
        "tags": [
          "Cliente"
        ],
        "summary": "Cambia el password de un usuario.",
        "operationId": "Cliente.changePassword",
        "parameters": [
          {
            "name": "oldPassword",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "newPassword",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Change a user's password.",
        "description": "Cambia el password de un usuario."
      }
    },
    "/Cliente/reset-password": {
      "post": {
        "tags": [
          "Cliente"
        ],
        "summary": "Cliente Restablece password de un usuario mediante correoy link único.",
        "operationId": "Cliente.setPassword",
        "parameters": [
          {
            "name": "newPassword",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Reset user's password via a password-reset token.",
        "description": "Cliente Restablece password de un usuario mediante correoy link único."
      }
    },
    "/Cliente/{id}/mediospago/upsert": {
      "post": {
        "tags": [
          "Cliente"
        ],
        "summary": "Crea o actualiza un medio de pago webpay",
        "operationId": "Cliente.prototype.upsertMedioPago",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cliente id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Cliente"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Crea o actualiza un medio de pago webpay",
        "description": "Crea o actualiza un medio de pago webpay"
      }
    },
    "/Cliente/isButtonClaimed/{idBoton}": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Verifica si un botón ya ha sido inscrito por este u otro cliente",
        "operationId": "Cliente.isButtonClaimed",
        "parameters": [
          {
            "name": "idBoton",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Verifica si un botón ya ha sido inscrito por este u otro cliente",
        "description": "Verifica si un botón ya ha sido inscrito por este u otro cliente"
      }
    },
    "/Cliente/fbauth": {
      "post": {
        "tags": [
          "Cliente"
        ],
        "summary": "Inscribe o loguea a un usuario usando facebook",
        "operationId": "Cliente.fbAuth",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Cliente"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Inscribe o loguea a un usuario usando facebook",
        "description": "Inscribe o loguea a un usuario usando facebook"
      }
    },
    "/Cliente/ventanasDireccion/{idDireccion}": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Lista ventanas horarias con el costo de despacho para una dirección específica",
        "operationId": "Cliente.ventanasDireccion",
        "parameters": [
          {
            "name": "idDireccion",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VentanaHoraria"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Lista ventanas horarias con el costo de despacho para una dirección específica",
        "description": "Lista ventanas horarias con el costo de despacho para una dirección específica"
      }
    },
    "/Pedido/{id}/despacho": {
      "get": {
        "tags": [
          "Pedido"
        ],
        "summary": "Muestra el Despacho de un Pedido.",
        "operationId": "Pedido.prototype.__get__despacho",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Pedido id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "refresh",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Despacho"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Capta la relación hasOne despacho.",
        "description": "Muestra el Despacho de un Pedido."
      }
    },
    "/Pedido/{id}/direccion": {
      "get": {
        "tags": [
          "Pedido"
        ],
        "summary": "Muestra la Dirección asociada a un Pedido.",
        "operationId": "Pedido.prototype.__get__direccion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Pedido id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "refresh",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Direccion"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Capta la relación belongsTo direccion.",
        "description": "Muestra la Dirección asociada a un Pedido."
      }
    },
    "/Pedido/{id}/mediopago": {
      "get": {
        "tags": [
          "Pedido"
        ],
        "summary": "Muestra el Medio de Pago asociado a un Pedido.",
        "operationId": "Pedido.prototype.__get__mediopago",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Pedido id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "refresh",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/MedioPago"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Capta la relación belongsTo mediopago.",
        "description": "Muestra el Medio de Pago asociado a un Pedido."
      }
    },
    "/Pedido/{id}/estado": {
      "get": {
        "tags": [
          "Pedido"
        ],
        "summary": "Muestra el Estado Actual de un Pedido.",
        "operationId": "Pedido.prototype.__get__estado",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Pedido id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "refresh",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/PedidoEstado"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Capta la relación belongsTo estado.",
        "description": "Muestra el Estado Actual de un Pedido."
      }
    },
    "/Pedido/{id}/ventanas_horario/rel/{fk}": {
      "put": {
        "tags": [
          "Pedido"
        ],
        "summary": "Añadir Ventanas Horarias de un Pedido.",
        "operationId": "Pedido.prototype.__link__ventanas_horario",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Pedido id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "fk",
            "in": "path",
            "description": "Clave foránea para ventanas_horario",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PedidoVentanaHoraria"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/PedidoVentanaHoraria"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Añadir un elemento relacionado por id para ventanas_horario.",
        "description": "Añadir Ventanas Horarias de un Pedido."
      },
      "delete": {
        "tags": [
          "Pedido"
        ],
        "summary": "Elimina Ventanas Horarias de un Pedido.",
        "operationId": "Pedido.prototype.__unlink__ventanas_horario",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Pedido id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "fk",
            "in": "path",
            "description": "Clave foránea para ventanas_horario",
            "required": true,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "204": {
            "description": "Request was successful"
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Eliminar la relación ventanas_horario con un elemento por id.",
        "description": "Elimina Ventanas Horarias de un Pedido."
      }
    },
    "/Pedido/{id}/historial": {
      "get": {
        "tags": [
          "Pedido"
        ],
        "summary": "Lista historial de un Pedido.",
        "operationId": "Pedido.prototype.__get__historial",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Pedido id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PedidoHistorial"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "historial consultas de Pedido.",
        "description": "Lista historial de un Pedido."
      }
    },
    "/Pedido/{id}/productos": {
      "get": {
        "tags": [
          "Pedido"
        ],
        "summary": "Lista Productos de un Pedido.",
        "operationId": "Pedido.prototype.__get__productos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Pedido id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Producto"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "productos consultas de Pedido.",
        "description": "Lista Productos de un Pedido."
      }
    },
    "/Pedido/{id}/ventanas_horario": {
      "get": {
        "tags": [
          "Pedido"
        ],
        "summary": "Lista Ventanas Horarias de un Pedido.",
        "operationId": "Pedido.prototype.__get__ventanas_horario",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Pedido id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VentanaHoraria"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "ventanas_horario consultas de Pedido.",
        "description": "Lista Ventanas Horarias de un Pedido."
      }
    },
    "/Pedido/{id}": {
      "get": {
        "tags": [
          "Pedido"
        ],
        "summary": "Encuentra un Pedido por {{id}} en la BBDD.",
        "operationId": "Pedido.findById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Pedido"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Find a model instance by {{id}} from the data source.",
        "description": "Encuentra un Pedido por {{id}} en la BBDD."
      },
      "patch": {
        "tags": [
          "Pedido"
        ],
        "summary": "Modifica o crea un Pedido y persiste en BBDD.",
        "operationId": "Pedido.prototype.patchAttributes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Pedido id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": false,
            "schema": {
              "description": "An object of model property name/value pairs",
              "$ref": "#/definitions/Pedido"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Pedido"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Patch attributes for a model instance and persist it into the data source.",
        "description": "Modifica o crea un Pedido y persiste en BBDD."
      }
    },
    "/Pedido": {
      "get": {
        "tags": [
          "Pedido"
        ],
        "summary": "Lista completa de Pedidos (propios) (filtro opcional).",
        "operationId": "Pedido.find",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pedido"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Find all instances of the model matched by filter from the data source.",
        "description": "Lista completa de Pedidos (propios) (filtro opcional)."
      }
    },
    "/Producto/{id}/categoria": {
      "get": {
        "tags": [
          "Producto"
        ],
        "summary": "Muestra la Categoria de un Producto.",
        "operationId": "Producto.prototype.__get__categoria",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Producto id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "refresh",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/ProductoCategoria"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Capta la relación belongsTo categoria.",
        "description": "Muestra la Categoria de un Producto."
      }
    },
    "/Producto/{id}/marca": {
      "get": {
        "tags": [
          "Producto"
        ],
        "summary": "Muestra la Marca de un Producto.",
        "operationId": "Producto.prototype.__get__marca",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Producto id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "refresh",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Marca"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Capta la relación belongsTo marca.",
        "description": "Muestra la Marca de un Producto."
      }
    },
    "/Producto/botones": {
      "get": {
        "tags": [
          "Producto"
        ],
        "summary": "Lista Productos de tipo Botón.",
        "operationId": "Producto.__get__botones",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Boton"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "botones consultas de Producto.",
        "description": "Lista Productos de tipo Botón."
      }
    },
    "/Producto/{id}/botones_disponibles": {
      "get": {
        "tags": [
          "Producto"
        ],
        "summary": "Lista botones_disponibles de un Producto.",
        "operationId": "Producto.prototype.__get__botones_disponibles",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Producto id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BotonDisponible"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "botones_disponibles consultas de Producto.",
        "description": "Lista botones_disponibles de un Producto."
      }
    },
    "/Producto/consumibles": {
      "get": {
        "tags": [
          "Producto"
        ],
        "summary": "Lista Productos de tipo consumible.",
        "operationId": "Producto.__get__consumibles",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Producto"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "consumibles consultas de Producto.",
        "description": "Lista Productos de tipo consumible."
      }
    },
    "/Producto/{id}/comunas_restringidas": {
      "get": {
        "tags": [
          "Producto"
        ],
        "summary": "Lista Comunas Restringidas de un Producto.",
        "operationId": "Producto.prototype.__get__comunas_restringidas",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Producto id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Comuna"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "comunas_restringidas consultas de Producto.",
        "description": "Lista Comunas Restringidas de un Producto."
      }
    },
    "/Producto/{id}": {
      "get": {
        "tags": [
          "Producto"
        ],
        "summary": "Encuentra un Producto por {{id}} en la BBDD.",
        "operationId": "Producto.findById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Producto"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Find a model instance by {{id}} from the data source.",
        "description": "Encuentra un Producto por {{id}} en la BBDD."
      }
    },
    "/Producto": {
      "get": {
        "tags": [
          "Producto"
        ],
        "summary": "Lista completa de Productos (filtro opcional).",
        "operationId": "Producto.find",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Producto"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Find all instances of the model matched by filter from the data source.",
        "description": "Lista completa de Productos (filtro opcional)."
      }
    },
    "/ProductoCategoria/botones": {
      "get": {
        "tags": [
          "ProductoCategoria"
        ],
        "summary": "Lista Productos de tipo Botón de una Categoría de Producto.",
        "operationId": "ProductoCategoria.__get__botones",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductoCategoria"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "botones consultas de ProductoCategoria.",
        "description": "Lista Productos de tipo Botón de una Categoría de Producto."
      }
    },
    "/ProductoCategoria/consumibles": {
      "get": {
        "tags": [
          "ProductoCategoria"
        ],
        "summary": "Lista Productos de tipo consumible de una Categoría de Producto.",
        "operationId": "ProductoCategoria.__get__consumibles",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductoCategoria"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "consumibles consultas de ProductoCategoria.",
        "description": "Lista Productos de tipo consumible de una Categoría de Producto."
      }
    },
    "/ProductoCategoria/{id}": {
      "get": {
        "tags": [
          "ProductoCategoria"
        ],
        "summary": "Encuentra una Categoría de Producto por {{id}} en la BBDD.",
        "operationId": "ProductoCategoria.findById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/ProductoCategoria"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Find a model instance by {{id}} from the data source.",
        "description": "Encuentra una Categoría de Producto por {{id}} en la BBDD."
      }
    },
    "/ProductoCategoria": {
      "get": {
        "tags": [
          "ProductoCategoria"
        ],
        "summary": "Lista completa de Categorías de Producto (filtro opcional).",
        "operationId": "ProductoCategoria.find",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductoCategoria"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Find all instances of the model matched by filter from the data source.",
        "description": "Lista completa de Categorías de Producto (filtro opcional)."
      }
    },
    "/Fabricante/{id}/marcas": {
      "get": {
        "tags": [
          "Fabricante"
        ],
        "summary": "Lista Mascas de un Fabricante.",
        "operationId": "Fabricante.prototype.__get__marcas",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Fabricante id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Marca"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "marcas consultas de Fabricante.",
        "description": "Lista Mascas de un Fabricante."
      }
    },
    "/Fabricante/{id}": {
      "get": {
        "tags": [
          "Fabricante"
        ],
        "summary": "Encuentra un Fabricante por {{id}} en la BBDD.",
        "operationId": "Fabricante.findById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Fabricante"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Find a model instance by {{id}} from the data source.",
        "description": "Encuentra un Fabricante por {{id}} en la BBDD."
      }
    },
    "/Fabricante": {
      "get": {
        "tags": [
          "Fabricante"
        ],
        "summary": "Lista completa de Fabricantes (filtro opcional).",
        "operationId": "Fabricante.find",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Fabricante"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Find all instances of the model matched by filter from the data source.",
        "description": "Lista completa de Fabricantes (filtro opcional)."
      }
    },
    "/Marca/{id}/fabricante": {
      "get": {
        "tags": [
          "Marca"
        ],
        "summary": "Muestra el Fabricante de una Marca.",
        "operationId": "Marca.prototype.__get__fabricante",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Marca id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "refresh",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Fabricante"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Capta la relación belongsTo fabricante.",
        "description": "Muestra el Fabricante de una Marca."
      }
    },
    "/Marca/{id}/botones_disponibles": {
      "get": {
        "tags": [
          "Marca"
        ],
        "summary": "Lista botones_disponibles de una Marca.",
        "operationId": "Marca.prototype.__get__botones_disponibles",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Marca id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BotonDisponible"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "botones_disponibles consultas de Marca.",
        "description": "Lista botones_disponibles de una Marca."
      }
    },
    "/Marca/{id}/productos": {
      "get": {
        "tags": [
          "Marca"
        ],
        "summary": "Lista Productos de una Marca.",
        "operationId": "Marca.prototype.__get__productos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Marca id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Producto"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "productos consultas de Marca.",
        "description": "Lista Productos de una Marca."
      }
    },
    "/Marca/{id}": {
      "get": {
        "tags": [
          "Marca"
        ],
        "summary": "Encuentra una Marca por {{id}} en la BBDD.",
        "operationId": "Marca.findById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/Marca"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Find a model instance by {{id}} from the data source.",
        "description": "Encuentra una Marca por {{id}} en la BBDD."
      }
    },
    "/Marca": {
      "get": {
        "tags": [
          "Marca"
        ],
        "summary": "Lista completa de Marcas (filtro opcional).",
        "operationId": "Marca.find",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Marca"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Find all instances of the model matched by filter from the data source.",
        "description": "Lista completa de Marcas (filtro opcional)."
      }
    },
    "/VentanaHoraria/{id}/botones": {
      "get": {
        "tags": [
          "VentanaHoraria"
        ],
        "summary": "Lista botones (propios) dentro de una Ventana Horaria.",
        "operationId": "VentanaHoraria.prototype.__get__botones",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "VentanaHoraria id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Boton"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "botones consultas de VentanaHoraria.",
        "description": "Lista botones (propios) dentro de una Ventana Horaria."
      }
    },
    "/VentanaHoraria/{id}/pedidos": {
      "get": {
        "tags": [
          "VentanaHoraria"
        ],
        "summary": "Lista pedidos (propios) dentro de una Ventana Horaria.",
        "operationId": "VentanaHoraria.prototype.__get__pedidos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "VentanaHoraria id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pedido"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "pedidos consultas de VentanaHoraria.",
        "description": "Lista pedidos (propios) dentro de una Ventana Horaria."
      }
    },
    "/VentanaHoraria/{id}": {
      "get": {
        "tags": [
          "VentanaHoraria"
        ],
        "summary": "Encuentra una Ventana Horaria por {{id}} en la BBDD.",
        "operationId": "VentanaHoraria.findById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string",
            "format": "JSON"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "$ref": "#/definitions/VentanaHoraria"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          },
          "404": {
            "description": "MODEL_NOT_FOUND",
            "schema": {
              "$ref": "#/definitions/MODEL_NOT_FOUND"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 404,
                  "name": "Error",
                  "message": "no se ha encontrado el modelo solicitado",
                  "code": "MODEL_NOT_FOUND"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Find a model instance by {{id}} from the data source.",
        "description": "Encuentra una Ventana Horaria por {{id}} en la BBDD."
      }
    },
    "/VentanaHoraria": {
      "get": {
        "tags": [
          "VentanaHoraria"
        ],
        "summary": "Lista completa de Ventanas Horarias (filtro opcional).",
        "operationId": "VentanaHoraria.find",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})",
            "required": false,
            "type": "string",
            "format": "JSON"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VentanaHoraria"
              }
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BAD_REQUEST"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 400,
                  "name": "SyntaxError",
                  "message": "Malformed JSON body",
                  "code": "BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "AUTHORIZATION_REQUIRED",
            "schema": {
              "$ref": "#/definitions/AUTHORIZATION_REQUIRED"
            },
            "examples": {
              "application/json": {
                "error": {
                  "statusCode": 401,
                  "name": "Error",
                  "message": "Autorización necesaria",
                  "code": "AUTHORIZATION_REQUIRED"
                }
              }
            }
          }
        },
        "deprecated": false,
        "oldsummary": "Find all instances of the model matched by filter from the data source.",
        "description": "Lista completa de Ventanas Horarias (filtro opcional)."
      }
    }
  },
  "tags": [
    {
      "name": "Boton",
      "description": "Los botones de un Cliente"
    },
    {
      "name": "BotonProducto",
      "description": "Relación entre un botón y los productos que ordena al presionar"
    },
    {
      "name": "Cliente",
      "description": "Usuarios finales del servicio myDot. Tienen la App instalada en su dispositivo"
    },
    {
      "name": "Pedido",
      "description": "Pedido generado por Botón o App. Sólo visible para Cliente dueño y Operadores"
    },
    {
      "name": "Producto",
      "description": "Los productos disponibles para comprar"
    },
    {
      "name": "ProductoCategoria",
      "description": "Categorías de producto"
    },
    {
      "name": "Fabricante",
      "description": "Fabricantes de producto (bajo distintas marcas)"
    },
    {
      "name": "Marca",
      "description": "Marcas de producto (pueden ser de un mismo fabricante)"
    },
    {
      "name": "VentanaHoraria",
      "description": "Franjas horarias de despacho (8:00 a 22:00) y entrega inmediata"
    }
  ],
  "consumes": [
    "application/json",
    "application/x-www-form-urlencoded"
  ],
  "produces": [
    "application/json"
  ],
  "definitions": {
    "x-any": {
      "properties": {}
    },
    "BotonProducto": {
      "description": "Relación entre un botón y los productos que ordena al presionar",
      "properties": {
        "idBoton": {
          "maxLength": 12,
          "pattern": "[0-9A-F]{12}",
          "type": "string"
        },
        "idProducto": {
          "maxLength": 7,
          "format": "integer",
          "minimum": 1,
          "maximum": 10000,
          "pattern": "\\d{3}",
          "type": "number"
        },
        "cantidad": {
          "format": "integer",
          "default": 1,
          "pattern": "\\d{1}",
          "type": "number"
        }
      },
      "required": [
        "idBoton",
        "idProducto"
      ],
      "additionalProperties": false
    },
    "Cliente": {
      "description": "Usuarios finales del servicio myDot. Tienen la App instalada en su dispositivo",
      "properties": {
        "id": {
          "maxLength": 7,
          "format": "integer",
          "minimum": 1,
          "maximum": 10000,
          "pattern": "\\d{3}",
          "type": "number"
        },
        "rut": {
          "maxLength": 12,
          "pattern": "\\d{1,2}\\.{0,1}\\d{3}\\.{0,1}\\d{3}-[0-9Kk]",
          "type": "string"
        },
        "email": {
          "maxLength": 36,
          "format": "email",
          "type": "string"
        },
        "telefono": {
          "maxLength": 15,
          "pattern": "^56\\d{1} \\d{4} \\d{4}$",
          "type": "string"
        },
        "username": {
          "maxLength": 128,
          "type": "string"
        },
        "id_mediopago_default": {
          "maxLength": 7,
          "format": "integer",
          "minimum": 1,
          "maximum": 10000,
          "pattern": "\\d{3}",
          "type": "number"
        },
        "id_direccion_default": {
          "maxLength": 7,
          "format": "integer",
          "minimum": 1,
          "maximum": 10000,
          "pattern": "\\d{3}",
          "type": "number"
        }
      },
      "required": [
        "email",
        "username"
      ],
      "additionalProperties": false
    },
    "Direccion": {
      "description": "Las direcciones de un Cliente",
      "properties": {
        "id": {
          "maxLength": 7,
          "format": "integer",
          "minimum": 1,
          "maximum": 10000,
          "pattern": "\\d{3}",
          "type": "number"
        },
        "direccion": {
          "maxLength": 65535,
          "type": "string"
        },
        "numero": {
          "maxLength": 512,
          "description": "Si aplica, el depto, oficina, letra o numeración interior",
          "type": "string"
        },
        "instrucciones": {
          "description": "Indicaciones para llegar, despachar, etc a esta dirección",
          "type": "string"
        },
        "comuna": {
          "maxLength": 64,
          "type": "string"
        },
        "region": {
          "maxLength": 128,
          "type": "string"
        },
        "pais": {
          "maxLength": 64,
          "type": "string"
        },
        "lng": {
          "maxLength": 7,
          "format": "float",
          "default": -30.78,
          "minimum": -80,
          "maximum": 80,
          "type": "number"
        },
        "lat": {
          "maxLength": 7,
          "format": "float",
          "default": -70.38,
          "minimum": -80,
          "maximum": 80,
          "type": "number"
        },
        "geom": {
          "$ref": "#/definitions/GeoPoint"
        }
      },
      "required": [
        "direccion",
        "lng",
        "lat"
      ],
      "additionalProperties": false
    },
    "MedioPago": {
      "description": "Los medios de pago de un Cliente",
      "properties": {
        "id": {
          "maxLength": 7,
          "format": "integer",
          "minimum": 1,
          "maximum": 10000,
          "pattern": "\\d{3}",
          "type": "number"
        },
        "username": {
          "type": "string"
        },
        "idEstado": {
          "maxLength": 2,
          "format": "integer",
          "default": 1,
          "type": "number"
        },
        "nombreEstado": {
          "type": "string"
        },
        "ordenCompra": {
          "type": "string"
        },
        "creditCardType": {
          "default": "Visa",
          "type": "string"
        },
        "responseCode": {
          "type": "string"
        },
        "last4CardDigits": {
          "maxLength": 4,
          "default": "0000",
          "pattern": "\\d{4}",
          "type": "string"
        },
        "numero": {
          "maxLength": 20,
          "default": "**** **** **** 0000",
          "pattern": "\\*{4} \\*{4} \\*{4} \\d{4}",
          "type": "string"
        },
        "caducidad": {
          "format": "date-time",
          "default": "2026-12-31",
          "type": "string"
        },
        "sbifEmisor": {
          "maxLength": 3,
          "default": "001",
          "pattern": "\\d{3}",
          "type": "string"
        },
        "sbifTipo": {
          "maxLength": 2,
          "default": "03",
          "pattern": "\\d{2}",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Marca": {
      "description": "Marcas de producto (pueden ser de un mismo fabricante)",
      "properties": {
        "id": {
          "maxLength": 7,
          "format": "integer",
          "minimum": 1,
          "maximum": 10000,
          "pattern": "\\d{3}",
          "type": "number"
        },
        "nombreMarca": {
          "maxLength": 65535,
          "type": "string"
        },
        "image": {
          "maxLength": 512,
          "type": "string"
        },
        "idFabricante": {
          "format": "integer",
          "type": "number"
        },
        "categoriaPrincipal": {
          "maxLength": 64,
          "type": "string"
        }
      },
      "required": [
        "id",
        "nombreMarca",
        "idFabricante"
      ],
      "additionalProperties": false
    },
    "BotonVentanaHoraria": {
      "description": "Representa la relación ManyToMany entre botones y ventanas horarias",
      "properties": {
        "idBoton": {
          "maxLength": 12,
          "pattern": "[0-9A-F]{12}",
          "type": "string"
        },
        "idVentana": {
          "maxLength": 7,
          "format": "integer",
          "minimum": 1,
          "maximum": 10000,
          "pattern": "\\d{3}",
          "type": "number"
        }
      },
      "required": [
        "idBoton",
        "idVentana"
      ],
      "additionalProperties": false
    },
    "Pedido": {
      "description": "Pedido generado por Botón o App. Sólo visible para Cliente dueño y Operadores",
      "properties": {
        "id": {
          "maxLength": 5,
          "format": "integer",
          "minimum": 1,
          "maximum": 10000,
          "pattern": "\\d{3}",
          "type": "number"
        },
        "idProducto": {
          "maxLength": 5,
          "format": "integer",
          "minimum": 1,
          "maximum": 10000,
          "pattern": "\\d{3}",
          "type": "number"
        },
        "idMediopago": {
          "maxLength": 7,
          "format": "integer",
          "minimum": 1,
          "maximum": 10000,
          "pattern": "\\d{3}",
          "type": "number"
        },
        "idDireccion": {
          "maxLength": 7,
          "format": "integer",
          "minimum": 1,
          "maximum": 10000,
          "pattern": "\\d{3}",
          "type": "number"
        },
        "idEstado": {
          "maxLength": 7,
          "format": "integer",
          "minimum": 1,
          "maximum": 9,
          "pattern": "\\d{1}",
          "type": "number"
        },
        "idCliente": {
          "maxLength": 7,
          "format": "integer",
          "minimum": 1,
          "maximum": 10000,
          "pattern": "\\d{3}",
          "description": "ID del cliente que gatilla el pedido (se lee del token)",
          "type": "number"
        },
        "idBoton": {
          "maxLength": 12,
          "pattern": "[0-9A-F]{12}",
          "type": "string"
        },
        "precioTotal": {
          "maxLength": 7,
          "format": "integer",
          "minimum": 1,
          "maximum": 250000,
          "pattern": "\\d{6}",
          "description": "Precio a pagar por el pedido, igual a la suma de los productos que lo componen",
          "type": "number"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "idProducto"
      ],
      "additionalProperties": false
    },
    "Producto": {
      "description": "Los productos disponibles para comprar",
      "properties": {
        "id": {
          "maxLength": 7,
          "format": "integer",
          "minimum": 1,
          "maximum": 10000,
          "pattern": "\\d{3}",
          "type": "number"
        },
        "descripcion": {
          "maxLength": 65535,
          "type": "string"
        },
        "sku": {
          "format": "[A-Z]{5,8}00\\w{2}",
          "maxLength": 14,
          "type": "string"
        },
        "idCategoria": {
          "maxLength": 7,
          "format": "integer",
          "minimum": 1,
          "maximum": 10000,
          "type": "number"
        },
        "nombre_categoria": {
          "maxLength": 64,
          "type": "string"
        },
        "idMarca": {
          "maxLength": 7,
          "format": "integer",
          "minimum": 1,
          "maximum": 10000,
          "type": "number"
        },
        "precioBase": {
          "maxLength": 7,
          "format": "integer",
          "minimum": 1,
          "maximum": 10000,
          "pattern": "\\d{3}",
          "type": "number"
        },
        "descuento": {
          "maxLength": 7,
          "format": "integer",
          "minimum": 1,
          "maximum": 10000,
          "pattern": "\\d{3}",
          "type": "number"
        },
        "isButton": {
          "description": "Define si el producto es un botón o un consumible",
          "type": "boolean"
        },
        "image": {
          "format": "uri",
          "maxLength": 512,
          "type": "string"
        }
      },
      "required": [
        "id",
        "descripcion",
        "idCategoria",
        "idMarca",
        "precioBase",
        "descuento"
      ],
      "additionalProperties": false
    },
    "VentanaHoraria": {
      "description": "Franjas horarias de despacho (8:00 a 22:00) y entrega inmediata",
      "properties": {
        "id": {
          "maxLength": 2,
          "format": "integer",
          "minimum": 1,
          "maximum": 26,
          "type": "number"
        },
        "nombre": {
          "maxLength": 64,
          "type": "string"
        },
        "horaInicio": {
          "format": "integer",
          "type": "number"
        },
        "horaFin": {
          "format": "integer",
          "type": "number"
        },
        "isInmediate": {
          "default": false,
          "type": "boolean"
        },
        "costoDespacho": {
          "maxLength": 5,
          "format": "integer",
          "minimum": 0,
          "maximum": 99999,
          "pattern": "\\d{1,5}",
          "type": "number"
        }
      },
      "required": [
        "id",
        "nombre",
        "horaInicio",
        "horaFin",
        "costoDespacho"
      ],
      "additionalProperties": false
    },
    "Boton": {
      "description": "Los botones de un Cliente",
      "properties": {
        "id": {
          "maxLength": 12,
          "pattern": "[0-9A-F]{12}",
          "type": "string"
        },
        "idMarca": {
          "maxLength": 7,
          "format": "integer",
          "minimum": 1,
          "maximum": 10000,
          "pattern": "\\d{3}",
          "description": "Marca que limita los productos de este botón",
          "type": "number"
        },
        "idMediopago": {
          "maxLength": 7,
          "format": "integer",
          "minimum": 1,
          "maximum": 10000,
          "pattern": "\\d{3}",
          "description": "Medio de pago asociado a este botón",
          "type": "number"
        },
        "idDireccion": {
          "maxLength": 7,
          "format": "integer",
          "minimum": 1,
          "maximum": 10000,
          "pattern": "\\d{3}",
          "description": "Dirección de despacho asociada a este botón",
          "type": "number"
        },
        "isActive": {
          "default": false,
          "type": "boolean"
        }
      },
      "required": [
        "id"
      ],
      "additionalProperties": false
    },
    "WebpayTransaccion": {
      "description": "Transacción registrada a través de Webpay OneClick",
      "properties": {
        "id": {
          "maxLength": 10,
          "format": "integer",
          "minimum": 1,
          "maximum": 40000,
          "pattern": "\\d{3}",
          "type": "number"
        },
        "buyOrder": {
          "type": "number",
          "format": "double"
        },
        "idMediopago": {
          "type": "number",
          "format": "double"
        },
        "transactionId": {
          "type": "number",
          "format": "double"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "status": {
          "maxLength": 32,
          "type": "string"
        },
        "responseCode": {
          "type": "number",
          "format": "double"
        },
        "responseCodeLocaleSpanish": {
          "maxLength": 65535,
          "type": "string"
        },
        "last4CardDigits": {
          "maxLength": 4,
          "default": "0000",
          "pattern": "\\d{4}",
          "type": "string"
        },
        "creditCardType": {
          "default": "Visa",
          "type": "string"
        },
        "reverseCode": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "idMediopago",
        "amount",
        "last4CardDigits"
      ],
      "additionalProperties": false
    },
    "Despacho": {
      "description": "Instancia del despacho de un producto",
      "properties": {
        "id": {
          "maxLength": 7,
          "format": "integer",
          "minimum": 1,
          "maximum": 10000,
          "pattern": "\\d{3}",
          "type": "number"
        },
        "idPedido": {
          "format": "integer",
          "type": "number"
        },
        "idCourier": {
          "format": "integer",
          "type": "number"
        },
        "codigoDespacho": {
          "maxLength": 64,
          "type": "string"
        },
        "linkSeguimiento": {
          "maxLength": 65535,
          "type": "string"
        }
      },
      "required": [
        "id",
        "idPedido",
        "idCourier",
        "codigoDespacho"
      ],
      "additionalProperties": false
    },
    "PedidoEstado": {
      "description": "Estados posibles en que puede encontrarse un pedido",
      "properties": {
        "id": {
          "maxLength": 2,
          "format": "integer",
          "minimum": 1,
          "maximum": 10,
          "type": "number"
        },
        "nombreEstado": {
          "maxLength": 64,
          "type": "string"
        },
        "descripcion": {
          "maxLength": 256,
          "type": "string"
        }
      },
      "required": [
        "id",
        "nombreEstado",
        "descripcion"
      ],
      "additionalProperties": false
    },
    "PedidoVentanaHoraria": {
      "description": "Representa la relación ManyToMany entre pedidos y ventanas horarias",
      "properties": {
        "id": {
          "maxLength": 7,
          "format": "integer",
          "minimum": 1,
          "maximum": 10000,
          "pattern": "\\d{3}",
          "type": "number"
        },
        "idPedido": {
          "maxLength": 7,
          "format": "integer",
          "minimum": 1,
          "maximum": 10000,
          "pattern": "\\d{3}",
          "type": "number"
        },
        "idVentana": {
          "maxLength": 2,
          "format": "integer",
          "minimum": 1,
          "maximum": 26,
          "type": "number"
        }
      },
      "required": [
        "idPedido",
        "idVentana"
      ],
      "additionalProperties": false
    },
    "PedidoHistorial": {
      "description": "Historial de los distintos estados por los que ha pasado un pedido",
      "properties": {
        "id": {
          "format": "integer",
          "type": "number"
        },
        "idPedido": {
          "format": "integer",
          "type": "number"
        },
        "idEstado": {
          "format": "integer",
          "type": "number"
        }
      },
      "required": [
        "id",
        "idPedido",
        "idEstado"
      ],
      "additionalProperties": false
    },
    "ProductoCategoria": {
      "description": "Categorías de producto",
      "properties": {
        "id": {
          "maxLength": 3,
          "format": "integer",
          "minimum": 1,
          "maximum": 100,
          "type": "number"
        },
        "descripcion": {
          "maxLength": 65535,
          "type": "string"
        }
      },
      "required": [
        "id",
        "descripcion"
      ],
      "additionalProperties": false
    },
    "BotonDisponible": {
      "description": "Los botones disponibles asociados a una marca",
      "properties": {
        "id": {
          "maxLength": 12,
          "pattern": "[0-9A-F]{12}",
          "type": "string"
        },
        "idMarca": {
          "maxLength": 7,
          "format": "integer",
          "minimum": 1,
          "maximum": 10000,
          "pattern": "\\d{3}",
          "description": "Marca que limita los productos de este botón",
          "type": "number"
        }
      },
      "required": [
        "id"
      ],
      "additionalProperties": false
    },
    "Comuna": {
      "description": "Comuna asociada a una dirección",
      "properties": {
        "id": {
          "maxLength": 5,
          "format": "\\w{5}",
          "type": "string"
        },
        "nombreComuna": {
          "maxLength": 64,
          "type": "string"
        },
        "idProvincia": {
          "maxLength": 3,
          "type": "string"
        },
        "nombreProvincia": {
          "maxLength": 256,
          "type": "string"
        },
        "idRegion": {
          "maxLength": 2,
          "type": "string"
        },
        "nombreRegion": {
          "maxLength": 256,
          "type": "string"
        }
      },
      "required": [
        "id",
        "nombreComuna",
        "idProvincia",
        "nombreProvincia",
        "idRegion",
        "nombreRegion"
      ],
      "additionalProperties": false
    },
    "Fabricante": {
      "description": "Fabricantes de producto (bajo distintas marcas)",
      "properties": {
        "id": {
          "maxLength": 7,
          "format": "integer",
          "minimum": 1,
          "maximum": 10000,
          "pattern": "\\d{3}",
          "type": "number"
        },
        "nombre": {
          "maxLength": 65535,
          "type": "string"
        }
      },
      "required": [
        "id",
        "nombre"
      ],
      "additionalProperties": false
    },
    "GeoPoint": {
      "properties": {
        "lat": {
          "type": "number"
        },
        "lng": {
          "type": "number"
        }
      }
    },
    "AUTHORIZATION_REQUIRED": {
      "description": "Requiere Autorización (login)",
      "properties": {
        "error": {
          "type": "x-any"
        }
      },
      "required": [
        "error"
      ]
    },
    "ER_DUP_ENTRY": {
      "description": "Se ha intentado crear una entidad existente",
      "properties": {
        "error": {
          "type": "x-any"
        }
      },
      "required": [
        "error"
      ]
    },
    "ACCESS_DENIED": {
      "description": "Se intentó acceder un modelo sobre el cual no se tiene permiso",
      "properties": {
        "error": {
          "type": "x-any"
        }
      },
      "required": [
        "error"
      ]
    },
    "LOGIN_FAILED": {
      "description": "Se intentó acceder un modelo sobre el cual no se tiene permiso",
      "properties": {
        "error": {
          "type": "x-any"
        }
      },
      "required": [
        "error"
      ]
    },
    "BAD_REQUEST": {
      "description": "Petición tiene error de sintaxis",
      "properties": {
        "error": {
          "type": "x-any"
        }
      },
      "required": [
        "error"
      ]
    },
    "MODEL_NOT_FOUND": {
      "description": "No se ha encontrado instancia del modelo",
      "properties": {
        "error": {
          "type": "x-any"
        }
      },
      "required": [
        "error"
      ]
    }
  },
  "host": "{{apidomain}}"
}
swagger: "2.0"
info:
  version: 1.6.1
  title: API MyDot YAML
  description: Esta es la definición el API MyDot, la capa visible del backend del Servicio
    MyDot
basePath: /api
paths:
  /Misc/image:
    post:
      tags:
        - Misc
      summary: sube una imagen a firebase
      operationId: Misc.uploadImage
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: "#/definitions/Misc"
      responses:
        "200":
          description: Request was successful
          schema:
            type: object
        "401":
          &a1
          description: AUTHORIZATION_REQUIRED
          schema:
            $ref: "#/definitions/AUTHORIZATION_REQUIRED"
          examples:
            application/json:
              statusCode: 401
              name: Error
              message: Autorización necesaria
              code: AUTHORIZATION_REQUIRED
        "422":
          &a2
          description: ER_DUP_ENTRY
          schema:
            $ref: "#/definitions/ER_DUP_ENTRY"
          examples:
            application/json:
              statusCode: 422
              name: Error
              message: Se intentó insertar un registro duplicado
              code: ER_DUP_ENTRY
      deprecated: false
      description: sube una imagen a firebase
  /Misc/banner:
    get:
      tags:
        - Misc
      summary: Devuelve un banner para mostrar al cliente
      operationId: Misc.banner
      parameters: []
      responses:
        "200":
          description: Request was successful
          schema:
            type: object
        "401": *a1
      deprecated: false
      description: Devuelve un banner para mostrar al cliente
  /Misc/banners:
    get:
      tags:
        - Misc
      summary: Listado de banners por tamaño y posición
      operationId: Misc.banners
      parameters: []
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              type: object
        "401": *a1
      deprecated: false
      description: Listado de banners por tamaño y posición
  /Misc/cobertura:
    get:
      tags:
        - Misc
      summary: Devuelve el polígono de cobertura como pares de coordenadas
      operationId: Misc.cobertura
      parameters: []
      responses:
        "200":
          description: Request was successful
          schema:
            type: object
        "401": *a1
      deprecated: false
      description: Devuelve el polígono de cobertura como pares de coordenadas
  /Misc/coberturaGeoJson:
    get:
      tags:
        - Misc
      summary: Devuelve el polígono de cobertura como GeoJSON
      operationId: Misc.coberturaGeoJson
      parameters: []
      responses:
        "200":
          description: Request was successful
          schema:
            type: object
        "401": *a1
      deprecated: false
      description: Devuelve el polígono de cobertura como GeoJSON
  /Misc/tos:
    get:
      tags:
        - Misc
      summary: Devuelve los términos de servicio en un objeto
      operationId: Misc.tos
      parameters: []
      responses:
        "200":
          description: Request was successful
          schema:
            type: object
        "401": *a1
      deprecated: false
      description: Devuelve los términos de servicio en un objeto
  /Misc/privacy:
    get:
      tags:
        - Misc
      summary: Devuelve la política de privacidad en un objeto
      operationId: Misc.privacy
      parameters: []
      responses:
        "200":
          description: Request was successful
          schema:
            type: object
        "401": *a1
      deprecated: false
      description: Devuelve la política de privacidad en un objeto
  /Misc/coberturaFC:
    get:
      tags:
        - Misc
      summary: Devuelve la cobertura como FeatureCollection (soporta varios polígonos)
      operationId: Misc.coberturaFC
      parameters: []
      responses:
        "200":
          description: Request was successful
          schema:
            type: object
        "401": *a1
      deprecated: false
      description: Devuelve la cobertura como FeatureCollection (soporta varios polígonos)
  /Misc/privacidad:
    get:
      tags:
        - Misc
      summary: Devuelve la política de privacidad como HTML
      operationId: Misc.privacidad
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: "#/definitions/Misc"
      responses:
        "200":
          description: Request was successful
          schema:
            type: object
        "401": *a1
      deprecated: false
      description: Devuelve la política de privacidad como HTML
  /Misc/faq:
    get:
      tags:
        - Misc
      summary: Devuelve las preguntas frecuentes en un objeto
      operationId: Misc.faq
      parameters: []
      responses:
        "200":
          description: Request was successful
          schema:
            type: object
        "401": *a1
      deprecated: false
      description: Devuelve las preguntas frecuentes en un objeto
  /Misc/preguntas_frecuentes:
    get:
      tags:
        - Misc
      summary: Devuelve las preguntas frecuentes como HTML
      operationId: Misc.preguntas_frecuentes
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: "#/definitions/Misc"
      responses:
        "200":
          description: Request was successful
          schema:
            type: object
        "401": *a1
      deprecated: false
      description: Devuelve las preguntas frecuentes como HTML
  /Misc/echo:
    post:
      tags:
        - Misc
      summary: Verifica si una direccion tiene cobertura
      operationId: Misc.echo
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: "#/definitions/Misc"
      responses:
        "200":
          description: Request was successful
          schema:
            type: object
        "401": *a1
        "422": *a2
      deprecated: false
      description: Verifica si una direccion tiene cobertura
  /Misc/cspReport:
    post:
      tags:
        - Misc
      summary: cspReport
      operationId: Misc.cspReport
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: "#/definitions/Misc"
      responses:
        "200":
          description: Request was successful
          schema:
            type: object
        "401": *a1
        "422": *a2
      deprecated: false
      description: cspReport
  /Misc/throwError:
    post:
      tags:
        - Misc
      summary: Test method to throw custom errors
      operationId: Misc.throwError
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: "#/definitions/Misc"
      responses:
        "200":
          description: Request was successful
          schema:
            type: object
        "401": *a1
        "422": *a2
      deprecated: false
      description: Test method to throw custom errors
  /Misc/hasCobertura:
    post:
      tags:
        - Misc
      summary: Verifica si una direccion tiene cobertura
      operationId: Misc.hasCobertura
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: "#/definitions/Misc"
      responses:
        "200":
          description: Request was successful
          schema:
            type: object
        "401": *a1
        "422": *a2
      deprecated: false
      description: Verifica si una direccion tiene cobertura
  /Misc/terminos_de_servicio:
    get:
      tags:
        - Misc
      summary: Devuelve los términos de servicio como HTML
      operationId: Misc.terminos_de_servicio
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: "#/definitions/Misc"
      responses:
        "200":
          description: Request was successful
          schema:
            type: object
        "401": *a1
      deprecated: false
      description: Devuelve los términos de servicio como HTML
  "/Boton/{id}/cliente":
    get:
      tags:
        - Boton
      summary: Muestra el Cliente asociado a un Botón.
      operationId: Boton.prototype.__get__cliente
      parameters:
        - name: id
          in: path
          description: Boton id
          required: true
          type: string
          format: JSON
        - name: refresh
          in: query
          required: false
          type: boolean
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/Cliente"
        "401": *a1
        "404":
          &a3
          description: MODEL_NOT_FOUND
          schema:
            $ref: "#/definitions/MODEL_NOT_FOUND"
          examples:
            application/json:
              statusCode: 404
              name: Error
              message: no se ha encontrado el modelo solicitado
              code: MODEL_NOT_FOUND
      deprecated: false
      description: Muestra el Cliente asociado a un Botón.
  "/Boton/{id}/direccion":
    get:
      tags:
        - Boton
      summary: Muestra la Dirección asociada a un Botón.
      operationId: Boton.prototype.__get__direccion
      parameters:
        - name: id
          in: path
          description: Boton id
          required: true
          type: string
          format: JSON
        - name: refresh
          in: query
          required: false
          type: boolean
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/Direccion"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Muestra la Dirección asociada a un Botón.
  "/Boton/{id}/mediopago":
    get:
      tags:
        - Boton
      summary: Muestra el Medio de Pago asociado a un Botón.
      operationId: Boton.prototype.__get__mediopago
      parameters:
        - name: id
          in: path
          description: Boton id
          required: true
          type: string
          format: JSON
        - name: refresh
          in: query
          required: false
          type: boolean
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/MedioPago"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Muestra el Medio de Pago asociado a un Botón.
  "/Boton/{id}/productos/rel/{fk}":
    put:
      tags:
        - Boton
      summary: Añadir Productos de un Botón.
      operationId: Boton.prototype.__link__productos
      parameters:
        - name: id
          in: path
          description: Boton id
          required: true
          type: string
          format: JSON
        - name: fk
          in: path
          description: Clave foránea para productos
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: "#/definitions/BotonProducto"
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/BotonProducto"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Añadir Productos de un Botón.
    delete:
      tags:
        - Boton
      summary: Elimina Productos de un Botón.
      operationId: Boton.prototype.__unlink__productos
      parameters:
        - name: id
          in: path
          description: Boton id
          required: true
          type: string
          format: JSON
        - name: fk
          in: path
          description: Clave foránea para productos
          required: true
          type: string
          format: JSON
      responses:
        "204":
          description: Request was successful
        "401": *a1
        "404": *a3
      deprecated: false
      description: Elimina Productos de un Botón.
  "/Boton/{id}/marca":
    get:
      tags:
        - Boton
      summary: Muestra la Marca de un Botón.
      operationId: Boton.prototype.__get__marca
      parameters:
        - name: id
          in: path
          description: Boton id
          required: true
          type: string
          format: JSON
        - name: refresh
          in: query
          required: false
          type: boolean
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/Marca"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Muestra la Marca de un Botón.
  "/Boton/{id}/ventana_default":
    get:
      tags:
        - Boton
      summary: Muestra ventana_default un Botón.
      operationId: Boton.prototype.__get__ventana_default
      parameters:
        - name: id
          in: path
          description: Boton id
          required: true
          type: string
          format: JSON
        - name: refresh
          in: query
          required: false
          type: boolean
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/VentanaHoraria"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Muestra ventana_default un Botón.
  "/Boton/{id}/ventanas_horario/rel/{fk}":
    put:
      tags:
        - Boton
      summary: Añadir Ventanas Horarias de un Botón.
      operationId: Boton.prototype.__link__ventanas_horario
      parameters:
        - name: id
          in: path
          description: Boton id
          required: true
          type: string
          format: JSON
        - name: fk
          in: path
          description: Clave foránea para ventanas_horario
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: "#/definitions/BotonVentanaHoraria"
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/BotonVentanaHoraria"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Añadir Ventanas Horarias de un Botón.
    delete:
      tags:
        - Boton
      summary: Elimina Ventanas Horarias de un Botón.
      operationId: Boton.prototype.__unlink__ventanas_horario
      parameters:
        - name: id
          in: path
          description: Boton id
          required: true
          type: string
          format: JSON
        - name: fk
          in: path
          description: Clave foránea para ventanas_horario
          required: true
          type: string
          format: JSON
      responses:
        "204":
          description: Request was successful
        "401": *a1
        "404": *a3
      deprecated: false
      description: Elimina Ventanas Horarias de un Botón.
  "/Boton/{id}/pedidos":
    get:
      tags:
        - Boton
      summary: Lista pedidos de un Botón.
      operationId: Boton.prototype.__get__pedidos
      parameters:
        - name: id
          in: path
          description: Boton id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              $ref: "#/definitions/Pedido"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Lista pedidos de un Botón.
    post:
      tags:
        - Boton
      summary: Agrega una entidad pedidos a un Botón.
      operationId: Boton.prototype.__create__pedidos
      parameters:
        - name: id
          in: path
          description: Boton id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: "#/definitions/Pedido"
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/Pedido"
        "401": *a1
        "404": *a3
        "422": *a2
      deprecated: false
      description: Agrega una entidad pedidos a un Botón.
  "/Boton/{id}/productos":
    get:
      tags:
        - Boton
      summary: Lista Productos de un Botón.
      operationId: Boton.prototype.__get__productos
      parameters:
        - name: id
          in: path
          description: Boton id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              $ref: "#/definitions/Producto"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Lista Productos de un Botón.
  "/Boton/{id}/ventanas_horario":
    get:
      tags:
        - Boton
      summary: Lista Ventanas Horarias de un Botón.
      operationId: Boton.prototype.__get__ventanas_horario
      parameters:
        - name: id
          in: path
          description: Boton id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              $ref: "#/definitions/VentanaHoraria"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Lista Ventanas Horarias de un Botón.
  "/Boton/{id}":
    get:
      tags:
        - Boton
      summary: Encuentra un Botón por {{id}} en la BBDD.
      operationId: Boton.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/Boton"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Encuentra un Botón por {{id}} en la BBDD.
    patch:
      tags:
        - Boton
      summary: Modifica o crea un Botón y persiste en BBDD.
      operationId: Boton.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: Boton id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: "#/definitions/Boton"
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/Boton"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Modifica o crea un Botón y persiste en BBDD.
  /Boton:
    get:
      tags:
        - Boton
      summary: Lista completa de Botones (propios) (filtro opcional).
      operationId: Boton.find
      parameters:
        - name: filter
          in: query
          description: Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string
            (`{"where":{"something":"value"}}`).  See
            https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries
            for more details.
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              $ref: "#/definitions/Boton"
        "401": *a1
      deprecated: false
      description: Lista completa de Botones (propios) (filtro opcional).
  "/Boton/{id}/relatedProducts":
    get:
      tags:
        - Boton
      summary: >-
        Devuelve los productos que se pueden asociar a un botón dado

        (deprecated: un llamado a GET /api/Boton/:id/producto_marca entrega lo mismo

        evitando la utilización de un método custom
      operationId: Boton.prototype.relatedProducts
      parameters:
        - name: id
          in: path
          description: Boton id
          required: true
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            description: Listado de productos
            type: array
            items:
              $ref: "#/definitions/Producto"
        "401": *a1
        "404": *a3
      deprecated: false
      description: >-
        Devuelve los productos que se pueden asociar a un botón dado

        (deprecated: un llamado a GET /api/Boton/:id/producto_marca entrega lo mismo

        evitando la utilización de un método custom
  "/Boton/{id}/resumen":
    get:
      tags:
        - Boton
      summary: Lista un resumen de la configuración del botón
      operationId: Boton.prototype.resumen
      parameters:
        - name: id
          in: path
          description: Boton id
          required: true
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: object
        "401": *a1
        "404": *a3
      deprecated: false
      description: Lista un resumen de la configuración del botón
  "/Boton/{id}/producto_marca":
    get:
      tags:
        - Boton
      summary: Devuelve los productos que se pueden asociar a un botón dado
      operationId: Boton.prototype.producto_marca
      parameters:
        - name: id
          in: path
          description: Boton id
          required: true
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            description: Listado de productos
            type: array
            items:
              $ref: "#/definitions/Producto"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Devuelve los productos que se pueden asociar a un botón dado
  /Boton/claim:
    post:
      tags:
        - Boton
      summary: |-
        Inscribe un botón a nombre del usuario
        (Deprecated) Utilizar ```PATCH /api/Boton/{idBoton}```
      operationId: Boton.claim
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: "#/definitions/Boton"
      responses:
        "200":
          description: Request was successful
          schema:
            type: object
        "401": *a1
        "422": *a2
      deprecated: false
      description: |-
        Inscribe un botón a nombre del usuario
        (Deprecated) Utilizar ```PATCH /api/Boton/{idBoton}```
  "/Cliente/{id}/botones/{fk}":
    get:
      tags:
        - Cliente
      summary: Buscar botones de un Cliente.
      operationId: Cliente.prototype.__findById__botones
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: fk
          in: path
          description: Clave foránea para botones
          required: true
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/Boton"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Buscar botones de un Cliente.
    put:
      tags:
        - Cliente
      summary: Actualizar botones de un Cliente.
      operationId: Cliente.prototype.__updateById__botones
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: fk
          in: path
          description: Clave foránea para botones
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: "#/definitions/Boton"
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/Boton"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Actualizar botones de un Cliente.
  "/Cliente/{id}/notification_token/{fk}":
    get:
      tags:
        - Cliente
      summary: Buscar notification_token de un Cliente.
      operationId: Cliente.prototype.__findById__notification_token
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: fk
          in: path
          description: Clave foránea para notification_token
          required: true
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/NotificationToken"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Buscar notification_token de un Cliente.
    delete:
      tags:
        - Cliente
      summary: Suprimir notification_token de un Cliente.
      operationId: Cliente.prototype.__destroyById__notification_token
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: fk
          in: path
          description: Clave foránea para notification_token
          required: true
          type: string
          format: JSON
      responses:
        "204":
          description: Request was successful
        "401": *a1
        "404": *a3
      deprecated: false
      description: Suprimir notification_token de un Cliente.
  "/Cliente/{id}/direcciones/{fk}":
    get:
      tags:
        - Cliente
      summary: Buscar direcciones de un Cliente.
      operationId: Cliente.prototype.__findById__direcciones
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: fk
          in: path
          description: Clave foránea para direcciones
          required: true
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/Direccion"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Buscar direcciones de un Cliente.
    delete:
      tags:
        - Cliente
      summary: Suprimir direcciones de un Cliente.
      operationId: Cliente.prototype.__destroyById__direcciones
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: fk
          in: path
          description: Clave foránea para direcciones
          required: true
          type: string
          format: JSON
      responses:
        "204":
          description: Request was successful
        "401": *a1
        "404": *a3
      deprecated: false
      description: Suprimir direcciones de un Cliente.
    put:
      tags:
        - Cliente
      summary: Actualizar direcciones de un Cliente.
      operationId: Cliente.prototype.__updateById__direcciones
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: fk
          in: path
          description: Clave foránea para direcciones
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: "#/definitions/Direccion"
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/Direccion"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Actualizar direcciones de un Cliente.
  "/Cliente/{id}/direccion_default":
    get:
      tags:
        - Cliente
      summary: Muestra la Dirección por Defecto de un Cliente.
      operationId: Cliente.prototype.__get__direccion_default
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: refresh
          in: query
          required: false
          type: boolean
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/Direccion"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Muestra la Dirección por Defecto de un Cliente.
  "/Cliente/{id}/mediospago/{fk}":
    get:
      tags:
        - Cliente
      summary: Buscar Medios de Pago de un Cliente.
      operationId: Cliente.prototype.__findById__mediospago
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: fk
          in: path
          description: Clave foránea para mediospago
          required: true
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/MedioPago"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Buscar Medios de Pago de un Cliente.
    delete:
      tags:
        - Cliente
      summary: Suprimir Medios de Pago de un Cliente.
      operationId: Cliente.prototype.__destroyById__mediospago
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: fk
          in: path
          description: Clave foránea para mediospago
          required: true
          type: string
          format: JSON
      responses:
        "204":
          description: Request was successful
        "401": *a1
        "404": *a3
      deprecated: false
      description: Suprimir Medios de Pago de un Cliente.
  "/Cliente/{id}/mediopago_default":
    get:
      tags:
        - Cliente
      summary: Muestra el Medio de Pago por defecto de un Cliente.
      operationId: Cliente.prototype.__get__mediopago_default
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: refresh
          in: query
          required: false
          type: boolean
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/MedioPago"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Muestra el Medio de Pago por defecto de un Cliente.
  "/Cliente/{id}/pedidos/{fk}":
    get:
      tags:
        - Cliente
      summary: Buscar pedidos de un Cliente.
      operationId: Cliente.prototype.__findById__pedidos
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: fk
          in: path
          description: Clave foránea para pedidos
          required: true
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/Pedido"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Buscar pedidos de un Cliente.
    delete:
      tags:
        - Cliente
      summary: Suprimir pedidos de un Cliente.
      operationId: Cliente.prototype.__destroyById__pedidos
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: fk
          in: path
          description: Clave foránea para pedidos
          required: true
          type: string
          format: JSON
      responses:
        "204":
          description: Request was successful
        "401": *a1
        "404": *a3
      deprecated: false
      description: Suprimir pedidos de un Cliente.
  "/Cliente/{id}/transacciones_webpay/{fk}":
    get:
      tags:
        - Cliente
      summary: Buscar transacciones_webpay de un Cliente.
      operationId: Cliente.prototype.__findById__transacciones_webpay
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: fk
          in: path
          description: Clave foránea para transacciones_webpay
          required: true
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/WebpayTransaccion"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Buscar transacciones_webpay de un Cliente.
  "/Cliente/{id}/botones":
    get:
      tags:
        - Cliente
      summary: Lista botones de un Cliente.
      operationId: Cliente.prototype.__get__botones
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              $ref: "#/definitions/Boton"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Lista botones de un Cliente.
  "/Cliente/{id}/notification_token":
    get:
      tags:
        - Cliente
      summary: Lista notification_token de un Cliente.
      operationId: Cliente.prototype.__get__notification_token
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              $ref: "#/definitions/NotificationToken"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Lista notification_token de un Cliente.
    post:
      tags:
        - Cliente
      summary: Crea o actualiza un notification token
      operationId: Cliente.prototype.upsertNotificationToken
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: "#/definitions/Cliente"
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/NotificationToken"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Crea o actualiza un notification token
  "/Cliente/{id}/direcciones":
    get:
      tags:
        - Cliente
      summary: Lista direcciones de un Cliente.
      operationId: Cliente.prototype.__get__direcciones
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              $ref: "#/definitions/Direccion"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Lista direcciones de un Cliente.
    post:
      tags:
        - Cliente
      summary: Agrega una entidad direcciones a un Cliente.
      operationId: Cliente.prototype.__create__direcciones
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: "#/definitions/Direccion"
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/Direccion"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Agrega una entidad direcciones a un Cliente.
  "/Cliente/{id}/mediospago":
    get:
      tags:
        - Cliente
      summary: Lista Medios de Pago de un Cliente.
      operationId: Cliente.prototype.__get__mediospago
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              $ref: "#/definitions/MedioPago"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Lista Medios de Pago de un Cliente.
    post:
      tags:
        - Cliente
      summary: Agrega una entidad mediospago a un Cliente.
      operationId: Cliente.prototype.__create__mediospago
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: "#/definitions/MedioPago"
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/MedioPago"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Agrega una entidad mediospago a un Cliente.
  "/Cliente/{id}/pedidos":
    get:
      tags:
        - Cliente
      summary: Lista pedidos de un Cliente.
      operationId: Cliente.prototype.__get__pedidos
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              $ref: "#/definitions/Pedido"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Lista pedidos de un Cliente.
    post:
      tags:
        - Cliente
      summary: Agrega una entidad pedidos a un Cliente.
      operationId: Cliente.prototype.__create__pedidos
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: "#/definitions/Pedido"
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/Pedido"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Agrega una entidad pedidos a un Cliente.
  "/Cliente/{id}/transacciones_webpay":
    get:
      tags:
        - Cliente
      summary: Lista transacciones_webpay de un Cliente.
      operationId: Cliente.prototype.__get__transacciones_webpay
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              $ref: "#/definitions/WebpayTransaccion"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Lista transacciones_webpay de un Cliente.
  /Cliente:
    post:
      tags:
        - Cliente
      summary: Crea un Cliente y persiste en BBDD.
      operationId: Cliente.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: "#/definitions/Cliente"
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/Cliente"
        "401": *a1
      deprecated: false
      description: Crea un Cliente y persiste en BBDD.
    get:
      tags:
        - Cliente
      summary: Lista completa de Clientes (filtro opcional).
      operationId: Cliente.find
      parameters:
        - name: filter
          in: query
          description: Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string
            (`{"where":{"something":"value"}}`).  See
            https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries
            for more details.
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              $ref: "#/definitions/Cliente"
        "401": *a1
      deprecated: false
      description: Lista completa de Clientes (filtro opcional).
  "/Cliente/{id}":
    get:
      tags:
        - Cliente
      summary: Encuentra un Cliente por {{id}} en la BBDD.
      operationId: Cliente.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/Cliente"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Encuentra un Cliente por {{id}} en la BBDD.
    patch:
      tags:
        - Cliente
      summary: Modifica o crea un Cliente y persiste en BBDD.
      operationId: Cliente.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: "#/definitions/Cliente"
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/Cliente"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Modifica o crea un Cliente y persiste en BBDD.
  /Cliente/login:
    post:
      tags:
        - Cliente
      summary: Cliente Inicia sesión usando email y password.
      operationId: Cliente.login
      parameters:
        - name: credentials
          in: body
          required: true
          schema:
            type: object
        - name: include
          in: query
          description: Related objects to include in the response. See the description of
            return value for more details.
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            description: >+
              El cuerpo de respuesta contiene propiedades de la AccessToken
              creada durante el inicio de la sesión.

              Dependiendo del valor del parámetro `include`, el cuerpo puede contener propiedades adicionales:
                - `user` - `U+007BUserU+007D` - Datos del usuario conectado actualmente. (`include=user`)

            type: object
        "400":
          description: BAD_REQUEST
          schema:
            $ref: "#/definitions/BAD_REQUEST"
          examples:
            application/json:
              statusCode: 400
              name: Error
              message: username o email es obligatorio
              code: USERNAME_EMAIL_REQUIRED
        "401":
          description: LOGIN_FAILED
          schema:
            $ref: "#/definitions/LOGIN_FAILED"
          examples:
            application/json:
              statusCode: 401
              name: Error
              message: El inicio de sesión ha fallado
              code: LOGIN_FAILED
      deprecated: false
      description: Cliente Inicia sesión usando email y password.
  /Cliente/logout:
    post:
      tags:
        - Cliente
      summary: Cliente Cierra sesión. Requiere AccessToken.
      operationId: Cliente.logout
      parameters: []
      responses:
        "204":
          description: Request was successful
        "401": *a1
      deprecated: false
      description: Cliente Cierra sesión. Requiere AccessToken.
  "/Cliente/{id}/verify":
    post:
      tags:
        - Cliente
      summary: Gatilla la verificación de la cuenta de usuario
      operationId: Cliente.prototype.verify
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
      responses:
        "204":
          description: Request was successful
        "401": *a1
        "404": *a3
      deprecated: false
      description: Gatilla la verificación de la cuenta de usuario
  /Cliente/confirm:
    get:
      tags:
        - Cliente
      summary: Cliente Confirma registro siguiendo un link.
      operationId: Cliente.confirm
      parameters:
        - name: uid
          in: query
          required: true
          type: string
        - name: token
          in: query
          required: true
          type: string
        - name: redirect
          in: query
          required: false
          type: string
      responses:
        "204":
          description: Request was successful
        "401": *a1
      deprecated: false
      description: Cliente Confirma registro siguiendo un link.
  /Cliente/reset:
    post:
      tags:
        - Cliente
      summary: Reset password for a user with email.
      operationId: Cliente.resetPassword
      parameters:
        - name: options
          in: body
          required: true
          schema:
            type: object
      responses:
        "204":
          description: Request was successful
        "401": *a1
      deprecated: false
      description: Reset password for a user with email.
  /Cliente/change-password:
    post:
      tags:
        - Cliente
      summary: Cambia el password de un usuario.
      operationId: Cliente.changePassword
      parameters:
        - name: oldPassword
          in: formData
          required: true
          type: string
        - name: newPassword
          in: formData
          required: true
          type: string
      responses:
        "204":
          description: Request was successful
        "401": *a1
      deprecated: false
      description: Cambia el password de un usuario.
  /Cliente/reset-password:
    post:
      tags:
        - Cliente
      summary: Cliente Restablece password de un usuario mediante correoy link único.
      operationId: Cliente.setPassword
      parameters:
        - name: newPassword
          in: formData
          required: true
          type: string
      responses:
        "204":
          description: Request was successful
        "401": *a1
      deprecated: false
      description: Cliente Restablece password de un usuario mediante correoy link único.
  "/Cliente/isButtonClaimed/{idBoton}":
    get:
      tags:
        - Cliente
      summary: Verifica si un botón ya ha sido inscrito por este u otro cliente
      operationId: Cliente.isButtonClaimed
      parameters:
        - name: idBoton
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Request was successful
          schema:
            type: object
        "401": *a1
      deprecated: false
      description: Verifica si un botón ya ha sido inscrito por este u otro cliente
  "/Cliente/ventanasDireccion/{idDireccion}":
    get:
      tags:
        - Cliente
      summary: Lista ventanas horarias con el costo de despacho para una dirección
        específica
      operationId: Cliente.ventanasDireccion
      parameters:
        - name: idDireccion
          in: path
          required: true
          type: number
          format: double
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              $ref: "#/definitions/VentanaHoraria"
        "401": *a1
      deprecated: false
      description: Lista ventanas horarias con el costo de despacho para una dirección
        específica
  /Cliente/fbauth:
    post:
      tags:
        - Cliente
      summary: Inscribe o loguea a un usuario usando facebook
      operationId: Cliente.fbAuth
      parameters:
        - name: data
          in: body
          required: false
          schema:
            $ref: "#/definitions/Cliente"
      responses:
        "200":
          description: Request was successful
          schema:
            type: object
        "401": *a1
      deprecated: false
      description: Inscribe o loguea a un usuario usando facebook
  "/Cliente/{id}/notification_token/sendToTopic":
    post:
      tags:
        - Cliente
      summary: envía notificación al topic del usuario
      operationId: Cliente.prototype.sendToTopic
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: "#/definitions/Cliente"
      responses:
        "200":
          description: Request was successful
          schema:
            type: object
        "401": *a1
        "404": *a3
      deprecated: false
      description: envía notificación al topic del usuario
  "/Cliente/{id}/notification_token/sendToDeviceGroup":
    post:
      tags:
        - Cliente
      summary: envía notificación al un grupo arbitrario
      operationId: Cliente.prototype.sendToDeviceGroup
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: "#/definitions/Cliente"
      responses:
        "200":
          description: Request was successful
          schema:
            type: object
        "401": *a1
        "404": *a3
      deprecated: false
      description: envía notificación al un grupo arbitrario
  "/Cliente/{id}/notification_token/sendToDevice":
    post:
      tags:
        - Cliente
      summary: envía notificación a un token específico
      operationId: Cliente.prototype.sendToDevice
      parameters:
        - name: id
          in: path
          description: Cliente id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: "#/definitions/Cliente"
      responses:
        "200":
          description: Request was successful
          schema:
            type: object
        "401": *a1
        "404": *a3
      deprecated: false
      description: envía notificación a un token específico
  "/Pedido/{id}/direccion":
    get:
      tags:
        - Pedido
      summary: Muestra la Dirección asociada a un Pedido.
      operationId: Pedido.prototype.__get__direccion
      parameters:
        - name: id
          in: path
          description: Pedido id
          required: true
          type: string
          format: JSON
        - name: refresh
          in: query
          required: false
          type: boolean
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/Direccion"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Muestra la Dirección asociada a un Pedido.
  "/Pedido/{id}/mediopago":
    get:
      tags:
        - Pedido
      summary: Muestra el Medio de Pago asociado a un Pedido.
      operationId: Pedido.prototype.__get__mediopago
      parameters:
        - name: id
          in: path
          description: Pedido id
          required: true
          type: string
          format: JSON
        - name: refresh
          in: query
          required: false
          type: boolean
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/MedioPago"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Muestra el Medio de Pago asociado a un Pedido.
  "/Pedido/{id}/estado":
    get:
      tags:
        - Pedido
      summary: Muestra el Estado Actual de un Pedido.
      operationId: Pedido.prototype.__get__estado
      parameters:
        - name: id
          in: path
          description: Pedido id
          required: true
          type: string
          format: JSON
        - name: refresh
          in: query
          required: false
          type: boolean
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/PedidoEstado"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Muestra el Estado Actual de un Pedido.
  "/Pedido/{id}/transaccion":
    get:
      tags:
        - Pedido
      summary: Muestra transaccion un Pedido.
      operationId: Pedido.prototype.__get__transaccion
      parameters:
        - name: id
          in: path
          description: Pedido id
          required: true
          type: string
          format: JSON
        - name: refresh
          in: query
          required: false
          type: boolean
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/WebpayTransaccion"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Muestra transaccion un Pedido.
  "/Pedido/{id}/historial":
    get:
      tags:
        - Pedido
      summary: Lista historial de un Pedido.
      operationId: Pedido.prototype.__get__historial
      parameters:
        - name: id
          in: path
          description: Pedido id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              $ref: "#/definitions/PedidoHistorial"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Lista historial de un Pedido.
  "/Pedido/{id}":
    get:
      tags:
        - Pedido
      summary: Encuentra un Pedido por {{id}} en la BBDD.
      operationId: Pedido.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/Pedido"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Encuentra un Pedido por {{id}} en la BBDD.
    patch:
      tags:
        - Pedido
      summary: Modifica o crea un Pedido y persiste en BBDD.
      operationId: Pedido.prototype.patchAttributes
      parameters:
        - name: id
          in: path
          description: Pedido id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            description: An object of model property name/value pairs
            $ref: "#/definitions/Pedido"
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/Pedido"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Modifica o crea un Pedido y persiste en BBDD.
  /Pedido:
    get:
      tags:
        - Pedido
      summary: Lista completa de Pedidos (propios) (filtro opcional).
      operationId: Pedido.find
      parameters:
        - name: filter
          in: query
          description: Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string
            (`{"where":{"something":"value"}}`).  See
            https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries
            for more details.
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              $ref: "#/definitions/Pedido"
        "401": *a1
      deprecated: false
      description: Lista completa de Pedidos (propios) (filtro opcional).
  "/Pedido/{id}/resumen":
    get:
      tags:
        - Pedido
      summary: Lista un resumen del pedido
      operationId: Pedido.prototype.resumen
      parameters:
        - name: id
          in: path
          description: Pedido id
          required: true
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: object
        "401": *a1
        "404": *a3
      deprecated: false
      description: Lista un resumen del pedido
  "/Pedido/costo_despacho/{monto}":
    get:
      tags:
        - Pedido
      summary: Lista costo despacho dado un monto
      operationId: Pedido.costo_despacho
      parameters:
        - name: monto
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Request was successful
          schema:
            type: object
        "401": *a1
      deprecated: false
      description: Lista costo despacho dado un monto
  "/Producto/{id}/categoria":
    get:
      tags:
        - Producto
      summary: Muestra la Categoria de un Producto.
      operationId: Producto.prototype.__get__categoria
      parameters:
        - name: id
          in: path
          description: Producto id
          required: true
          type: string
          format: JSON
        - name: refresh
          in: query
          required: false
          type: boolean
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/ProductoCategoria"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Muestra la Categoria de un Producto.
  "/Producto/{id}/marca":
    get:
      tags:
        - Producto
      summary: Muestra la Marca de un Producto.
      operationId: Producto.prototype.__get__marca
      parameters:
        - name: id
          in: path
          description: Producto id
          required: true
          type: string
          format: JSON
        - name: refresh
          in: query
          required: false
          type: boolean
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/Marca"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Muestra la Marca de un Producto.
  /Producto/botones:
    get:
      tags:
        - Producto
      summary: Lista Productos de tipo Botón.
      operationId: Producto.__get__botones
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              $ref: "#/definitions/Boton"
        "401": *a1
      deprecated: false
      description: Lista Productos de tipo Botón.
  /Producto/consumibles:
    get:
      tags:
        - Producto
      summary: Lista Productos de tipo consumible.
      operationId: Producto.__get__consumibles
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              $ref: "#/definitions/Producto"
        "401": *a1
      deprecated: false
      description: Lista Productos de tipo consumible.
  "/Producto/{id}/comunas_restringidas":
    get:
      tags:
        - Producto
      summary: Lista Comunas Restringidas de un Producto.
      operationId: Producto.prototype.__get__comunas_restringidas
      parameters:
        - name: id
          in: path
          description: Producto id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              $ref: "#/definitions/Comuna"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Lista Comunas Restringidas de un Producto.
  "/Producto/{id}":
    get:
      tags:
        - Producto
      summary: Encuentra un Producto por {{id}} en la BBDD.
      operationId: Producto.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/Producto"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Encuentra un Producto por {{id}} en la BBDD.
  /Producto:
    get:
      tags:
        - Producto
      summary: Lista completa de Productos (filtro opcional).
      operationId: Producto.find
      parameters:
        - name: filter
          in: query
          description: Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string
            (`{"where":{"something":"value"}}`).  See
            https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries
            for more details.
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              $ref: "#/definitions/Producto"
        "401": *a1
      deprecated: false
      description: Lista completa de Productos (filtro opcional).
  "/Producto/{id}/image":
    post:
      tags:
        - Producto
      summary: actualiza la imagen del Producto
      operationId: Producto.prototype.uploadImage
      parameters:
        - name: id
          in: path
          description: Producto id
          required: true
          type: string
          format: JSON
        - name: data
          in: body
          required: false
          schema:
            $ref: "#/definitions/Producto"
      responses:
        "200":
          description: Request was successful
          schema:
            type: object
        "401": *a1
        "404": *a3
        "422": *a2
      deprecated: false
      description: actualiza la imagen del Producto
  /ProductoCategoria/botones:
    get:
      tags:
        - ProductoCategoria
      summary: Lista Productos de tipo Botón de una Categoría de Producto.
      operationId: ProductoCategoria.__get__botones
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              $ref: "#/definitions/ProductoCategoria"
        "401": *a1
      deprecated: false
      description: Lista Productos de tipo Botón de una Categoría de Producto.
  /ProductoCategoria/consumibles:
    get:
      tags:
        - ProductoCategoria
      summary: Lista Productos de tipo consumible de una Categoría de Producto.
      operationId: ProductoCategoria.__get__consumibles
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              $ref: "#/definitions/ProductoCategoria"
        "401": *a1
      deprecated: false
      description: Lista Productos de tipo consumible de una Categoría de Producto.
  "/ProductoCategoria/{id}":
    get:
      tags:
        - ProductoCategoria
      summary: Encuentra una Categoría de Producto por {{id}} en la BBDD.
      operationId: ProductoCategoria.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/ProductoCategoria"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Encuentra una Categoría de Producto por {{id}} en la BBDD.
  /ProductoCategoria:
    get:
      tags:
        - ProductoCategoria
      summary: Lista completa de Categorías de Producto (filtro opcional).
      operationId: ProductoCategoria.find
      parameters:
        - name: filter
          in: query
          description: Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string
            (`{"where":{"something":"value"}}`).  See
            https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries
            for more details.
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              $ref: "#/definitions/ProductoCategoria"
        "401": *a1
      deprecated: false
      description: Lista completa de Categorías de Producto (filtro opcional).
  "/Marca/{id}/botones":
    get:
      tags:
        - Marca
      summary: Lista botones de una Marca.
      operationId: Marca.prototype.__get__botones
      parameters:
        - name: id
          in: path
          description: Marca id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              $ref: "#/definitions/Boton"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Lista botones de una Marca.
  "/Marca/{id}/botones_disponibles":
    get:
      tags:
        - Marca
      summary: Lista botones_disponibles de una Marca.
      operationId: Marca.prototype.__get__botones_disponibles
      parameters:
        - name: id
          in: path
          description: Marca id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              $ref: "#/definitions/BotonDisponible"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Lista botones_disponibles de una Marca.
  "/Marca/{id}/productos":
    get:
      tags:
        - Marca
      summary: Lista Productos de una Marca.
      operationId: Marca.prototype.__get__productos
      parameters:
        - name: id
          in: path
          description: Marca id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              $ref: "#/definitions/Producto"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Lista Productos de una Marca.
  "/Marca/{id}":
    get:
      tags:
        - Marca
      summary: Encuentra una Marca por {{id}} en la BBDD.
      operationId: Marca.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/Marca"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Encuentra una Marca por {{id}} en la BBDD.
  /Marca:
    get:
      tags:
        - Marca
      summary: Lista completa de Marcas (filtro opcional).
      operationId: Marca.find
      parameters:
        - name: filter
          in: query
          description: Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string
            (`{"where":{"something":"value"}}`).  See
            https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries
            for more details.
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              $ref: "#/definitions/Marca"
        "401": *a1
      deprecated: false
      description: Lista completa de Marcas (filtro opcional).
  "/VentanaHoraria/{id}/pedidos":
    get:
      tags:
        - VentanaHoraria
      summary: Lista pedidos (propios) dentro de una Ventana Horaria.
      operationId: VentanaHoraria.prototype.__get__pedidos
      parameters:
        - name: id
          in: path
          description: VentanaHoraria id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              $ref: "#/definitions/Pedido"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Lista pedidos (propios) dentro de una Ventana Horaria.
  "/VentanaHoraria/{id}":
    get:
      tags:
        - VentanaHoraria
      summary: Encuentra una Ventana Horaria por {{id}} en la BBDD.
      operationId: VentanaHoraria.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include - must be a JSON-encoded string
            ({"something":"value"})
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            $ref: "#/definitions/VentanaHoraria"
        "401": *a1
        "404": *a3
      deprecated: false
      description: Encuentra una Ventana Horaria por {{id}} en la BBDD.
  /VentanaHoraria:
    get:
      tags:
        - VentanaHoraria
      summary: Lista completa de Ventanas Horarias (filtro opcional).
      operationId: VentanaHoraria.find
      parameters:
        - name: filter
          in: query
          description: Filter defining fields, where, include, order, offset, and limit -
            must be a JSON-encoded string
            (`{"where":{"something":"value"}}`).  See
            https://loopback.io/doc/en/lb3/Querying-data.html#using-stringified-json-in-rest-queries
            for more details.
          required: false
          type: string
          format: JSON
      responses:
        "200":
          description: Request was successful
          schema:
            type: array
            items:
              $ref: "#/definitions/VentanaHoraria"
        "401": *a1
      deprecated: false
      description: Lista completa de Ventanas Horarias (filtro opcional).
tags:
  - name: Misc
    description: Endpoints no relacionados a ningún modelo en particular
  - name: Boton
    description: Los botones de un Cliente
  - name: Cliente
    description: Usuarios finales del servicio myDot. Tienen la App instalada en su
      dispositivo
  - name: Pedido
    description: Pedido generado por Botón o App. Sólo visible para Cliente dueño y
      Operadores
  - name: Producto
    description: Los productos disponibles para comprar
  - name: ProductoCategoria
    description: Categorías de producto
  - name: Marca
    description: Marcas de producto (pueden ser de un mismo fabricante)
  - name: VentanaHoraria
    description: Franjas horarias de despacho (8:00 a 22:00) y entrega inmediata
consumes:
  - application/json
  - application/x-www-form-urlencoded
produces:
  - application/json
definitions:
  Misc:
    description: Endpoints no relacionados a ningún modelo en particular
    properties:
      id:
        type: number
        format: double
    additionalProperties: false
  x-any:
    properties: {}
  Cliente:
    description: Usuarios finales del servicio myDot. Tienen la App instalada en su
      dispositivo
    properties:
      id:
        maxLength: 7
        format: integer
        minimum: 1
        maximum: 10000
        pattern: \d{3}
        type: number
      rut:
        maxLength: 12
        pattern: \d{1,2}\.{0,1}\d{3}\.{0,1}\d{3}-[0-9Kk]
        type: string
      email:
        maxLength: 36
        format: email
        type: string
      telefono:
        maxLength: 15
        pattern: ^56\d{1} \d{4} \d{4}$
        type: string
      username:
        maxLength: 128
        type: string
      apellido:
        maxLength: 128
        type: string
      despachoGratis:
        maxLength: 1
        format: integer
        default: 1
        type: number
      avatar:
        maxLength: 512
        default: https://static.mydot.app/avatar.png
        type: string
      id_mediopago_default:
        maxLength: 7
        format: integer
        minimum: 1
        maximum: 10000
        pattern: \d{3}
        type: number
      id_direccion_default:
        maxLength: 7
        format: integer
        minimum: 1
        maximum: 10000
        pattern: \d{3}
        type: number
      updatedAt:
        format: date-time
        type: string
    required:
      - email
    additionalProperties: false
  Direccion:
    description: Las direcciones de un Cliente
    properties:
      id:
        maxLength: 7
        format: integer
        minimum: 1
        maximum: 10000
        pattern: \d{3}
        type: number
      idCliente:
        maxLength: 7
        format: integer
        minimum: 1
        maximum: 10000
        pattern: \d{3}
        type: number
      direccion:
        maxLength: 65535
        type: string
      numero:
        maxLength: 512
        description: Si aplica, el depto, oficina, letra o numeración interior
        type: string
      instrucciones:
        description: Indicaciones para llegar, despachar, etc a esta dirección
        type: string
      conCobertura:
        default: false
        type: boolean
      comuna:
        maxLength: 64
        type: string
      region:
        maxLength: 128
        type: string
      pais:
        maxLength: 64
        type: string
      lng:
        maxLength: 7
        format: float
        default: -30.78
        minimum: -80
        maximum: 80
        type: number
      lat:
        maxLength: 7
        format: float
        default: -70.38
        minimum: -80
        maximum: 80
        type: number
      geom:
        $ref: "#/definitions/GeoPoint"
      link:
        type: string
    required:
      - direccion
      - lng
      - lat
    additionalProperties: false
  MedioPago:
    description: Los medios de pago de un Cliente
    properties:
      id:
        maxLength: 7
        format: integer
        minimum: 1
        maximum: 10000
        pattern: \d{3}
        type: number
      idCliente:
        maxLength: 7
        format: integer
        minimum: 1
        maximum: 10000
        pattern: \d{3}
        type: number
      username:
        type: string
      idEstado:
        maxLength: 2
        format: integer
        default: 1
        type: number
      nombreEstado:
        type: string
      ordenCompra:
        type: string
      creditCardType:
        default: Visa
        type: string
      responseCode:
        type: string
      responseMessage:
        maxLength: 65535
        type: string
      last4CardDigits:
        maxLength: 4
        pattern: \d{4}
        type: string
      numero:
        maxLength: 20
        pattern: \*{4} \*{4} \*{4} \d{4}
        type: string
      alias:
        type: string
    additionalProperties: false
  BotonProducto:
    description: Relación entre un botón y los productos que ordena al presionar
    properties:
      idBoton:
        maxLength: 12
        pattern: "[0-9A-F]{12}"
        type: string
      idProducto:
        maxLength: 7
        format: integer
        minimum: 1
        maximum: 10000
        pattern: \d{3}
        type: number
      cantidad:
        format: integer
        default: 1
        pattern: \d{1}
        type: number
    required:
      - idBoton
      - idProducto
    additionalProperties: false
  Marca:
    description: Marcas de producto (pueden ser de un mismo fabricante)
    properties:
      id:
        maxLength: 7
        format: integer
        minimum: 1
        maximum: 10000
        pattern: \d{3}
        type: number
      nombreMarca:
        maxLength: 65535
        type: string
      image:
        maxLength: 512
        type: string
      idFabricante:
        format: integer
        type: number
      categoriaPrincipal:
        maxLength: 64
        type: string
    required:
      - id
      - nombreMarca
      - idFabricante
    additionalProperties: false
  VentanaHoraria:
    description: Franjas horarias de despacho (8:00 a 22:00) y entrega inmediata
    properties:
      id:
        maxLength: 2
        format: integer
        minimum: 1
        maximum: 26
        type: number
      nombre:
        maxLength: 64
        type: string
      horaInicio:
        format: integer
        type: number
      horaFin:
        format: integer
        type: number
      isInmediate:
        default: false
        type: boolean
      costoDespacho:
        maxLength: 5
        format: integer
        minimum: 0
        maximum: 99999
        pattern: \d{1,5}
        type: number
    required:
      - id
      - nombre
      - horaInicio
      - horaFin
      - costoDespacho
    additionalProperties: false
  BotonVentanaHoraria:
    description: Representa la relación ManyToMany entre botones y ventanas horarias
    properties:
      idBoton:
        maxLength: 12
        pattern: "[0-9A-F]{12}"
        type: string
      idVentana:
        maxLength: 2
        format: integer
        minimum: 1
        maximum: 24
        pattern: \d{2}
        type: number
    required:
      - idBoton
      - idVentana
    additionalProperties: false
  Pedido:
    description: Pedido generado por Botón o App. Sólo visible para Cliente dueño y
      Operadores
    properties:
      id:
        maxLength: 5
        format: integer
        minimum: 1
        maximum: 10000
        pattern: \d{3}
        type: number
      idProducto:
        maxLength: 5
        format: integer
        minimum: 1
        maximum: 10000
        pattern: \d{3}
        type: number
      idMediopago:
        maxLength: 7
        format: integer
        minimum: 1
        maximum: 10000
        pattern: \d{3}
        type: number
      idTransaccion:
        maxLength: 16
        format: integer
        minimum: 1565000000000001
        maximum: 8565073562300389
        pattern: \d{16}
        type: number
      idDireccion:
        maxLength: 7
        format: integer
        minimum: 1
        maximum: 10000
        pattern: \d{3}
        type: number
      idEstado:
        maxLength: 7
        format: integer
        minimum: 1
        maximum: 9
        pattern: \d{1}
        type: number
      idCliente:
        maxLength: 7
        format: integer
        minimum: 1
        maximum: 10000
        pattern: \d{3}
        description: ID del cliente que gatilla el pedido (se lee del token)
        type: number
      idBoton:
        maxLength: 12
        pattern: "[0-9A-F]{12}"
        type: string
      precioNeto:
        maxLength: 7
        format: integer
        minimum: 1
        maximum: 250000
        pattern: \d{6}
        description: Precio neto, igual a la suma de los productos que componen el pedido
        type: number
      costoDespacho:
        maxLength: 7
        format: integer
        default: 0
        minimum: 0
        maximum: 250000
        pattern: \d{6}
        description: Costo del despacho, a priori cero para pedidos cuyo neto es mayor a
          10.000
        type: number
      descuento:
        maxLength: 7
        format: integer
        default: 0
        minimum: 0
        maximum: 250000
        pattern: \d{6}
        description: Descuento aplicado por promociones o saldo a favor en el Botón
        type: number
      descuento_primer_pedido:
        maxLength: 7
        format: integer
        default: 0
        minimum: 0
        maximum: 250000
        pattern: \d{6}
        description: Descuento aplicado sobre el despacho en el primer pedido del cliente
        type: number
      precioTotal:
        maxLength: 7
        format: integer
        minimum: 1
        maximum: 250000
        pattern: \d{6}
        description: Precio a pagar por el pedido = (precio neto + costo despacho -
          descuento)
        type: number
      idMarca:
        maxLength: 7
        format: integer
        minimum: 1
        maximum: 10000
        pattern: \d{3}
        description: Marca que limita los productos de este botón
        type: number
      nombreMarca:
        maxLength: 64
        description: Marca del los productos del pedido
        type: string
      createdAt:
        format: date-time
        type: string
      updatedAt:
        format: date-time
        type: string
    additionalProperties: false
  Producto:
    description: Los productos disponibles para comprar
    properties:
      id:
        maxLength: 7
        format: integer
        minimum: 1
        maximum: 10000
        pattern: \d{3}
        type: number
      descripcion:
        maxLength: 65535
        type: string
      sku:
        format: "[A-Z]{5,8}00\\w{2}"
        maxLength: 14
        type: string
      idCategoria:
        maxLength: 7
        format: integer
        minimum: 1
        maximum: 10000
        type: number
      nombre_categoria:
        maxLength: 64
        type: string
      idMarca:
        maxLength: 7
        format: integer
        minimum: 1
        maximum: 10000
        type: number
      nombreMarca:
        maxLength: 64
        description: Marca del producto
        type: string
      precioBase:
        maxLength: 7
        format: integer
        minimum: 1
        maximum: 10000
        pattern: \d{3}
        type: number
      descuento:
        maxLength: 7
        format: integer
        minimum: 1
        maximum: 10000
        pattern: \d{3}
        type: number
      isButton:
        description: Define si el producto es un botón o un consumible
        type: boolean
      image:
        format: uri
        maxLength: 512
        type: string
    required:
      - id
      - descripcion
      - idCategoria
      - idMarca
      - precioBase
      - descuento
    additionalProperties: false
  Boton:
    description: Los botones de un Cliente
    properties:
      id:
        maxLength: 12
        pattern: "[0-9A-F]{12}"
        type: string
      idMarca:
        maxLength: 7
        format: integer
        minimum: 1
        maximum: 10000
        pattern: \d{3}
        description: Marca que limita los productos de este botón
        type: number
      idCliente:
        maxLength: 7
        format: integer
        minimum: 1
        maximum: 10000
        pattern: \d{3}
        description: ID del cliente que compró este dot
        type: number
      idMediopago:
        maxLength: 7
        format: integer
        minimum: 1
        maximum: 10000
        pattern: \d{3}
        description: Medio de pago asociado a este botón
        type: number
      idDireccion:
        maxLength: 7
        format: integer
        minimum: 1
        maximum: 10000
        pattern: \d{3}
        description: Dirección de despacho asociada a este botón
        type: number
      isActive:
        default: true
        type: boolean
      nombreMarca:
        maxLength: 64
        description: Marca del botón
        type: string
      ssid:
        maxLength: 128
        description: SSID de la wifi asociada al botón
        type: string
      saldo:
        maxLength: 5
        format: integer
        default: 5000
        minimum: 0
        maximum: 99999
        pattern: \d{5}
        description: Saldo a favor cargado en el botón
        type: number
      comment:
        maxLength: 512
        description: Comentario arbitrario en esta entidad
        type: string
    required:
      - id
      - idCliente
    additionalProperties: false
  NotificationToken:
    description: Modelo Básico que extiende PersistedModel
    properties:
      deviceId:
        type: string
      idCliente:
        type: number
        format: double
      platform:
        type: string
      config_props:
        type: object
      topic:
        type: string
      access_token:
        type: string
      createdAt:
        format: date-time
        type: string
      updatedAt:
        format: date-time
        type: string
    required:
      - deviceId
    additionalProperties: false
  WebpayTransaccion:
    description: Transacción registrada a través de Webpay OneClick
    properties:
      id:
        maxLength: 16
        format: integer
        minimum: 1565000000000001
        maximum: 8565073562300389
        pattern: \d{16}
        type: number
      buyOrder:
        type: number
        format: double
      idPedido:
        type: number
        format: double
      idMediopago:
        type: number
        format: double
      transactionId:
        type: number
        format: double
      amount:
        type: number
        format: double
      status:
        maxLength: 32
        type: string
      responseCode:
        type: number
        format: double
      responseCodeLocaleSpanish:
        maxLength: 65535
        type: string
      responseMessage:
        maxLength: 65535
        type: string
      last4CardDigits:
        maxLength: 4
        default: "0000"
        pattern: \d{4}
        type: string
      creditCardType:
        default: Visa
        type: string
      authorizationCode:
        type: string
      reverseCode:
        type: string
      createdAt:
        format: date-time
        type: string
      tbkUser:
        type: string
      updatedAt:
        format: date-time
        type: string
    required:
      - id
      - idMediopago
      - amount
      - last4CardDigits
    additionalProperties: false
  PedidoEstado:
    description: Estados posibles en que puede encontrarse un pedido
    properties:
      id:
        maxLength: 2
        format: integer
        minimum: 1
        maximum: 10
        type: number
      nombreEstado:
        maxLength: 64
        type: string
      descripcion:
        maxLength: 256
        type: string
      detalle:
        maxLength: 256
        type: string
      soloEstadoInicial:
        maxLength: 1
        default: 0
        description: No se puede devolver un pedido al estado inicial cuando ha pasado por
          otro estado
        type: number
        format: double
      soloEstadoFinal:
        maxLength: 1
        default: 0
        description: No se puede cambiar el estado de un pedido que está en un estado final
          (Entregado o Fallido)
        type: number
        format: double
      estadoCancelado:
        maxLength: 1
        default: 0
        description: "Cancelado: No se puede pasar a este estado desde un estado final. No
          se puede modificar este estado."
        type: number
        format: double
    required:
      - id
      - nombreEstado
      - descripcion
      - detalle
    additionalProperties: false
  PedidoHistorial:
    description: Historial de los distintos estados por los que ha pasado un pedido
    properties:
      id:
        format: integer
        type: number
      idPedido:
        format: integer
        type: number
      idEstado:
        format: integer
        type: number
    required:
      - id
      - idPedido
      - idEstado
    additionalProperties: false
  ProductoCategoria:
    description: Categorías de producto
    properties:
      id:
        maxLength: 3
        format: integer
        minimum: 1
        maximum: 100
        type: number
      descripcion:
        maxLength: 65535
        type: string
    required:
      - id
      - descripcion
    additionalProperties: false
  Comuna:
    description: Comuna asociada a una dirección
    properties:
      id:
        maxLength: 5
        format: \w{5}
        type: string
      nombreComuna:
        maxLength: 64
        type: string
      idProvincia:
        maxLength: 3
        type: string
      nombreProvincia:
        maxLength: 256
        type: string
      idRegion:
        maxLength: 2
        type: string
      nombreRegion:
        maxLength: 256
        type: string
    required:
      - id
      - nombreComuna
      - idProvincia
      - nombreProvincia
      - idRegion
      - nombreRegion
    additionalProperties: false
  BotonDisponible:
    description: Los botones disponibles asociados a una marca
    properties:
      id:
        maxLength: 12
        pattern: "[0-9A-F]{12}"
        type: string
      idMarca:
        maxLength: 7
        format: integer
        minimum: 1
        maximum: 10000
        pattern: \d{3}
        description: Marca que limita los productos de este botón
        type: number
    required:
      - id
    additionalProperties: false
  GeoPoint:
    properties:
      lat:
        type: number
      lng:
        type: number
  AUTHORIZATION_REQUIRED:
    description: Requiere Autorización (login)
    properties:
      error:
        type: x-any
    required:
      - error
  ER_DUP_ENTRY:
    description: Se ha intentado crear una entidad existente
    properties:
      error:
        type: x-any
    required:
      - error
  ACCESS_DENIED:
    description: Se intentó acceder un modelo sobre el cual no se tiene permiso
    properties:
      error:
        type: x-any
    required:
      - error
  LOGIN_FAILED:
    description: Se intentó acceder un modelo sobre el cual no se tiene permiso
    properties:
      error:
        type: x-any
    required:
      - error
  BAD_REQUEST:
    description: Petición tiene error de sintaxis
    properties:
      error:
        type: x-any
    required:
      - error
  MODEL_NOT_FOUND:
    description: No se ha encontrado instancia del modelo
    properties:
      error:
        type: x-any
    required:
      - error
host: "{{apidomain}}"

{
  "collection": {
    "info": {
      "_postman_id": "d1567aa2-add5-4c87-8ae8-c5f534b50e48",
      "name": "API MyDot Collection Tests v1.6.1 rev.20",
      "description": "## Definición del API MyDot, stable releave\n\n \n| Ambiente | VCS Branch                  | Documentación |\n|--------- | --------------------------- | --------------------------- |\n| production | [GitHub / master](https://github.com/TreidSPA/api.mydot.app/tree/master) | [master v1.3.6](https://docs.mydot.app?version=latest) |\n\n\n\nEsta documentación está destinada a los proveedores de desarrollo de la Aplicación MyDot y el Dashboard MyDot.\n\n### Referencia \n\nEl API está construído sobre el framework [Strongloop Loopback 3](https://loopback.io/doc/en/lb3), por lo cual ciertas funcionalidades no documentadas pueden consultarse en la documentación de dicho framework. \n\n\n----------------------- \n\n#### Filtros en Query String \n\nMuchos endpoints del API permiten manipular los resultados mediante la adición de un parámetro **{{filter}}** en el query string. (Véase [Loopback 3, Querying Data](https://loopback.io/doc/en/lb3/Querying-data.html#filters)) \n\nEste modificador permite: \n\n  - Restringir los campos de la respuesta [Fields Filter](https://loopback.io/doc/en/lb3/Fields-filter.html) \n  - Incluir entidades relacionadas anidadas en la respuesta [Include Filter](https://loopback.io/doc/en/lb3/Include-filter.html) \n  - Limitar cantidad de resultados [Limit filter](https://loopback.io/doc/en/lb3/Limit-filter.html) \n  - Ordenar según un campo de la respuesta [Order Filter](https://loopback.io/doc/en/lb3/Order-filter.html) \n  - Saltarse N elementos de una respuesta, para efectos de paginar [Skip Filter](https://loopback.io/doc/en/lb3/Skip-filter.html) \n  - Limitar las respuestas a un conjunto que cumpla ciertas condiciones [Where Filter](https://loopback.io/doc/en/lb3/Where-filter.html) \n\n### Definiciones\n\nLas siguientes definiciones aparecen recurrentemente en la descripción de los endpoints y parámetros utilizados en la aplicación:\n\n-----------------------\n\n#### Entidades primarias, secundarias y mixtas\n\n\n - **Entidad primaria**: es aquella que se expone directamente en el API\n\n     - ej, la entidad **Cliente**\n  \n\n  - **Entidad secundaria**: aquella que *no se expone directamente* sino que sólo puede accederse como propiedad de una entidad primaria.\n\n     - ej, la entidad **Dirección** sólo púede accederse cuando se alude a las direcciones de un **Cliente**\n \n  \n\n  - **Mixtas**: Existen entidades primarias que además pueden accederse como entidades secundarias, dado que su comportamiento cambia dependiendo de si están o no asociadas a otra entidad primaria en particular.\n\n     - ej: la entidad **Botón** puede accederse directamente (aludiendo a los botones sin dueño), pero también puede accederse en referencia a los botones de un **Cliente**. \n\n\n-----------------------\n\n#### {id} o :id\n\nAplica la llave primaria de la entidad principal. \n\n - Por ejemplo, en los endpoints de botones, la *instancia* del **Boton** con **id: 18FE34996BCD** se accede utilizando *{{api_test_url}}/api/Boton/18FE34996BCD*.\n\nEn adelante, se alude indistintamente a la llave primaria de una entidad como *id* o bien -para mayor claridad- añadiéndole el nombre de la entidad como sufijo. (ej *idBoton*).\n\n\n-----------------------\n\n\n#### {fk} o :fk\n\nAplica a la llave primaria de una entidad secundaria cuando se opera con ésta a través de una entidad primaria. Por ejemplo, la entidad **Dirección** *no se expone directamente como entidad primaria* sino sólo como una entidad secundaria de la entidad **Cliente**. \n \n - Ej: dada una entidad **Dirección** con **idDireccion: 25**,  perteneciante a una entidad **Cliente** con **id: 10**,  aquella direccción en particular se accede mediante *{{api_test_url}}/api/Cliente/10/direcciones/25*. \n\nEn adelante, se alude indistintamente a la llave primaria de una entidad secundaria como *fk* o bien -para mayor claridad- añadiéndole el nombre de la entidad como sufijo. (ej *idDireccion*).\n\n\n-----------------------\n\n\n#### rel o {rel}\n\nSe utiliza cuando un endpoint opera sobre una entidad implícita que hace de nexo entre dos entidades que tiene relación muchos a muchos (*ManyToMany*)\n\n - Ej: Un **Botón** puede tener muchas **Ventanas Horarias** y una Ventana Horaria estar asociada a muchos botones. \n\nPeticiones que modifican o eliminan este tipo de endpoints en realidad modifican la entidad puente que relaciona a la Ventana Horaria con los Botones. \n\nEste tipo de endpoints utiliza el **{{id}}** para identificar a la entidad del lado izquierdo y **{{fk}}** para la entidad del lado derecho. Ninguna de las dos sufre modificaciones directas en este tipo de endpoint.\n\n\n-----------------------\n\n\n#### Parámetros de endpoint (Path variables) y headers\n\nSe ha intentado describir explícitamente el significado de cada parámetro (e.g. **{{id}}**) y headers (e.g. **{{accessToken}}**) presente en los distintos endpoints.  El identificador de la entidad también se ha reemplazado por el **{{id}}** genérico para describir los payloads.\n\n-----------------------\n",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d5c5821c-9e9e-47d9-bfd3-c17ae9206724",
        "name": "Misc",
        "item": [
          {
            "id": "edf2d739-9985-48f2-a604-a8220130f178",
            "name": "sube una imagen a firebase",
            "request": {
              "name": "sube una imagen a firebase",
              "description": "sube una imagen a firebase",
              "url": {
                "path": ["api","Misc","image"],
                "host": ["{{apidomain}}"],
                "query": [],
                "variable": [],
                "raw": "{{apidomain}}/api/Misc/image"
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{}"
              }
            },
            "responses": [],
            "event": [],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "POST|api|Misc|image",
            "method_path_multi": "POST|api|Misc|image|1"
          },
          {
            "_": {
              "postman_id": "84988685-cb1e-4deb-ad05-b5ab2a358313"
            },
            "id": "84988685-cb1e-4deb-ad05-b5ab2a358313",
            "name": "5_8_Devuelve url de un banner para mostrar al cliente",
            "request": {
              "name": "Devuelve un banner para mostrar al cliente",
              "description": "Devuelve un banner para mostrar al cliente",
              "url": {
                "path": ["api","Misc","banner"],
                "host": ["{{apidomain}}"],
                "query": [],
                "variable": [],
                "raw": "{{apidomain}}/api/Misc/banner"
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "GET",
              "body": {}
            },
            "responses": [],
            "event": [],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "GET|api|Misc|banner",
            "method_path_multi": "GET|api|Misc|banner|1"
          },
          {
            "_": {
              "postman_id": "f0ecdad8-8d6e-4987-8d35-3626c8817762"
            },
            "id": "f0ecdad8-8d6e-4987-8d35-3626c8817762",
            "name": "5_9_Listado de banners por posición y tamaño",
            "request": {
              "name": "Listado de banners por tamaño y posición",
              "description": "Listado de banners por tamaño y posición",
              "url": {
                "path": ["api","Misc","banners"],
                "host": ["{{apidomain}}"],
                "query": [],
                "variable": [],
                "raw": "{{apidomain}}/api/Misc/banners"
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "GET",
              "body": {}
            },
            "responses": [],
            "event": [],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "GET|api|Misc|banners",
            "method_path_multi": "GET|api|Misc|banners|1"
          },
          {
            "_": {
              "postman_id": "7ea4f59f-b9be-43f2-bb34-c85377fecf41"
            },
            "id": "7ea4f59f-b9be-43f2-bb34-c85377fecf41",
            "name": "5_10_Devuelve el polígono de cobertura como pares de coordenadas",
            "request": {
              "name": "Devuelve el polígono de cobertura como pares de coordenadas",
              "description": "Devuelve el polígono de cobertura como pares de coordenadas",
              "url": {
                "path": ["api","Misc","cobertura"],
                "host": ["{{apidomain}}"],
                "query": [],
                "variable": [],
                "raw": "{{apidomain}}/api/Misc/cobertura"
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "GET",
              "body": {}
            },
            "responses": [],
            "event": [],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "GET|api|Misc|cobertura",
            "method_path_multi": "GET|api|Misc|cobertura|1"
          },
          {
            "_": {
              "postman_id": "afc6c90d-2657-4adc-874f-5d838079f17f"
            },
            "id": "afc6c90d-2657-4adc-874f-5d838079f17f",
            "name": "5_12_Devuelve el polígono de cobertura como GeoJSON",
            "request": {
              "name": "Devuelve el polígono de cobertura como GeoJSON",
              "description": "Devuelve el polígono de cobertura como GeoJSON",
              "url": {
                "path": ["api","Misc","coberturaGeoJson"],
                "host": ["{{apidomain}}"],
                "query": [],
                "variable": [],
                "raw": "{{apidomain}}/api/Misc/coberturaGeoJson"
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "GET",
              "body": {}
            },
            "responses": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "607e01ef-ffdd-46fe-9c14-5842d424ebce",
                  "type": "text/javascript",
                  "exec": [
                    "//postman.setNextRequest('Envía un mensaje cualquiera al API');",
                    ""
                  ]
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "GET|api|Misc|coberturaGeoJson",
            "method_path_multi": "GET|api|Misc|coberturaGeoJson|1"
          },
          {
            "_": {
              "postman_id": "67da3986-6b61-4519-bef2-a4c61b73583f"
            },
            "id": "67da3986-6b61-4519-bef2-a4c61b73583f",
            "name": "5_2_Devuelve términos de servicio como objeto JSON",
            "request": {
              "name": "Devuelve los términos de servicio en un objeto",
              "description": "Devuelve los términos de servicio en un objeto",
              "url": {
                "path": ["api","Misc","tos"],
                "host": ["{{apidomain}}"],
                "query": [],
                "variable": [],
                "raw": "{{apidomain}}/api/Misc/tos"
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "GET",
              "body": {}
            },
            "responses": [],
            "event": [],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "GET|api|Misc|tos",
            "method_path_multi": "GET|api|Misc|tos|1"
          },
          {
            "_": {
              "postman_id": "21705aaa-c955-450e-9cdd-f67ad0ce9037"
            },
            "id": "21705aaa-c955-450e-9cdd-f67ad0ce9037",
            "name": "5_5_Devuelve política de privacidad como HTML",
            "request": {
              "name": "Devuelve la política de privacidad en un objeto",
              "description": "Devuelve la política de privacidad en un objeto",
              "url": {
                "path": ["api","Misc","privacy"],
                "host": ["{{apidomain}}"],
                "query": [],
                "variable": [],
                "raw": "{{apidomain}}/api/Misc/privacy"
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "GET",
              "body": {}
            },
            "responses": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "01f665f0-c887-404e-84c7-55cd94c55ff3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.variables.set('expectError','any');"
                  ]
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "GET|api|Misc|privacy",
            "method_path_multi": "GET|api|Misc|privacy|1"
          },
          {
            "_": {
              "postman_id": "5a61d900-311d-4e97-873a-2a76d2ee6e45"
            },
            "id": "5a61d900-311d-4e97-873a-2a76d2ee6e45",
            "name": "5_11_Devuelve el polígono de cobertura como FeatureCollection",
            "request": {
              "name": "Devuelve la cobertura como FeatureCollection (soporta varios polígonos)",
              "description": "Devuelve el polígono de cobertura como GeoJSON",
              "url": {
                "path": ["api","Misc","coberturaFC"],
                "host": ["{{apidomain}}"],
                "query": [],
                "variable": [],
                "raw": "{{apidomain}}/api/Misc/coberturaFC"
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "GET",
              "body": {}
            },
            "responses": [],
            "event": [],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "GET|api|Misc|coberturaFC",
            "method_path_multi": "GET|api|Misc|coberturaFC|1"
          },
          {
            "_": {
              "postman_id": "97ba77e3-5334-4c53-8369-60f6cf566217"
            },
            "id": "97ba77e3-5334-4c53-8369-60f6cf566217",
            "name": "5_4_Devuelve política de privacidad como objeto JSON",
            "request": {
              "name": "Devuelve la política de privacidad como HTML",
              "description": "Devuelve la política de privacidad como HTML",
              "url": {
                "path": ["api","Misc","privacidad"],
                "host": ["{{apidomain}}"],
                "query": [],
                "variable": [],
                "raw": "{{apidomain}}/api/Misc/privacidad"
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": "{}"
              }
            },
            "responses": [],
            "event": [],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "GET|api|Misc|privacidad",
            "method_path_multi": "GET|api|Misc|privacidad|1"
          },
          {
            "_": {
              "postman_id": "ac2f0b82-f4cb-477d-bfbd-33d5b2cb4a63"
            },
            "id": "ac2f0b82-f4cb-477d-bfbd-33d5b2cb4a63",
            "name": "5_6_Devuelve preguntas frecuentes como objeto JSON",
            "request": {
              "name": "Devuelve las preguntas frecuentes en un objeto",
              "description": "Devuelve las preguntas frecuentes en un objeto",
              "url": {
                "path": ["api","Misc","faq"],
                "host": ["{{apidomain}}"],
                "query": [],
                "variable": [],
                "raw": "{{apidomain}}/api/Misc/faq"
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "GET",
              "body": {}
            },
            "responses": [],
            "event": [],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "GET|api|Misc|faq",
            "method_path_multi": "GET|api|Misc|faq|1"
          },
          {
            "_": {
              "postman_id": "80a2233d-5a86-44c5-b8ae-ce8c20fb9e3f"
            },
            "id": "80a2233d-5a86-44c5-b8ae-ce8c20fb9e3f",
            "name": "5_7_Devuelve preguntas frecuentes como HTML",
            "request": {
              "name": "Devuelve las preguntas frecuentes como HTML",
              "description": "Devuelve las preguntas frecuentes como HTML",
              "url": {
                "path": ["api","Misc","preguntas_frecuentes"],
                "host": ["{{apidomain}}"],
                "query": [],
                "variable": [],
                "raw": "{{apidomain}}/api/Misc/preguntas_frecuentes"
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": "{}"
              }
            },
            "responses": [],
            "event": [],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "GET|api|Misc|preguntas_frecuentes",
            "method_path_multi": "GET|api|Misc|preguntas_frecuentes|1"
          },
          {
            "_": {
              "postman_id": "715e473f-ab02-49e2-8c6a-9a02adc42e5a"
            },
            "id": "715e473f-ab02-49e2-8c6a-9a02adc42e5a",
            "name": "9_14_Envía un mensaje cualquiera al API",
            "request": {
              "name": "Verifica si una direccion tiene cobertura",
              "description": "Verifica si una direccion tiene cobertura",
              "url": {
                "path": ["api","Misc","echo"],
                "host": ["{{apidomain}}"],
                "query": [],
                "variable": [],
                "raw": "{{apidomain}}/api/Misc/echo"
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\"id\":5,\"direccion\":\"Agustín del Castillo 2245\",\"numero\":\"2245\",\"instrucciones\":\"No se puede entrar después de las 21 hrs\",\"conCobertura\":true,\"comuna\":\"VITACURA\",\"region\":\"Región Metropolitana de Santiago de Chile\",\"pais\":\"CL\",\"lng\":-70.5462291,\"lat\":-33.4249376,\"geom\":{\"lng\":-70.5462291,\"lat\":-33.4249376}}"
              }
            },
            "responses": [],
            "event": [],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "POST|api|Misc|echo",
            "method_path_multi": "POST|api|Misc|echo|1"
          },
          {
            "id": "b130b93a-797f-4100-9d9b-6d3f81982eab",
            "name": "cspReport",
            "request": {
              "name": "cspReport",
              "description": "cspReport",
              "url": {
                "path": ["api","Misc","cspReport"],
                "host": ["{{apidomain}}"],
                "query": [],
                "variable": [],
                "raw": "{{apidomain}}/api/Misc/cspReport"
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{}"
              }
            },
            "responses": [],
            "event": [],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "POST|api|Misc|cspReport",
            "method_path_multi": "POST|api|Misc|cspReport|1"
          },
          {
            "_": {
              "postman_id": "c44778c7-4cfd-4183-9955-7a6b5aa39149"
            },
            "id": "c44778c7-4cfd-4183-9955-7a6b5aa39149",
            "name": "5_0_Endpoint para probar alertas de errores",
            "request": {
              "name": "Test method to throw custom errors",
              "description": "Verifica si una direccion tiene cobertura",
              "url": {
                "path": ["api","Misc","throwError"],
                "host": ["{{apidomain}}"],
                "query": [],
                "variable": [],
                "raw": "{{apidomain}}/api/Misc/throwError"
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\"mensaje\":\"alerta\",\"problema\":\"sonamos\",\"donde\":\"Agustín del Castillo 2245\",\"statusCode\":\"{{expectHeader}}\"}"
              }
            },
            "responses": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "ea72e420-3a71-498c-a3b7-30f94838e947",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ]
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "604e86be-6225-4456-8c16-83219e2cae91",
                  "type": "text/javascript",
                  "exec": [
                    "let index=Math.floor(Math.random(5)),",
                    "header=[200,400,409,422,500][index];",
                    "pm.variables.set('expectHeaders',[header]);",
                    "pm.variables.set('expectHeader',header);",
                    "pm.variables.set('expectError','any');"
                  ]
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "POST|api|Misc|throwError",
            "method_path_multi": "POST|api|Misc|throwError|1"
          },
          {
            "_": {
              "postman_id": "a1e7ce6b-90fc-4fd9-bea8-d60d4fd88458"
            },
            "id": "a1e7ce6b-90fc-4fd9-bea8-d60d4fd88458",
            "name": "5_1_Verifica si una direccion tiene cobertura",
            "request": {
              "name": "Verifica si una direccion tiene cobertura",
              "description": "Verifica si una direccion tiene cobertura",
              "url": {
                "path": ["api","Misc","hasCobertura"],
                "host": ["{{apidomain}}"],
                "query": [],
                "variable": [],
                "raw": "{{apidomain}}/api/Misc/hasCobertura"
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\"lng\":-70.5688699,\"lat\":-33.4090248}"
              }
            },
            "responses": [],
            "event": [],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "POST|api|Misc|hasCobertura",
            "method_path_multi": "POST|api|Misc|hasCobertura|1"
          },
          {
            "_": {
              "postman_id": "73d8d91c-78eb-4b45-b3f7-48b58cc71bb4"
            },
            "id": "73d8d91c-78eb-4b45-b3f7-48b58cc71bb4",
            "name": "5_3_Devuelve términos de servicio como HTML",
            "request": {
              "name": "Devuelve los términos de servicio como HTML",
              "description": "Devuelve los términos de servicio como HTML",
              "url": {
                "path": ["api","Misc","terminos_de_servicio"],
                "host": ["{{apidomain}}"],
                "query": [],
                "variable": [],
                "raw": "{{apidomain}}/api/Misc/terminos_de_servicio"
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": "{}"
              }
            },
            "responses": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d14d0ecd-979c-4220-8589-3818c5a75b68",
                  "type": "text/javascript",
                  "exec": [
                    "pm.variables.set('expectError','any');"
                  ]
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "GET|api|Misc|terminos_de_servicio",
            "method_path_multi": "GET|api|Misc|terminos_de_servicio|1"
          }
        ],
        "event": [],
        "method_path": "Misc"
      },
      {
        "id": "5a59a418-ecdf-4680-98f9-087f10bb410b",
        "name": "Boton",
        "item": [
          {
            "_": {
              "postman_isSubFolder": true
            },
            "id": "f15c0936-87f9-4de6-ab0a-a11808fd7090",
            "name": "{id}",
            "item": [
              {
                "id": "3375fe62-a476-4777-afa2-a2da1c29c190",
                "name": "Muestra el Cliente asociado a un Botón.",
                "request": {
                  "name": "Muestra el Cliente asociado a un Botón.",
                  "description": "Muestra el Cliente asociado a un Botón.",
                  "url": {
                    "path": ["api","Boton",":id","cliente"],
                    "host": ["{{apidomain}}"],
                    "query": [],
                    "variable": [
                      {
                        "description": "id Único de Botón",
                        "type": "any",
                        "value": "{{idBoton}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Boton/:id/cliente"
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Boton|:id|cliente",
                "method_path_multi": "GET|api|Boton|:id|cliente|1"
              },
              {
                "id": "1ee30e56-fdf6-4273-97e2-e0f1c41002c1",
                "name": "Muestra la Dirección asociada a un Botón.",
                "request": {
                  "name": "Muestra la Dirección asociada a un Botón.",
                  "description": "Muestra la Dirección asociada a un Botón.",
                  "url": {
                    "path": ["api","Boton",":id","direccion"],
                    "host": ["{{apidomain}}"],
                    "query": [],
                    "variable": [
                      {
                        "description": "id Único de Botón",
                        "type": "any",
                        "value": "{{idBoton}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Boton/:id/direccion"
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Boton|:id|direccion",
                "method_path_multi": "GET|api|Boton|:id|direccion|1"
              },
              {
                "id": "70727604-f416-4f63-86b6-e9f9e737063a",
                "name": "Muestra el Medio de Pago asociado a un Botón.",
                "request": {
                  "name": "Muestra el Medio de Pago asociado a un Botón.",
                  "description": "Muestra el Medio de Pago asociado a un Botón.",
                  "url": {
                    "path": ["api","Boton",":id","mediopago"],
                    "host": ["{{apidomain}}"],
                    "query": [],
                    "variable": [
                      {
                        "description": "id Único de Botón",
                        "type": "any",
                        "value": "{{idBoton}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Boton/:id/mediopago"
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Boton|:id|mediopago",
                "method_path_multi": "GET|api|Boton|:id|mediopago|1"
              },
              {
                "_": {
                  "postman_isSubFolder": true
                },
                "id": "4dcb0e32-2764-47f9-b749-5fcb5c790aa4",
                "name": "productos",
                "item": [
                  {
                    "_": {
                      "postman_isSubFolder": true
                    },
                    "id": "3437da68-4035-4fdc-a98c-d50a319608c8",
                    "name": "rel",
                    "item": [
                      {
                        "_": {
                          "postman_isSubFolder": true
                        },
                        "id": "ee75eeef-89ff-4c11-9e38-389fc634d4dc",
                        "name": "{fk}",
                        "item": [
                          {
                            "_": {
                              "postman_id": "f3b05afc-adf7-4a8b-8d55-ada21030a140"
                            },
                            "id": "f3b05afc-adf7-4a8b-8d55-ada21030a140",
                            "name": "2_2_2_Añadir Productos a un Botón.",
                            "request": {
                              "name": "Añadir Productos de un Botón.",
                              "description": "Añadir Productos de un Botón.",
                              "url": {
                                "path": ["api","Boton",":id","productos","rel",":fk"],
                                "host": ["{{apidomain}}"],
                                "query": [],
                                "variable": [
                                  {
                                    "description": "id Único de Botón",
                                    "type": "any",
                                    "value": "{{idBoton}}",
                                    "key": "id"
                                  },
                                  {
                                    "description": "id Único de Producto",
                                    "type": "any",
                                    "value": "{{idProducto}}",
                                    "key": "fk"
                                  }
                                ],
                                "raw": "{{apidomain}}/api/Boton/:id/productos/rel/:fk"
                              },
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                },
                                {
                                  "description": " ",
                                  "key": "Authorization",
                                  "value": "{{accessToken}}"
                                },
                                {
                                  "description": "Access token Oauth 2.0",
                                  "key": "Authorization",
                                  "value": "{{accessToken}}"
                                }
                              ],
                              "method": "PUT",
                              "body": {
                                "mode": "raw",
                                "raw": "{\"cantidad\":\"{{cantidadProducto}}\"}"
                              }
                            },
                            "responses": [],
                            "event": [
                              {
                                "listen": "test",
                                "script": {
                                  "id": "c5092995-f63e-4172-9677-e7c9a7536a99",
                                  "type": "text/javascript",
                                  "exec": [
                                    "let idBoton = pm.environment.get('idBoton');",
                                    "",
                                    "",
                                    "var schema = {",
                                    "    \"type\": \"object\",",
                                    "    \"properties\": {",
                                    "        \"idProducto\": {",
                                    "            \"type\": \"integer\"",
                                    "        },",
                                    "        \"idBoton\": {",
                                    "            \"type\": \"string\"",
                                    "        }",
                                    "    }",
                                    "",
                                    "};",
                                    "",
                                    "",
                                    "pm.test('JSON response can be decoded and is an object', function() {",
                                    "    var jsonData = pm.response.json();",
                                    "",
                                    "    pm.test('schema is valid', () => {",
                                    "        let isValid = tv4.validate(jsonData, schema); if (!isValid) {  console.warn(tv4.error); }  pm.expect(isValid).to.be.true;",
                                    "    });",
                                    "    pm.expect(typeof jsonData === 'object').to.be.true;",
                                    "    pm.expect(typeof jsonData.idProducto === 'number').to.be.true;",
                                    "    pm.expect(typeof jsonData.idBoton === 'string').to.be.true;",
                                    "",
                                    "    pm.environment.set('idProducto', jsonData.idProducto)",
                                    "    pm.environment.set('idBoton', jsonData.idBoton);",
                                    "",
                                    "    let cantidadProductos = pm.environment.get('cantidadProductos') || 0;",
                                    "    console.log({",
                                    "        cantidadProductos",
                                    "    });",
                                    "    if (cantidadProductos < 2) {",
                                    "        postman.setNextRequest('Lista productos de un Botón');",
                                    "    }",
                                    "",
                                    "});"
                                  ]
                                }
                              },
                              {
                                "listen": "prerequest",
                                "script": {
                                  "id": "74360b87-8f96-4396-8368-ae87fca95381",
                                  "type": "text/javascript",
                                  "exec": [
                                    "if (pm.iterationData.has('productosAgregables')) {",
                                    "    let productosAgregables = pm.iterationData.get('productosAgregables'),",
                                    "        idProducto = productosAgregables[Math.floor(Math.random() * productosAgregables.length)];",
                                    "    pm.environment.set('idProducto', idProducto);",
                                    "",
                                    "}",
                                    "",
                                    "pm.variables.set('cantidadProducto', 1 + Math.floor(Math.random() * 3));"
                                  ]
                                }
                              }
                            ],
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "method_path": "PUT|api|Boton|:id|productos|rel|:fk",
                            "method_path_multi": "PUT|api|Boton|:id|productos|rel|:fk|1"
                          },
                          {
                            "_": {
                              "postman_id": "0a56cd0b-6f8c-48b9-95cd-69c466e60938"
                            },
                            "id": "0a56cd0b-6f8c-48b9-95cd-69c466e60938",
                            "name": "2_2_3_Elimina Productos de un Botón.",
                            "request": {
                              "name": "Elimina Productos de un Botón.",
                              "description": "Elimina Productos de un Botón.",
                              "url": {
                                "path": ["api","Boton",":id","productos","rel",":fk"],
                                "host": ["{{apidomain}}"],
                                "query": [],
                                "variable": [
                                  {
                                    "description": "id Único de Botón",
                                    "type": "any",
                                    "value": "{{idBoton}}",
                                    "key": "id"
                                  },
                                  {
                                    "description": "id Único de Producto",
                                    "type": "any",
                                    "value": "{{idProducto}}",
                                    "key": "fk"
                                  }
                                ],
                                "raw": "{{apidomain}}/api/Boton/:id/productos/rel/:fk"
                              },
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                },
                                {
                                  "description": " ",
                                  "key": "Authorization",
                                  "value": "{{accessToken}}"
                                },
                                {
                                  "description": "Access token Oauth 2.0",
                                  "key": "Authorization",
                                  "value": "{{accessToken}}"
                                }
                              ],
                              "method": "DELETE",
                              "body": {}
                            },
                            "responses": [],
                            "event": [
                              {
                                "listen": "test",
                                "script": {
                                  "id": "d470e538-d152-48bb-813d-0302dfeb3dc3",
                                  "type": "text/javascript",
                                  "exec": [
                                    "pm.test(\"Status code is 204\", function () {",
                                    "    pm.response.to.have.status(204);",
                                    "});"
                                  ]
                                }
                              }
                            ],
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "method_path": "DELETE|api|Boton|:id|productos|rel|:fk",
                            "method_path_multi": "DELETE|api|Boton|:id|productos|rel|:fk|2"
                          }
                        ],
                        "event": [],
                        "method_path": "Boton|:id|productos|rel|:fk"
                      }
                    ],
                    "event": [],
                    "method_path": "Boton|:id|productos|rel"
                  },
                  {
                    "_": {
                      "postman_id": "503c4441-4ebb-4c01-8e30-09d71e21983c"
                    },
                    "id": "503c4441-4ebb-4c01-8e30-09d71e21983c",
                    "name": "2_2_0_Lista Productos de un Botón",
                    "request": {
                      "name": "Lista Productos de un Botón.",
                      "description": "Lista Productos de un Botón.",
                      "url": {
                        "path": ["api","Boton",":id","productos"],
                        "host": ["{{apidomain}}"],
                        "query": [
                          {
                            "description": "Opcional, filtro en forma de String JSON encoded",
                            "key": "filter",
                            "value": "{{filter}}"
                          }
                        ],
                        "variable": [
                          {
                            "description": "id Único de Botón",
                            "type": "any",
                            "value": "{{idBoton}}",
                            "key": "id"
                          }
                        ],
                        "raw": "{{apidomain}}/api/Boton/:id/productos"
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Authorization",
                          "value": "{{accessToken}}"
                        },
                        {
                          "description": "Access token Oauth 2.0",
                          "key": "Authorization",
                          "value": "{{accessToken}}"
                        }
                      ],
                      "method": "GET",
                      "body": {}
                    },
                    "responses": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8099e14a-6cc2-4641-8a4b-abbb3213954a",
                          "type": "text/javascript",
                          "exec": [
                            "if (pm.cookies.has('access_token')) {",
                            "    let idBoton = pm.environment.get('idBoton');",
                            "",
                            "    var schema = {",
                            "        \"type\": \"array\",",
                            "        \"items\": {",
                            "            \"$ref\": \"MyDot#/definitions/Producto\"",
                            "        }",
                            "",
                            "    };",
                            "",
                            "",
                            "    pm.test('Response is JSON and is Array', function() {",
                            "        var jsonData = pm.response.json();",
                            "        pm.expect(jsonData instanceof Array).to.be.true;",
                            "        let productos = jsonData.map(producto => {",
                            "            let {",
                            "                idProducto: id,",
                            "                ...productoProps",
                            "            } = producto;",
                            "            producto={id};",
                            "            return Object.assign(producto,productoProps);",
                            "            ",
                            "        }",
                            "        );",
                            "        pm.test('Schema is valid', function() {",
                            "            let isValid = productos.length===0 || tv4.validate(productos, schema);",
                            "            if (!isValid) {",
                            "                console.warn(tv4.error);",
                            "            }",
                            "            pm.expect(isValid).to.be.true;",
                            "",
                            "            pm.environment.set('idProducto', jsonData[0].id);",
                            "        });",
                            "",
                            "        let productosDelBoton = [];",
                            "        jsonData.forEach((producto, index) => {",
                            "            index = index || '';",
                            "            productosDelBoton.push(producto.idProducto);",
                            "            if (!index) {",
                            "                pm.environment.set('mainProduct'+ idBoton, producto.idProducto);",
                            "            }",
                            "            pm.environment.set('idProducto'+ index, producto.idProducto);",
                            "        });",
                            "",
                            "        pm.environment.set('productosBoton'+ idBoton, productosDelBoton);",
                            "        pm.environment.set('cantidadProductos', productosDelBoton.length);",
                            "",
                            "    });",
                            "} else {",
                            "    postman.setNextRequest('Botones: Login Antes de Tests');",
                            "}"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a9d422-1fb9-49b7-b47d-6c34bd16cfa1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "if (!pm.cookies.has('access_token')) {",
                            "    pm.variables.set('expectError', 'any');",
                            "    pm.variables.set('expectHeaders', [200, 400, 401, 403]);",
                            "}"
                          ]
                        }
                      }
                    ],
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "method_path": "GET|api|Boton|:id|productos",
                    "method_path_multi": "GET|api|Boton|:id|productos|1"
                  }
                ],
                "event": [],
                "method_path": "Boton|:id|productos"
              },
              {
                "id": "b33b327c-7d3a-4f58-b05d-4275033be622",
                "name": "Muestra la Marca de un Botón.",
                "request": {
                  "name": "Muestra la Marca de un Botón.",
                  "description": "Muestra la Marca de un Botón.",
                  "url": {
                    "path": ["api","Boton",":id","marca"],
                    "host": ["{{apidomain}}"],
                    "query": [],
                    "variable": [
                      {
                        "description": "id Único de Botón",
                        "type": "any",
                        "value": "{{idBoton}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Boton/:id/marca"
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Boton|:id|marca",
                "method_path_multi": "GET|api|Boton|:id|marca|1"
              },
              {
                "id": "e58888bd-a991-46bb-88fc-27de76828985",
                "name": "Muestra ventana_default un Botón.",
                "request": {
                  "name": "Muestra ventana_default un Botón.",
                  "description": "Muestra ventana_default un Botón.",
                  "url": {
                    "path": ["api","Boton",":id","ventana_default"],
                    "host": ["{{apidomain}}"],
                    "query": [],
                    "variable": [
                      {
                        "description": "id Único de Botón",
                        "type": "any",
                        "value": "{{idBoton}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Boton/:id/ventana_default"
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Boton|:id|ventana_default",
                "method_path_multi": "GET|api|Boton|:id|ventana_default|1"
              },
              {
                "_": {
                  "postman_isSubFolder": true
                },
                "id": "0c9e5911-83ea-4e1f-ba90-1ef383182d68",
                "name": "ventanas_horario",
                "item": [
                  {
                    "_": {
                      "postman_isSubFolder": true
                    },
                    "id": "399b110f-e3c0-4e31-bcf7-33c4e5af7fff",
                    "name": "rel",
                    "item": [
                      {
                        "_": {
                          "postman_isSubFolder": true
                        },
                        "id": "eacc9fb5-fd3d-4cfe-88cc-31102580025a",
                        "name": "{fk}",
                        "item": [
                          {
                            "_": {
                              "postman_id": "005ef1e5-173c-4b0c-a1d8-0aa2ef65a80d"
                            },
                            "id": "005ef1e5-173c-4b0c-a1d8-0aa2ef65a80d",
                            "name": "2_3_2_Añadir Ventanas Horarias de un Botón.",
                            "request": {
                              "name": "Añadir Ventanas Horarias de un Botón.",
                              "description": "**Deprecation Notice** Actualmente existe sólo una ventana horaria. Este endpoint podría ser removido",
                              "url": {
                                "path": ["api","Boton",":id","ventanas_horario","rel",":fk"],
                                "host": ["{{apidomain}}"],
                                "query": [],
                                "variable": [
                                  {
                                    "description": "id Único de Botón",
                                    "type": "any",
                                    "value": "{{idBoton}}",
                                    "key": "id"
                                  },
                                  {
                                    "description": "id Único de Ventana Horaria",
                                    "type": "any",
                                    "value": "{{idVentana}}",
                                    "key": "fk"
                                  }
                                ],
                                "raw": "{{apidomain}}/api/Boton/:id/ventanas_horario/rel/:fk"
                              },
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                },
                                {
                                  "description": " ",
                                  "key": "Authorization",
                                  "value": "{{accessToken}}"
                                },
                                {
                                  "description": "Access token Oauth 2.0",
                                  "key": "Authorization",
                                  "value": "{{accessToken}}"
                                }
                              ],
                              "method": "PUT",
                              "body": {
                                "mode": "raw",
                                "raw": "{}"
                              }
                            },
                            "responses": [],
                            "event": [
                              {
                                "listen": "test",
                                "script": {
                                  "id": "6a7c2ead-992d-4dfa-8ee7-1710fddc7edc",
                                  "type": "text/javascript",
                                  "exec": [
                                    "let testsCarpeta=pm.variables.get('testsCarpeta');",
                                    "",
                                    "",
                                    "console.log('============== FIN CARPETA Boton con '+testsCarpeta+' tests ===================');"
                                  ]
                                }
                              }
                            ],
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "method_path": "PUT|api|Boton|:id|ventanas_horario|rel|:fk",
                            "method_path_multi": "PUT|api|Boton|:id|ventanas_horario|rel|:fk|1"
                          },
                          {
                            "_": {
                              "postman_id": "a13b372d-0578-433f-9526-1e8b488b9427"
                            },
                            "id": "a13b372d-0578-433f-9526-1e8b488b9427",
                            "name": "2_3_1_Elimina Ventanas Horarias de un Botón.",
                            "request": {
                              "name": "Elimina Ventanas Horarias de un Botón.",
                              "description": "**Deprecation Notice** Actualmente existe sólo una ventana horaria. Este endpoint podría ser removido",
                              "url": {
                                "path": ["api","Boton",":id","ventanas_horario","rel",":fk"],
                                "host": ["{{apidomain}}"],
                                "query": [],
                                "variable": [
                                  {
                                    "description": "id Único de Botón",
                                    "type": "any",
                                    "value": "{{idBoton}}",
                                    "key": "id"
                                  },
                                  {
                                    "description": "id Único de Ventana Horaria",
                                    "type": "any",
                                    "value": "{{idVentana}}",
                                    "key": "fk"
                                  }
                                ],
                                "raw": "{{apidomain}}/api/Boton/:id/ventanas_horario/rel/:fk"
                              },
                              "header": [
                                {
                                  "key": "Content-Type",
                                  "value": "application/json"
                                },
                                {
                                  "description": " ",
                                  "key": "Authorization",
                                  "value": "{{accessToken}}"
                                },
                                {
                                  "description": "Access token Oauth 2.0",
                                  "key": "Authorization",
                                  "value": "{{accessToken}}"
                                }
                              ],
                              "method": "DELETE",
                              "body": {}
                            },
                            "responses": [],
                            "event": [],
                            "protocolProfileBehavior": {
                              "disableBodyPruning": true
                            },
                            "method_path": "DELETE|api|Boton|:id|ventanas_horario|rel|:fk",
                            "method_path_multi": "DELETE|api|Boton|:id|ventanas_horario|rel|:fk|2"
                          }
                        ],
                        "event": [],
                        "method_path": "Boton|:id|ventanas_horario|rel|:fk"
                      }
                    ],
                    "event": [],
                    "method_path": "Boton|:id|ventanas_horario|rel"
                  },
                  {
                    "_": {
                      "postman_id": "1f8987e8-9d75-4669-a3ff-e6b6059511a8"
                    },
                    "id": "1f8987e8-9d75-4669-a3ff-e6b6059511a8",
                    "name": "2_3_0_Lista Ventanas Horarias de un Botón.",
                    "request": {
                      "name": "Lista Ventanas Horarias de un Botón.",
                      "description": "Lista Ventanas Horarias de un Botón.",
                      "url": {
                        "path": ["api","Boton",":id","ventanas_horario"],
                        "host": ["{{apidomain}}"],
                        "query": [
                          {
                            "description": "Opcional, filtro en forma de String JSON encoded",
                            "key": "filter",
                            "value": "{{filter}}"
                          }
                        ],
                        "variable": [
                          {
                            "description": "id Único de Botón",
                            "type": "any",
                            "value": "{{idBoton}}",
                            "key": "id"
                          }
                        ],
                        "raw": "{{apidomain}}/api/Boton/:id/ventanas_horario"
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "description": " ",
                          "key": "Authorization",
                          "value": "{{accessToken}}"
                        },
                        {
                          "description": "Access token Oauth 2.0",
                          "key": "Authorization",
                          "value": "{{accessToken}}"
                        }
                      ],
                      "method": "GET",
                      "body": {}
                    },
                    "responses": [],
                    "event": [],
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "method_path": "GET|api|Boton|:id|ventanas_horario",
                    "method_path_multi": "GET|api|Boton|:id|ventanas_horario|1"
                  }
                ],
                "event": [],
                "method_path": "Boton|:id|ventanas_horario"
              },
              {
                "_": {
                  "postman_isSubFolder": true
                },
                "id": "90b753cb-f186-40e1-a23b-6d8b1c6d3bfe",
                "name": "pedidos",
                "item": [
                  {
                    "_": {
                      "postman_id": "2947f0ec-aba7-4e64-9230-43ecf0562e27"
                    },
                    "id": "2947f0ec-aba7-4e64-9230-43ecf0562e27",
                    "name": "4_2_1_Lista pedidos de un Botón.",
                    "request": {
                      "name": "Lista pedidos de un Botón.",
                      "description": "Lista pedidos de un Botón.",
                      "url": {
                        "path": ["api","Boton",":id","pedidos"],
                        "host": ["{{apidomain}}"],
                        "query": [
                          {
                            "description": "Opcional, filtro en forma de String JSON encoded",
                            "key": "filter",
                            "value": "{{filter}}"
                          }
                        ],
                        "variable": [
                          {
                            "description": "id Único de Botón",
                            "type": "any",
                            "value": "{{idBoton}}",
                            "key": "id"
                          }
                        ],
                        "raw": "{{apidomain}}/api/Boton/:id/pedidos"
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "description": " ",
                          "key": "Authorization",
                          "value": "{{accessToken}}"
                        },
                        {
                          "description": "Access token Oauth 2.0",
                          "key": "Authorization",
                          "value": "{{accessToken}}"
                        }
                      ],
                      "method": "GET",
                      "body": {}
                    },
                    "responses": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4f1403-ecb9-4af3-972c-c0724292036a",
                          "type": "text/javascript",
                          "exec": [
                            "var schema = {",
                            "    \"type\": \"array\",",
                            "    \"items\": {",
                            "        \"$ref\": \"MyDot#/definitions/Pedido\"",
                            "    }",
                            "",
                            "};",
                            "",
                            "",
                            "",
                            "pm.test('JSON response can be decoded and is an array', function() {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData instanceof Array).to.be.true;",
                            "",
                            "",
                            "    pm.test('Schema is valid', function() {",
                            "        let pedidosVigentes = jsonData.filter(pedido => {",
                            "            return ",
                            "            pedido.idMediopago!==null &&",
                            "            pedido.idDireccion!==null &&",
                            "            pedido.estado && pedido.estado.soloEstadoFinal === 0;",
                            "        }).map(pedido => {",
                            "            let {",
                            "                estado, ...cleanPedido",
                            "            } = pedido;",
                            "            return cleanPedido;",
                            "        });",
                            "        let isValid = tv4.validate(pedidosVigentes, schema);",
                            "        console.log(tv4.error);",
                            "        pm.expect(isValid).to.be.true;",
                            "        if (pedidosVigentes.length) {",
                            "            let pedido = pedidosVigentes[0];",
                            "",
                            "            pm.expect(typeof pedido.id).to.eq('number');",
                            "            pm.environment.set('idPedido', pedido.id);",
                            "        }",
                            "    });",
                            "",
                            "});",
                            "pm.variables.set('filter','');"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6ccff3-e0d3-4f93-b0a6-1cf23f576696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set('filter','{\"where\":{\"idEstado\":{\"neq\":null}}, \"limit\":20, \"include\":[\"estado\"]}');"
                          ]
                        }
                      }
                    ],
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "method_path": "GET|api|Boton|:id|pedidos",
                    "method_path_multi": "GET|api|Boton|:id|pedidos|1"
                  },
                  {
                    "_": {
                      "postman_id": "73a73f33-fce2-4d5d-866b-9f0f3678a630"
                    },
                    "id": "73a73f33-fce2-4d5d-866b-9f0f3678a630",
                    "name": "4_2_2_Agrega una entidad pedidos a un Botón.",
                    "request": {
                      "name": "Agrega una entidad pedidos a un Botón.",
                      "description": "Agrega una entidad pedidos a un Botón.",
                      "url": {
                        "path": ["api","Boton",":id","pedidos"],
                        "host": ["{{apidomain}}"],
                        "query": [],
                        "variable": [
                          {
                            "description": "id Único de Botón",
                            "type": "any",
                            "value": "{{idBoton}}",
                            "key": "id"
                          }
                        ],
                        "raw": "{{apidomain}}/api/Boton/:id/pedidos"
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "description": " ",
                          "key": "Authorization",
                          "value": "{{accessToken}}"
                        },
                        {
                          "description": "Access token Oauth 2.0",
                          "key": "Authorization",
                          "value": "{{accessToken}}"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}"
                      }
                    },
                    "responses": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1133b47e-55c1-4cb5-8a5c-4ab80e505c13",
                          "type": "text/javascript",
                          "exec": [
                            "var descuento = pm.variables.get('descuento'),",
                            "    schema = {",
                            "        \"$ref\": \"MyDot#/definitions/Pedido\"",
                            "",
                            "    },",
                            "    idBoton=pm.environment.get('idBoton'),",
                            "    requestVars=pm.request.body.raw,",
                            "    requestBody=requestVars && JSON.parse(requestVars);",
                            "    ",
                            "    console.log(requestBody);",
                            "",
                            "",
                            "",
                            "",
                            "pm.test('JSON response can be decoded and is an object', function() {",
                            "    var jsonData = pm.response.json();",
                            "",
                            "    pm.expect(jsonData).to.be.a('object');",
                            "",
                            "    let {",
                            "        boton, cliente, estado, direccion, mediopago, transaccion, productos,estos_valores,precio, costo, ...pedido",
                            "    } = jsonData;",
                            "",
                            "    pm.test('Schema is valid', function() {",
                            "        let validates = tv4.validate(pedido, schema);",
                            "        console.log(tv4.error);",
                            "        pm.expect(validates).to.be.true;",
                            "    });",
                            "    ",
                            "    pm.test('descuento cannot be altered', () => {",
                            "        pm.expect(pedido.descuento).not.to.eq(requestBody.descuento);",
                            "    });",
                            "    pm.test('descuento_primer_pedido cannot be altered', () => {",
                            "        pm.expect(pedido.descuento_primer_pedido).not.to.eq(requestBody.descuento_primer_pedido);",
                            "    });",
                            "    pm.test('precioNeto cannot be altered', () => {",
                            "        pm.expect(pedido.precioNeto).not.to.eq(requestBody.precioNeto);",
                            "    });",
                            "    pm.test('boton matches request', () => {",
                            "        pm.expect(pedido.idBoton).to.eq(idBoton);",
                            "    });",
                            "    pm.test('pedido.id is a number', () => {",
                            "        pm.expect(pedido.id).to.be.a('number');",
                            "        pm.environment.set('idPedido',pedido.id);",
                            "    });",
                            "    ",
                            "    pm.test('pedido.transaccion is a number', function() {",
                            "",
                            "",
                            "        let {",
                            "            id: transactionId,",
                            "            idProducto,",
                            "            idMediopago,",
                            "            idDireccion,",
                            "            estado,",
                            "            direccion,",
                            "            mediopago,",
                            "            transaccion,",
                            "            productos",
                            "        } = jsonData;",
                            "        pm.expect(transactionId).to.be.a('number');",
                            "",
                            "",
                            "        pm.environment.set('idTransaccion', transactionId);",
                            "    });",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43a9634-eeee-4589-a276-6ef3f329d1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set('expectError','any')",
                            "pm.variables.set('expectHeaders',[200,204,301,302,400,401,409,422]);",
                            "pm.variables.set('descuento',parseInt(1000+10000*Math.random(),10));",
                            "let precio=parseInt(5000+10000*Math.random(),10)",
                            "pm.variables.set('precio',precio);",
                            "pm.variables.set('precioTotal',3*precio);"
                          ]
                        }
                      }
                    ],
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "method_path": "POST|api|Boton|:id|pedidos",
                    "method_path_multi": "POST|api|Boton|:id|pedidos|2"
                  }
                ],
                "event": [],
                "method_path": "Boton|:id|pedidos"
              },
              {
                "_": {
                  "postman_id": "7e114763-c8d2-4cd9-aaac-cb46a6713a84"
                },
                "id": "7e114763-c8d2-4cd9-aaac-cb46a6713a84",
                "name": "2_2_1_Devuelve los productos que se pueden asociar a un botón",
                "request": {
                  "name": "Devuelve los productos que se pueden asociar a un botón dado\n(deprecated: un llamado a GET /api/Boton/:id/producto_marca entrega lo mismo\nevitando la utilización de un método custom",
                  "description": "**Deprecation Notice**  Un llamado a `GET /api/Boton/{idBoton}/producto_marca` cumple la misma función.\n\nEste método custom se considera redundante y será removido en futuras versiones.",
                  "url": {
                    "path": ["api","Boton",":id","relatedProducts"],
                    "host": ["{{apidomain}}"],
                    "query": [],
                    "variable": [
                      {
                        "description": "id Único de Botón",
                        "type": "any",
                        "value": "{{idBoton}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Boton/:id/relatedProducts"
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": " ",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2846657b-f946-48ef-ab22-668893c3a783",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test('Status code is 200', function() {",
                        "    pm.response.to.have.status(200);",
                        "});",
                        "pm.test('Content-Type is application/json', function() {",
                        "",
                        "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
                        "});",
                        "let idBoton = pm.environment.get('idBoton'),",
                        "    mainProduct = pm.environment.get('mainProduct' + idBoton),",
                        "    productosDelBoton = pm.environment.get('productosBoton' + idBoton) || [];",
                        "",
                        "var schema = {",
                        "    \"type\": \"array\",",
                        "    \"items\": {",
                        "        \"$ref\": \"MyDot#/definitions/Producto\"",
                        "    }",
                        "",
                        "};",
                        "",
                        "",
                        "pm.test('JSON response can be decoded', function() {",
                        "",
                        "    var jsonData = pm.response.json();",
                        "",
                        "",
                        "    pm.test('Schema is valid', function() {",
                        "        let validates = tv4.validate(jsonData, schema);",
                        "        console.log(tv4.error);",
                        "        pm.expect(validates).to.be.true;",
                        "",
                        "    });",
                        "    pm.test('Schema is an array', function() {",
                        "        var isArray = jsonData instanceof Array;",
                        "        pm.expect(isArray).to.be.true;",
                        "",
                        "",
                        "        pm.environment.set('productosAgregables', jsonData.map(prod => prod.id));",
                        "        if (productosDelBoton.length && productosDelBoton.length > 2) {",
                        "            pm.iterationData.set('productosAgregables', productosDelBoton);",
                        "            pm.environment.set('idProducto', (productosDelBoton.pop()));",
                        "        } else {",
                        "            let productosDistintosAlActual = jsonData.filter(producto => {",
                        "                return !(productosDelBoton || []).includes(producto.id);",
                        "            }).map(producto => producto.id);",
                        "            pm.iterationData.set('productosAgregables', productosDistintosAlActual);",
                        "",
                        "            productosDistintosAlActual = productosDelBoton.concat(productosDistintosAlActual);",
                        "",
                        "",
                        "            pm.environment.set('idProducto', (productosDistintosAlActual.pop()));",
                        "        }",
                        "",
                        "    });",
                        "});",
                        "//postman.setNextRequest('Añadir Productos a un Botón.');"
                      ]
                    }
                  }
                ],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Boton|:id|relatedProducts",
                "method_path_multi": "GET|api|Boton|:id|relatedProducts|1"
              },
              {
                "_": {
                  "postman_id": "b8c3639c-858d-48e9-9757-84c4e2d70839"
                },
                "id": "b8c3639c-858d-48e9-9757-84c4e2d70839",
                "name": "2_1_4_Resumen completo del botón",
                "request": {
                  "name": "Lista un resumen de la configuración del botón",
                  "description": "Lista un resumen de la configuración del botón",
                  "url": {
                    "path": ["api","Boton",":id","resumen"],
                    "host": ["{{apidomain}}"],
                    "query": [],
                    "variable": [
                      {
                        "description": "id Único de Botón",
                        "type": "any",
                        "value": "{{idBoton}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Boton/:id/resumen"
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa7232c8-05ea-400e-ad23-021710438def",
                      "type": "text/javascript",
                      "exec": [
                        "",
                        "",
                        "pm.test(\"Status code is 200\", function () {",
                        "    pm.response.to.have.status(200);",
                        "    ",
                        "    ",
                        "    pm.test(\"Content-Type is application/json\", function () {",
                        "        ",
                        "       pm.expect(pm.response.headers.get(\"Content-Type\")).to.include('application/json');",
                        "       ",
                        "       ",
                        "        pm.test(\"JSON response can be decoded\", function () {",
                        "            var jsonData = pm.response.json(),",
                        "            isString=typeof jsonData.id === 'string';",
                        "            ",
                        "            pm.expect(isString).to.be.true;",
                        "            pm.environment.set(\"idBoton\",jsonData.id);",
                        "        });",
                        "    ",
                        "    ",
                        "    });",
                        "",
                        "});"
                      ]
                    }
                  }
                ],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Boton|:id|resumen",
                "method_path_multi": "GET|api|Boton|:id|resumen|1"
              },
              {
                "_": {
                  "postman_id": "2433a8b1-9000-4ceb-9775-cd1b5133a98f"
                },
                "id": "2433a8b1-9000-4ceb-9775-cd1b5133a98f",
                "name": "2_2_4_Productos que se pueden asociar a un botón",
                "request": {
                  "name": "Devuelve los productos que se pueden asociar a un botón dado",
                  "description": "Comparando por el campo `idMarca` se obtiene los productos que pueden asociarse a este botpón",
                  "url": {
                    "path": ["api","Boton",":id","producto_marca"],
                    "host": ["{{apidomain}}"],
                    "query": [],
                    "variable": [
                      {
                        "description": "id Único de Botón",
                        "type": "any",
                        "value": "{{idBoton}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Boton/:id/producto_marca"
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": " ",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1e62f6e-afb3-414a-8b94-7a5c27205663",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test('Status code is 200', function() {",
                        "    pm.response.to.have.status(200);",
                        "});",
                        "pm.test('Content-Type is application/json', function() {",
                        "",
                        "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
                        "});",
                        "var schema = {",
                        "    \"type\": \"array\",",
                        "    \"items\": {",
                        "        \"$ref\": \"MyDot#/definitions/Producto\"",
                        "    }",
                        "",
                        "};",
                        "",
                        "",
                        "pm.test('Schema is valid', function() {",
                        "    let validates = tv4.validate(pm.response.json(), schema);",
                        "    console.log(tv4.error);",
                        "    pm.expect(validates).to.be.true;",
                        "",
                        "});",
                        "",
                        "pm.test('JSON response can be decoded', function() {",
                        "",
                        "    var jsonData = pm.response.json(),",
                        "        isArray = jsonData instanceof Array;",
                        "",
                        "",
                        "    pm.expect(isArray).to.be.true;",
                        "",
                        "    pm.environment.set('idProducto', jsonData[0].id);",
                        "    if (jsonData[1]) {",
                        "        pm.environment.set('idProducto2', jsonData[1].id);",
                        "    }",
                        "});"
                      ]
                    }
                  }
                ],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Boton|:id|producto_marca",
                "method_path_multi": "GET|api|Boton|:id|producto_marca|1"
              },
              {
                "_": {
                  "postman_id": "6d96efea-46b5-40a2-a7a5-8978fc144e05"
                },
                "id": "6d96efea-46b5-40a2-a7a5-8978fc144e05",
                "name": "2_0_7_Busca un boton ajeno",
                "request": {
                  "name": "Encuentra un Botón por {{id}} en la BBDD.",
                  "description": "Encuentra un Botón por {{id}} en la BBDD.",
                  "url": {
                    "path": ["api","Boton",":id"],
                    "host": ["{{apidomain}}"],
                    "query": [
                      {
                        "description": "Opcional, filtro en forma de String JSON encoded",
                        "key": "filter",
                        "value": "{{filter}}"
                      }
                    ],
                    "variable": [
                      {
                        "description": "id Único de Botón",
                        "type": "any",
                        "value": "{{idBoton}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Boton/:id"
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": " ",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59ec70f7-96ab-4043-9774-e3adb72af2a5",
                      "type": "text/javascript",
                      "exec": [
                        "",
                        "pm.test(\"Status code is 404\", function () {",
                        "    pm.response.to.have.status(404);",
                        "});",
                        "",
                        "pm.test('JSON response can be decoded', function() {",
                        "    var jsonData = pm.response.json();",
                        "    pm.expect(jsonData.code).to.be.a('string');",
                        " ",
                        " });"
                      ]
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3042c2ca-3a91-42b3-bedb-7e84ff0504c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set('filter','');",
                        "    pm.variables.set('expectError', 'any');",
                        "",
                        "    pm.variables.set('expectHeaders', [404]);"
                      ]
                    }
                  }
                ],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Boton|:id",
                "method_path_multi": "GET|api|Boton|:id|1"
              },
              {
                "id": "cf339ccf-ab57-4b3f-a6c5-9c26bb9aedcc",
                "name": "Modifica o crea un Botón y persiste en BBDD.",
                "request": {
                  "name": "Modifica o crea un Botón y persiste en BBDD.",
                  "description": "Modifica o crea un Botón y persiste en BBDD.",
                  "url": {
                    "path": ["api","Boton",":id"],
                    "host": ["{{apidomain}}"],
                    "query": [],
                    "variable": [
                      {
                        "description": "id Único de Botón",
                        "type": "any",
                        "value": "{{idBoton}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Boton/:id"
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "PATCH",
                  "body": {
                    "mode": "raw",
                    "raw": "{}"
                  }
                },
                "responses": [],
                "event": [],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "PATCH|api|Boton|:id",
                "method_path_multi": "PATCH|api|Boton|:id|2"
              }
            ],
            "event": [],
            "method_path": "Boton|:id"
          },
          {
            "_": {
              "postman_id": "1aeff9e1-9d54-4e6b-b9a8-99c8d821daf9"
            },
            "id": "1aeff9e1-9d54-4e6b-b9a8-99c8d821daf9",
            "name": "2_0_6_Intenta inscribir un botón ajeno",
            "request": {
              "name": "Inscribe un botón a nombre del usuario\n(Deprecated) Utilizar ```PATCH /api/Boton/{idBoton}```",
              "description": "**Deprecation Notice** La inscripción de un botón puede hacerse mediante `PATCH /api/Boton/{idBoton}` que implícitamente le fija el id del Cliente\n\nEste método custom se considera redundante y puede ser removido en futuras versiones",
              "url": {
                "path": ["api","Boton","claim"],
                "host": ["{{apidomain}}"],
                "query": [],
                "variable": [],
                "raw": "{{apidomain}}/api/Boton/claim"
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\"id\":\"{{boton_Wrongid}}\",\"idMediopago\":\"{{idMediopago}}\",\"idDireccion\":\"{{direccionObj.id}}\"}"
              }
            },
            "responses": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "4344ac25-5467-40b3-b6c7-c045960f9cb4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Status code reflects an error', function() {",
                    "",
                    "    pm.expect(pm.response).not.to.have.status(200);",
                    "",
                    "",
                    "    pm.test('Content-Type is application/json', function() {",
                    "",
                    "        pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
                    "",
                    "",
                    "",
                    "    });",
                    "",
                    "});"
                  ]
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "88653fc0-ac8f-49ae-bba5-ce6360048c11",
                  "type": "text/javascript",
                  "exec": [
                    "let direccionObj = pm.environment.get('direccionObj') || {},",
                    "    direcciones = direccionObj.direcciones || [];",
                    "if (direcciones.length) {",
                    "    let idDireccion = direcciones.getRandom();",
                    "",
                    "    pm.environment.set('direccionObj.id', idDireccion);",
                    "    pm.variables.set('direccionObj.id', idDireccion);",
                    "}",
                    "pm.variables.set('idMediopago', pm.environment.get('idMediopago'));",
                    "",
                    "let mediosPagoActivos = pm.environment.get('mediosPagoActivos') || [];",
                    "",
                    "if (mediosPagoActivos.length) {",
                    "    let idMediopago = mediosPagoActivos.getRandom();",
                    "    pm.variables.set('idMediopago', idMediopago);",
                    "}",
                    "",
                    "pm.environment.set('boton_Wrongid', '70F11C82E13C');",
                    "pm.variables.set('expectError', 'any');",
                    "pm.variables.set('expectHeaders', [200, 400, 401, 403, 404]);"
                  ]
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "POST|api|Boton|claim",
            "method_path_multi": "POST|api|Boton|claim|1"
          },
          {
            "_": {
              "postman_id": "6904eb25-990e-48db-95ab-5d66b1c57a59"
            },
            "id": "6904eb25-990e-48db-95ab-5d66b1c57a59",
            "name": "4_2_0_Lista de botones del cliente",
            "request": {
              "name": "Lista completa de Botones (propios) (filtro opcional).",
              "description": "Lista completa de Botones (propios) (filtro opcional).",
              "url": {
                "path": ["api","Boton"],
                "host": ["{{apidomain}}"],
                "query": [
                  {
                    "description": "Opcional, filtro en forma de String JSON encoded",
                    "key": "filter",
                    "value": "{{filter}}"
                  }
                ],
                "variable": [],
                "raw": "{{apidomain}}/api/Boton"
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "disabled": true,
                  "description": " ",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "GET",
              "body": {}
            },
            "responses": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "92578aae-f97d-4e00-91be-deea5f99c466",
                  "type": "text/javascript",
                  "exec": [
                    "var botones;",
                    "pm.variables.set('filter','');",
                    "",
                    "",
                    "pm.test('JSON response can be decoded', function() {",
                    "    let jsonData = pm.response.json();",
                    "    pm.expect(jsonData instanceof Array).to.be.true;",
                    "    pm.expect(jsonData.length > 0).to.be.true;",
                    "",
                    "    var schema = {",
                    "        \"type\": \"array\",",
                    "        \"items\": {",
                    "            \"$ref\": \"MyDot#/definitions/Boton\"",
                    "        }",
                    "    };",
                    "    botones = jsonData.map(boton => {",
                    "        let {",
                    "            productos, ...cleanBoton",
                    "        } = boton;",
                    "        return cleanBoton;",
                    "    });",
                    "",
                    "    pm.test('Schema is valid', function() {",
                    "",
                    "",
                    "        let isValid = tv4.validate(botones, schema);",
                    "        if (!isValid) {",
                    "            console.warn(tv4.error);",
                    "        }",
                    "        pm.expect(isValid).to.be.true;",
                    "",
                    "    });",
                    "",
                    "    let botonesHabilitados = jsonData.filter(boton => {",
                    "        console.log(boton.otrocampo);",
                    "        return boton.productos && boton.productos.length > 0 &&",
                    "            boton.idMarca !== null &&",
                    "            boton.idMediopago !== null &&",
                    "            boton.idDireccion !== null;",
                    "    }).map(boton => boton.id);",
                    "",
                    "    let idBoton = botonesHabilitados[Math.floor(botonesHabilitados.length * (Math.random() * 0.999))];",
                    "    console.log({",
                    "        botonesHabilitados, idBoton",
                    "    });",
                    "    if (typeof idBoton === 'string') {",
                    "        pm.environment.set('idBoton', idBoton);",
                    "        pm.environment.set('botones', botonesHabilitados);",
                    "",
                    "        pm.iterationData.syncVariablesTo('cliente_botones', {",
                    "            botones",
                    "        });",
                    "        console.log(botones);",
                    "    }",
                    "});"
                  ]
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "GET|api|Boton",
            "method_path_multi": "GET|api|Boton|1"
          }
        ],
        "event": [],
        "method_path": "Boton"
      },
      {
        "id": "609cb692-e5dd-4a04-b5d9-4ff8279078c3",
        "name": "Cliente",
        "item": [
          {
            "_": {
              "postman_isSubFolder": true
            },
            "id": "083eb509-f144-4aa9-9f42-f328ad8244ad",
            "name": "{id}",
            "item": [
              {
                "_": {
                  "postman_isSubFolder": true
                },
                "id": "1b069e69-ccf8-4855-96b4-9c527ea6e939",
                "name": "botones",
                "item": [
                  {
                    "_": {
                      "postman_isSubFolder": true
                    },
                    "id": "d88b52ba-9326-4ec9-a52b-97725ffa0c29",
                    "name": "{fk}",
                    "item": [
                      {
                        "_": {
                          "postman_id": "3f26a232-b9a6-4efe-a680-706d208c089c"
                        },
                        "id": "3f26a232-b9a6-4efe-a680-706d208c089c",
                        "name": "2_1_1_Buscar botones de un Cliente por iD",
                        "request": {
                          "name": "Buscar botones de un Cliente.",
                          "description": "Buscar botones de un Cliente.",
                          "url": {
                            "path": ["api","Cliente",":id","botones",":fk"],
                            "host": ["{{apidomain}}"],
                            "query": [],
                            "variable": [
                              {
                                "description": "id Único de Cliente",
                                "type": "any",
                                "value": "{{idCliente}}",
                                "key": "id"
                              },
                              {
                                "description": "id Único de Botón",
                                "type": "any",
                                "value": "{{idBoton}}",
                                "key": "fk"
                              }
                            ],
                            "raw": "{{apidomain}}/api/Cliente/:id/botones/:fk"
                          },
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            },
                            {
                              "description": " ",
                              "key": "Authorization",
                              "value": "{{accessToken}}"
                            },
                            {
                              "description": "Access token Oauth 2.0",
                              "key": "Authorization",
                              "value": "{{accessToken}}"
                            }
                          ],
                          "method": "GET",
                          "body": {}
                        },
                        "responses": [],
                        "event": [
                          {
                            "listen": "test",
                            "script": {
                              "id": "be0e70d0-5082-47a9-9ca1-55975a7ac54f",
                              "type": "text/javascript",
                              "exec": [
                                "pm.test('Status code is 200', function () {",
                                "    pm.response.to.have.status(200);",
                                "    ",
                                "    ",
                                "    pm.test('Content-Type is application/json', function () {",
                                "        ",
                                "       pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
                                "       ",
                                "       ",
                                "        pm.test('JSON response can be decoded', function () {",
                                "            var jsonData = pm.response.json(),",
                                "            isNumber=typeof jsonData.id === 'string';",
                                "            ",
                                "            pm.expect(isNumber).to.be.true;",
                                "            pm.expect(jsonData.id.length).to.equal(12);",
                                "            pm.environment.set('idBoton',jsonData.id);",
                                "        });",
                                "    ",
                                "    ",
                                "    });",
                                "",
                                "});",
                                "//postman.setNextRequest('Lista direcciones de un Cliente.');"
                              ]
                            }
                          }
                        ],
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "method_path": "GET|api|Cliente|:id|botones|:fk",
                        "method_path_multi": "GET|api|Cliente|:id|botones|:fk|1"
                      },
                      {
                        "_": {
                          "postman_id": "bc8cc50d-2670-4b92-82b8-bef1b9f2d574"
                        },
                        "id": "bc8cc50d-2670-4b92-82b8-bef1b9f2d574",
                        "name": "2_1_2_Actualizar botones de un Cliente.",
                        "request": {
                          "name": "Actualizar botones de un Cliente.",
                          "description": "Actualizar botones de un Cliente.",
                          "url": {
                            "path": ["api","Cliente",":id","botones",":fk"],
                            "host": ["{{apidomain}}"],
                            "query": [],
                            "variable": [
                              {
                                "description": "id Único de Cliente",
                                "type": "any",
                                "value": "{{idCliente}}",
                                "key": "id"
                              },
                              {
                                "description": "id Único de Botón",
                                "type": "any",
                                "value": "{{idBoton}}",
                                "key": "fk"
                              }
                            ],
                            "raw": "{{apidomain}}/api/Cliente/:id/botones/:fk"
                          },
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            },
                            {
                              "description": " ",
                              "key": "Authorization",
                              "value": "{{accessToken}}"
                            },
                            {
                              "description": "Access token Oauth 2.0",
                              "key": "Authorization",
                              "value": "{{accessToken}}"
                            }
                          ],
                          "method": "PUT",
                          "body": {
                            "mode": "raw",
                            "raw": "{\"idMediopago\":\"{{idMediopago}}\",\"idDireccion\":\"{{direccionObj.id}}\",\"isActive\":true}"
                          }
                        },
                        "responses": [],
                        "event": [
                          {
                            "listen": "test",
                            "script": {
                              "id": "564f8339-74cc-407b-b4e5-3453c85499a6",
                              "type": "text/javascript",
                              "exec": [
                                "pm.test('Status code is 200', function () {",
                                "    pm.response.to.have.status(200);",
                                "    ",
                                "    ",
                                "    pm.test('Content-Type is application/json', function () {",
                                "        ",
                                "       pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
                                "       ",
                                "       ",
                                "        pm.test('JSON response can be decoded', function () {",
                                "            var jsonData = pm.response.json(),",
                                "            isNumber=typeof jsonData.id === 'string';",
                                "            ",
                                "            pm.expect(isNumber).to.be.true;",
                                "            pm.expect(jsonData.id.length).to.equal(12);",
                                "            pm.environment.set('idBoton',jsonData.id);",
                                "        });",
                                "    ",
                                "    ",
                                "    });",
                                "",
                                "});"
                              ]
                            }
                          },
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "eb992d46-070a-435d-8519-637de0e1b1d3",
                              "type": "text/javascript",
                              "exec": [
                                "let direccionObj = pm.environment.get('direccionObj'),",
                                "    idDireccion = direccionObj.Borrables.spliceRandom();",
                                "",
                                "direccionObj.idDireccion = idDireccion;",
                                "direccionObj.NoBorrables.push(idDireccion);",
                                "pm.environment.set('direccionObj', direccionObj);",
                                "",
                                "pm.variables.set('direccionObj.id', idDireccion);",
                                "",
                                "",
                                "let idMediopago = pm.variables.get('idMediopago');",
                                "",
                                "let mediosPagoActivos = pm.environment.get('mediosPagoActivos') || [];",
                                "",
                                "if (mediosPagoActivos.length) {",
                                "    idMediopago = mediosPagoActivos.getRandom();",
                                "    pm.variables.set('idMediopago', idMediopago);",
                                "    pm.environment.set('idMediopago', idMediopago);",
                                "}"
                              ]
                            }
                          }
                        ],
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "method_path": "PUT|api|Cliente|:id|botones|:fk",
                        "method_path_multi": "PUT|api|Cliente|:id|botones|:fk|2"
                      }
                    ],
                    "event": [],
                    "method_path": "Cliente|:id|botones|:fk"
                  },
                  {
                    "_": {
                      "postman_id": "a1c88e05-2fbf-4fa1-bda7-2b256c208ff6"
                    },
                    "id": "a1c88e05-2fbf-4fa1-bda7-2b256c208ff6",
                    "name": "2_1_0_Lista botones de un Cliente.",
                    "request": {
                      "name": "Lista botones de un Cliente.",
                      "description": "Lista botones de un Cliente.",
                      "url": {
                        "path": ["api","Cliente",":id","botones"],
                        "host": ["{{apidomain}}"],
                        "query": [
                          {
                            "description": "Opcional, filtro en forma de String JSON encoded",
                            "key": "filter",
                            "value": "{{filter}}"
                          }
                        ],
                        "variable": [
                          {
                            "description": "id Único de Cliente",
                            "type": "any",
                            "value": "{{idCliente}}",
                            "key": "id"
                          }
                        ],
                        "raw": "{{apidomain}}/api/Cliente/:id/botones"
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Authorization",
                          "value": "{{accessToken}}"
                        },
                        {
                          "description": "Access token Oauth 2.0",
                          "key": "Authorization",
                          "value": "{{accessToken}}"
                        }
                      ],
                      "method": "GET",
                      "body": {}
                    },
                    "responses": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93f05ea-f039-42df-a5ed-c2ca1e4b8169",
                          "type": "text/javascript",
                          "exec": [
                            "var botones;",
                            "pm.variables.set('filter','');",
                            "",
                            "",
                            "pm.test('JSON response can be decoded', function() {",
                            "    let jsonData = pm.response.json();",
                            "    pm.expect(jsonData instanceof Array).to.be.true;",
                            "    pm.expect(jsonData.length > 0).to.be.true;",
                            "",
                            "    var schema = {",
                            "        \"type\": \"array\",",
                            "        \"items\": {",
                            "            \"$ref\": \"MyDot#/definitions/Boton\"",
                            "        }",
                            "    };",
                            "    botones = jsonData.map(boton => {",
                            "        let {",
                            "            productos, ...cleanBoton",
                            "        } = boton;",
                            "        return cleanBoton;",
                            "    });",
                            "",
                            "    pm.test('Schema is valid', function() {",
                            "",
                            "",
                            "        let isValid = tv4.validate(botones, schema);",
                            "        if (!isValid) {",
                            "            console.warn(tv4.error);",
                            "        }",
                            "        pm.expect(isValid).to.be.true;",
                            "",
                            "    });",
                            "",
                            "    let botonesHabilitados = jsonData.filter(boton => {",
                            "        return boton.productos && boton.productos.length > 0 &&",
                            "            boton.idMarca !== null &&",
                            "            boton.idMediopago !== null &&",
                            "            boton.idDireccion !== null;",
                            "    }).map(boton => boton.id);",
                            "",
                            "    let idBoton = botonesHabilitados[Math.floor(botonesHabilitados.length * (Math.random() * 0.999))];",
                            "    console.log({",
                            "        botonesHabilitados, idBoton",
                            "    });",
                            "    if (typeof idBoton === 'string') {",
                            "        pm.environment.set('idBoton', idBoton);",
                            "        pm.environment.set('botones', botonesHabilitados);",
                            "",
                            "        pm.iterationData.syncVariablesTo('cliente_botones', {",
                            "            botones",
                            "        });",
                            "        console.log(botones);",
                            "    }",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a121be7-37fd-4253-8521-ac4f6baeab30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set('filter',JSON.stringify({\"include\":[\"productos\"]}));"
                          ]
                        }
                      }
                    ],
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "method_path": "GET|api|Cliente|:id|botones",
                    "method_path_multi": "GET|api|Cliente|:id|botones|1"
                  }
                ],
                "event": [],
                "method_path": "Cliente|:id|botones"
              },
              {
                "_": {
                  "postman_isSubFolder": true
                },
                "id": "a21a1ea4-584e-40f2-a674-b396e8912232",
                "name": "notification_token",
                "item": [
                  {
                    "_": {
                      "postman_isSubFolder": true
                    },
                    "id": "3855bd88-dd0a-450d-9b9e-0ef70726e6ef",
                    "name": "{fk}",
                    "item": [
                      {
                        "_": {
                          "postman_id": "90a5870d-143e-4707-8a67-69c0fc45ce23"
                        },
                        "id": "90a5870d-143e-4707-8a67-69c0fc45ce23",
                        "name": "1_4_1_Encuentra un device_id o notification_token por {id}",
                        "request": {
                          "name": "Buscar notification_token de un Cliente.",
                          "description": "Buscar notification_token de un Cliente.",
                          "url": {
                            "path": ["api","Cliente",":id","notification_token",":fk"],
                            "host": ["{{apidomain}}"],
                            "query": [],
                            "variable": [
                              {
                                "description": "id Único de Cliente",
                                "type": "any",
                                "value": "{{idCliente}}",
                                "key": "id"
                              },
                              {
                                "description": "id Único de Notification Token",
                                "type": "any",
                                "value": "{{idNotificationToken}}",
                                "key": "fk"
                              }
                            ],
                            "raw": "{{apidomain}}/api/Cliente/:id/notification_token/:fk"
                          },
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            },
                            {
                              "description": "Access token Oauth 2.0",
                              "key": "Authorization",
                              "value": "{{accessToken}}"
                            }
                          ],
                          "method": "GET",
                          "body": {}
                        },
                        "responses": [],
                        "event": [],
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "method_path": "GET|api|Cliente|:id|notification_token|:fk",
                        "method_path_multi": "GET|api|Cliente|:id|notification_token|:fk|1"
                      },
                      {
                        "_": {
                          "postman_id": "163316c4-022f-4802-ad17-3a9e262088c8"
                        },
                        "id": "163316c4-022f-4802-ad17-3a9e262088c8",
                        "name": "1_4_6_Elimina un device_id o notification_token por {id}",
                        "request": {
                          "name": "Suprimir notification_token de un Cliente.",
                          "description": "Suprimir notification_token de un Cliente.",
                          "url": {
                            "path": ["api","Cliente",":id","notification_token",":fk"],
                            "host": ["{{apidomain}}"],
                            "query": [],
                            "variable": [
                              {
                                "description": "id Único de Cliente",
                                "type": "any",
                                "value": "{{idCliente}}",
                                "key": "id"
                              },
                              {
                                "description": "id Único de Notification Token",
                                "type": "any",
                                "value": "{{idNotificationToken}}",
                                "key": "fk"
                              }
                            ],
                            "raw": "{{apidomain}}/api/Cliente/:id/notification_token/:fk"
                          },
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            },
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            },
                            {
                              "description": "Access token Oauth 2.0",
                              "key": "Authorization",
                              "value": "{{accessToken}}"
                            }
                          ],
                          "method": "DELETE",
                          "body": {}
                        },
                        "responses": [],
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "5f083d55-1a5d-4b93-aa16-168b2ceab234",
                              "type": "text/javascript",
                              "exec": [
                                "pm.variables.set('fakeToken','abc');",
                                "pm.variables.set('expectError','any');",
                                "pm.variables.set('expectHeaders',[204,404,401]);",
                                ""
                              ]
                            }
                          }
                        ],
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "method_path": "DELETE|api|Cliente|:id|notification_token|:fk",
                        "method_path_multi": "DELETE|api|Cliente|:id|notification_token|:fk|2"
                      }
                    ],
                    "event": [],
                    "method_path": "Cliente|:id|notification_token|:fk"
                  },
                  {
                    "_": {
                      "postman_id": "3d7d78ff-b0a3-431f-93a0-4405b6c86554"
                    },
                    "id": "3d7d78ff-b0a3-431f-93a0-4405b6c86554",
                    "name": "1_4_5_Enviar mensaje push a todos los tokens activos del usuario",
                    "request": {
                      "name": "envía notificación al topic del usuario",
                      "description": "Este endpoint requiere especificar el token.",
                      "url": {
                        "path": ["api","Cliente",":id","notification_token","sendToTopic"],
                        "host": ["{{apidomain}}"],
                        "query": [],
                        "variable": [
                          {
                            "description": "id Único de Cliente",
                            "type": "any",
                            "value": "{{idCliente}}",
                            "key": "id"
                          }
                        ],
                        "raw": "{{apidomain}}/api/Cliente/:id/notification_token/sendToTopic"
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "description": "Access token Oauth 2.0",
                          "key": "Authorization",
                          "value": "{{accessToken}}"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\"data\":{\"notification_type\":\"dashboard_test\"},\"notification\":{\"title\":\"hemos recibido tu pedido\",\"body\":\"Estoy probando solamente\"},\"topic\":\"dashboard\",\"dryRun\":false}"
                      }
                    },
                    "responses": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b14930-9ea7-4974-b434-e151b49a8a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set('expectError',true);"
                          ]
                        }
                      }
                    ],
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "method_path": "POST|api|Cliente|:id|notification_token|sendToTopic",
                    "method_path_multi": "POST|api|Cliente|:id|notification_token|sendToTopic|1"
                  },
                  {
                    "_": {
                      "postman_id": "fe6c2d94-9a84-459b-9e99-f29d42d6d8d7"
                    },
                    "id": "fe6c2d94-9a84-459b-9e99-f29d42d6d8d7",
                    "name": "9_12_Enviar mensaje push a un grupo arbitrario",
                    "request": {
                      "name": "envía notificación al un grupo arbitrario",
                      "description": "Este endpoint requiere especificar el token.",
                      "url": {
                        "path": ["api","Cliente",":id","notification_token","sendToDeviceGroup"],
                        "host": ["{{apidomain}}"],
                        "query": [],
                        "variable": [
                          {
                            "description": "id Único de Cliente",
                            "type": "any",
                            "value": "{{idCliente}}",
                            "key": "id"
                          }
                        ],
                        "raw": "{{apidomain}}/api/Cliente/:id/notification_token/sendToDeviceGroup"
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "description": "Access token Oauth 2.0",
                          "key": "Authorization",
                          "value": "{{accessToken}}"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\"notification_key\":\"{{notification_key}}\",\"data\":{\"name\":\"wrench\",\"mass\":\"1.3kg\",\"count\":\"3\",\"timestamp\":\"2019-10-25T16:19:21.791Z\",\"notification_type\":\"prueba_mydot\"},\"notification\":{\"title\":\"Prueba ofertas MyDot\",\"body\":\"Este es un mensaje de prueba, no se asusten\"},\"android\":{\"collapse_key\":\"Nuevos descuentos en MyDot\",\"ttl\":7600000,\"priority\":\"HIGH\",\"notification\":{\"event_time\":\"2019-10-25T16:19:21.791Z\",\"visibility\":\"PUBLIC\",\"notification_priority\":\"PRIORITY_HIGH\",\"icon\":\"fcm_push_icon\",\"tag\":\"mydot\",\"color\":\"#55A07A\",\"sound\":\"default\"},\"fcm_options\":{\"analytics_label\":\"ofertas_nespresso\"}},\"webpush\":{\"headers\":{\"TTL\":\"120\",\"Urgency\":\"high\",\"Topic\":\"mydot\"},\"notification\":{\"badge\":\"fcm_push_icon.png\",\"icon\":\"img/icons/android-icon-72x72.png\",\"tag\":\"mydot\",\"timestamp\":1572020361791,\"vibrate\":[200,100,200]},\"fcm_options\":{\"link\":\"https://dashboard-dev.mydot.app/pedidos/654\",\"analytics_label\":\"ofertas_nespresso\"}},\"apns\":{\"headers\":{\"apns-priority\":\"10\",\"apns-collapse-id\":\"Nuevos descuentos en MyDot\"},\"fcm_options\":{\"analytics_label\":\"ofertas_nespresso\"}},\"fcm_options\":{\"analytics_label\":\"ofertas_nespresso\"},\"options\":{\"dryRun\":true}}"
                      }
                    },
                    "responses": [],
                    "event": [],
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "method_path": "POST|api|Cliente|:id|notification_token|sendToDeviceGroup",
                    "method_path_multi": "POST|api|Cliente|:id|notification_token|sendToDeviceGroup|1"
                  },
                  {
                    "_": {
                      "postman_id": "dd018347-bf44-4ba9-a367-5adaf547efe8"
                    },
                    "id": "dd018347-bf44-4ba9-a367-5adaf547efe8",
                    "name": "1_4_4_Enviar mensaje push a un token en particular (ej: notificación)",
                    "request": {
                      "name": "envía notificación a un token específico",
                      "description": "Este endpoint requiere especificar el token.",
                      "url": {
                        "path": ["api","Cliente",":id","notification_token","sendToDevice"],
                        "host": ["{{apidomain}}"],
                        "query": [],
                        "variable": [
                          {
                            "description": "id Único de Cliente",
                            "type": "any",
                            "value": "{{idCliente}}",
                            "key": "id"
                          }
                        ],
                        "raw": "{{apidomain}}/api/Cliente/:id/notification_token/sendToDevice"
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "description": "Access token Oauth 2.0",
                          "key": "Authorization",
                          "value": "{{accessToken}}"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\"data\":{\"notification_type\":\"pedido_en_proceso\",\"idPedido\":\"437\",\"id_pedido\":\"437\",\"id_producto\":\"null\",\"id_boton\":\"70F11C82E005\",\"dashboard_title\":\"Actualización de Pedido #437\",\"dashboard_body\":\"El pedido #437 ha pasado al estado \\\"En Proceso\\\" (Los operadores están preparando el pedido) \",\"idEstado\":\"2\",\"timestamp\":\"2019-08-11T20:08:53.399Z\"},\"notification\":{\"title\":\"hemos recibido tu pedido\",\"body\":\"Hemos recibido un pedido desde tu Dot Ariel, por un valor total de 10000.\"},\"dryRun\":true,\"token\":\"{{notificationToken}}\"}"
                      }
                    },
                    "responses": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728891f4-67d1-48b9-9de9-6e0438d53b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set('expectError',true);"
                          ]
                        }
                      }
                    ],
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "method_path": "POST|api|Cliente|:id|notification_token|sendToDevice",
                    "method_path_multi": "POST|api|Cliente|:id|notification_token|sendToDevice|1"
                  },
                  {
                    "_": {
                      "postman_id": "68492307-9ca7-4b7a-a484-3502d8c2d612"
                    },
                    "id": "68492307-9ca7-4b7a-a484-3502d8c2d612",
                    "name": "1_4_0_Lista los tokens de notificación del usuario",
                    "request": {
                      "name": "Lista notification_token de un Cliente.",
                      "description": "Lista notification_token de un Cliente.",
                      "url": {
                        "path": ["api","Cliente",":id","notification_token"],
                        "host": ["{{apidomain}}"],
                        "query": [
                          {
                            "description": "Opcional, filtro en forma de String JSON encoded",
                            "key": "filter",
                            "value": "{{filter}}"
                          }
                        ],
                        "variable": [
                          {
                            "description": "id Único de Cliente",
                            "type": "any",
                            "value": "{{idCliente}}",
                            "key": "id"
                          }
                        ],
                        "raw": "{{apidomain}}/api/Cliente/:id/notification_token"
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "description": "Access token Oauth 2.0",
                          "key": "Authorization",
                          "value": "{{accessToken}}"
                        }
                      ],
                      "method": "GET",
                      "body": {}
                    },
                    "responses": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ddd17ee-1c69-498c-81ea-aa045acdb3fb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test('Status code is 200', function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "pm.test('Content-Type is application/json', function () {",
                            "    ",
                            "   pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
                            "});",
                            "",
                            "pm.test('JSON response can be decoded and is an array', function () {",
                            "    var jsonData = pm.response.json(),",
                            "    isArray = jsonData instanceof Array,",
                            "    firstObject = jsonData[0];",
                            "    pm.expect(typeof firstObject).to.eq('object');",
                            "    pm.expect(isArray).to.be.true;",
                            "    ",
                            "    let {deviceId:notificationToken, platform: notificationPlatform}=firstObject;",
                            "    ",
                            "    pm.environment.set('notificationPlatform',notificationPlatform);",
                            "    pm.environment.set('notificationToken',notificationToken);",
                            "});",
                            "",
                            ""
                          ]
                        }
                      }
                    ],
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "method_path": "GET|api|Cliente|:id|notification_token",
                    "method_path_multi": "GET|api|Cliente|:id|notification_token|1"
                  },
                  {
                    "_": {
                      "postman_id": "63051b1c-2061-4045-8968-dad0be711ad7"
                    },
                    "id": "63051b1c-2061-4045-8968-dad0be711ad7",
                    "name": "1_4_2_Registrar o actualiza un notificacion token",
                    "request": {
                      "name": "Crea o actualiza un notification token",
                      "description": "Este método realiza un UPSERT por lo que se puede repetir el llamado sin generar errores. La funcionalidad es idéntica a la del método PATCH de este mismo endpoint",
                      "url": {
                        "path": ["api","Cliente",":id","notification_token"],
                        "host": ["{{apidomain}}"],
                        "query": [],
                        "variable": [
                          {
                            "description": "id Único de Cliente",
                            "type": "any",
                            "value": "{{idCliente}}",
                            "key": "id"
                          }
                        ],
                        "raw": "{{apidomain}}/api/Cliente/:id/notification_token"
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "description": "Access token Oauth 2.0",
                          "key": "Authorization",
                          "value": "{{accessToken}}"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\"deviceId\":\"{{notificationToken}}\",\"platform\":\"{{notificationPlatform}}\"}"
                      }
                    },
                    "responses": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a0b880-a37e-4945-ab21-70820b96ebc7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            "pm.test('Status code is 200', function () {",
                            "    pm.response.to.have.status(200);",
                            "    ",
                            "    pm.test('Content-Type is application/json', function () {",
                            "    ",
                            "   pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
                            "       ",
                            "       pm.test('JSON response can be decoded', function () {",
                            "            var jsonData = pm.response.json();",
                            "            if(jsonData.deviceId) {",
                            "                pm.environment.set('notificationToken',jsonData.deviceId);",
                            "            }",
                            "        });",
                            "    ",
                            "    });",
                            "    ",
                            "    ",
                            "",
                            "});",
                            ""
                          ]
                        }
                      }
                    ],
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "method_path": "POST|api|Cliente|:id|notification_token",
                    "method_path_multi": "POST|api|Cliente|:id|notification_token|2"
                  }
                ],
                "event": [],
                "method_path": "Cliente|:id|notification_token"
              },
              {
                "_": {
                  "postman_isSubFolder": true
                },
                "id": "de18a820-4a91-4411-9f97-e745cfc9fde1",
                "name": "direcciones",
                "item": [
                  {
                    "_": {
                      "postman_isSubFolder": true
                    },
                    "id": "b42f427a-f237-485f-843d-5301f60de148",
                    "name": "{fk}",
                    "item": [
                      {
                        "_": {
                          "postman_id": "8348ab2f-edc3-41d6-9696-fe9cb4acf830"
                        },
                        "id": "8348ab2f-edc3-41d6-9696-fe9cb4acf830",
                        "name": "1_1_7_Buscar direcciones de un Cliente.",
                        "request": {
                          "name": "Buscar direcciones de un Cliente.",
                          "description": "Buscar direcciones de un Cliente.",
                          "url": {
                            "path": ["api","Cliente",":id","direcciones",":fk"],
                            "host": ["{{apidomain}}"],
                            "query": [],
                            "variable": [
                              {
                                "description": "id Único de Cliente",
                                "type": "any",
                                "value": "{{idCliente}}",
                                "key": "id"
                              },
                              {
                                "description": "id Único de Dirección",
                                "type": "any",
                                "value": "{{direccionObj.id}}",
                                "key": "fk"
                              }
                            ],
                            "raw": "{{apidomain}}/api/Cliente/:id/direcciones/:fk"
                          },
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            },
                            {
                              "key": "Authorization",
                              "value": "{{accessToken}}"
                            },
                            {
                              "description": "Access token Oauth 2.0",
                              "key": "Authorization",
                              "value": "{{accessToken}}"
                            }
                          ],
                          "method": "GET",
                          "body": {}
                        },
                        "responses": [],
                        "event": [
                          {
                            "listen": "test",
                            "script": {
                              "id": "0eacaf6c-8e25-4b83-8f3a-a1aa09c7beaf",
                              "type": "text/javascript",
                              "exec": [
                                "var schema = {",
                                "    \"$ref\": \"MyDot#/definitions/Direccion\"",
                                "};",
                                "",
                                "",
                                "",
                                "",
                                "pm.test('JSON response can be decoded', function() {",
                                "    var jsonData = pm.response.json();",
                                "    pm.expect(jsonData.id).to.be.a('number');",
                                "",
                                "    pm.test('Schema is valid', function() {",
                                "        let isValid = tv4.validate(jsonData, schema);",
                                "        if (!isValid) {",
                                "            console.warn(tv4.error);",
                                "        }",
                                "        pm.expect(isValid).to.be.true;",
                                "",
                                "    });",
                                "    pm.environment.set('direccionObj.id', jsonData.id);",
                                "});"
                              ]
                            }
                          },
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "34932d2d-db9e-4e9a-a7ad-1a64c4f8937a",
                              "type": "text/javascript",
                              "exec": [
                                "let direccionObj = pm.environment.get('direccionObj');",
                                "pm.variables.set('direccionObj.id', direccionObj.direcciones.getRandom());"
                              ]
                            }
                          }
                        ],
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "method_path": "GET|api|Cliente|:id|direcciones|:fk",
                        "method_path_multi": "GET|api|Cliente|:id|direcciones|:fk|1"
                      },
                      {
                        "_": {
                          "postman_id": "002927c1-efa6-4624-9a6f-8797de6107c8"
                        },
                        "id": "002927c1-efa6-4624-9a6f-8797de6107c8",
                        "name": "1_1_6_Intenta eliminar dirección por defecto",
                        "request": {
                          "name": "Suprimir direcciones de un Cliente.",
                          "description": "Suprimir direcciones de un Cliente.",
                          "url": {
                            "path": ["api","Cliente",":id","direcciones",":fk"],
                            "host": ["{{apidomain}}"],
                            "query": [],
                            "variable": [
                              {
                                "description": "id Único de Cliente",
                                "type": "any",
                                "value": "{{idCliente}}",
                                "key": "id"
                              },
                              {
                                "description": "id Único de Dirección",
                                "type": "any",
                                "value": "{{direccionObj.id}}",
                                "key": "fk"
                              }
                            ],
                            "raw": "{{apidomain}}/api/Cliente/:id/direcciones/:fk"
                          },
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            },
                            {
                              "disabled": true,
                              "key": "Authorization",
                              "value": "{{accessToken}}"
                            },
                            {
                              "description": "Access token Oauth 2.0",
                              "key": "Authorization",
                              "value": "{{accessToken}}"
                            }
                          ],
                          "method": "DELETE",
                          "body": {}
                        },
                        "responses": [],
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "36789f7e-3dde-4b1b-8277-e1b331f7cdc9",
                              "type": "text/javascript",
                              "exec": [
                                "    pm.variables.set('expectHeaders', [409]);",
                                "    pm.variables.set('expectError', 'any');",
                                "    ",
                                "    let direccionObj=pm.environment.get('direccionObj');",
                                "    ",
                                "    _.each(direccionObj, (value, key) => {",
                                "        if (value) {",
                                "            pm.variables.set(`direccionObj.${key}`, value);",
                                "        }",
                                "    });"
                              ]
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "7f130d46-1abe-4f9c-9705-589401a7ff51",
                              "type": "text/javascript",
                              "exec": [
                                "pm.test(\"Status code is 409 when trying to remove default direccion \"+pm.variables.get('direccionObj.idPorDefecto'), function () {",
                                "    pm.response.to.have.status(409);",
                                "});"
                              ]
                            }
                          }
                        ],
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "method_path": "DELETE|api|Cliente|:id|direcciones|:fk",
                        "method_path_multi": "DELETE|api|Cliente|:id|direcciones|:fk|2"
                      },
                      {
                        "_": {
                          "postman_id": "f2a87fb3-df8d-47ec-8bfd-2b2e5467b348"
                        },
                        "id": "f2a87fb3-df8d-47ec-8bfd-2b2e5467b348",
                        "name": "1_1_2_Actualizar direcciones de un Cliente.",
                        "request": {
                          "name": "Actualizar direcciones de un Cliente.",
                          "description": "Actualizar direcciones de un Cliente.",
                          "url": {
                            "path": ["api","Cliente",":id","direcciones",":fk"],
                            "host": ["{{apidomain}}"],
                            "query": [],
                            "variable": [
                              {
                                "description": "id Único de Cliente",
                                "type": "any",
                                "value": "{{idCliente}}",
                                "key": "id"
                              },
                              {
                                "description": "id Único de Dirección",
                                "type": "any",
                                "value": "{{direccionObj.id}}",
                                "key": "fk"
                              }
                            ],
                            "raw": "{{apidomain}}/api/Cliente/:id/direcciones/:fk"
                          },
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            },
                            {
                              "key": "Authorization",
                              "value": "{{accessToken}}"
                            },
                            {
                              "description": "Access token Oauth 2.0",
                              "key": "Authorization",
                              "value": "{{accessToken}}"
                            }
                          ],
                          "method": "PUT",
                          "body": {
                            "mode": "raw",
                            "raw": "{\"numero\":\"depto {{direccionObj.id}}\",\"instrucciones\":\"{{mensajeDireccion}}\",\"lng\":-70.5727403,\"lat\":-33.413213}"
                          }
                        },
                        "responses": [],
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "dbc99635-41ab-4512-9ef2-e8f166c815c2",
                              "type": "text/javascript",
                              "exec": [
                                "let direccionObj = pm.environment.get('direccionObj');",
                                "",
                                "let mensajes = ['Es una bodega','Hay un perro', 'Tiene alarma', 'El timbre está malo'];",
                                "",
                                "pm.variables.set('mensajeDireccion',mensajes.getRandom());",
                                "if (direccionObj.direcciones.length) {",
                                "    pm.variables.set('direccionObj.id', direccionObj.direcciones.getRandom());",
                                "}",
                                " "
                              ]
                            }
                          },
                          {
                            "listen": "test",
                            "script": {
                              "id": "f66d68c0-f62b-45f2-bf3b-31813e115081",
                              "type": "text/javascript",
                              "exec": [
                                "var schema = {",
                                "    \"$ref\": \"MyDot#/definitions/Direccion\"",
                                "};",
                                "let direccionObj = pm.environment.get('direccionObj');",
                                "",
                                " ",
                                "",
                                "",
                                "pm.test('JSON response can be decoded', function() {",
                                "    var jsonData = pm.response.json();",
                                "    pm.expect(jsonData.id).to.be.a('number');",
                                "",
                                "    pm.test('Schema is valid', function() {",
                                "        let isValid = tv4.validate(jsonData, schema);",
                                "        if (!isValid) {",
                                "            console.warn(tv4.error);",
                                "        }",
                                "        pm.expect(isValid).to.be.true;",
                                "",
                                "    });",
                                "    direccionObj.id=jsonData.id;",
                                "    pm.environment.set('direccionObj', direccionObj);",
                                "});"
                              ]
                            }
                          }
                        ],
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "method_path": "PUT|api|Cliente|:id|direcciones|:fk",
                        "method_path_multi": "PUT|api|Cliente|:id|direcciones|:fk|3"
                      }
                    ],
                    "event": [],
                    "method_path": "Cliente|:id|direcciones|:fk"
                  },
                  {
                    "_": {
                      "postman_id": "abbf0bcb-4210-4caa-945f-85e64eb47211"
                    },
                    "id": "abbf0bcb-4210-4caa-945f-85e64eb47211",
                    "name": "1_1_4_Lista_direcciones_despues_de_borrar",
                    "request": {
                      "name": "Lista direcciones de un Cliente.",
                      "description": "Dado que la ventana horaria es ahora fija (despacho express) este endpoint incluye por defecto el costo de despacho",
                      "url": {
                        "path": ["api","Cliente",":id","direcciones"],
                        "host": ["{{apidomain}}"],
                        "query": [
                          {
                            "description": "Opcional, filtro en forma de String JSON encoded",
                            "key": "filter",
                            "value": "{{filter}}"
                          }
                        ],
                        "variable": [
                          {
                            "description": "id Único de Cliente",
                            "type": "any",
                            "value": "{{idCliente}}",
                            "key": "id"
                          }
                        ],
                        "raw": "{{apidomain}}/api/Cliente/:id/direcciones"
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "disabled": true,
                          "key": "Authorization",
                          "value": "{{accessToken}}"
                        },
                        {
                          "description": "Access token Oauth 2.0",
                          "key": "Authorization",
                          "value": "{{accessToken}}"
                        }
                      ],
                      "method": "GET",
                      "body": {}
                    },
                    "responses": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a606220-ddce-452f-a7a9-24367a735152",
                          "type": "text/javascript",
                          "exec": [
                            "let direccionObj = pm.environment.get('direccionObj');",
                            "",
                            "pm.variables.set('filter','');",
                            "let id_direccion_default =direccionObj.idPorDefecto;",
                            "    //postman.setNextRequest('Listado de Clientes');",
                            "pm.test('JSON response can be decoded', function() {",
                            "    let direcciones = pm.response.json();",
                            "    pm.expect(direcciones instanceof Array).to.be.true;",
                            "    pm.expect(direcciones.length > 0).to.be.true;",
                            "    var schema = {",
                            "        type: 'array',",
                            "        items: {",
                            "            $ref: 'MyDot#/definitions/Direccion'",
                            "        }",
                            "    };",
                            "    _.testSchema(direcciones, schema, 'Direcciones');",
                            "",
                            "",
                            "    const direcciones_response = _.direccionesByBorrables(",
                            "        direcciones,",
                            "        id_direccion_default",
                            "    );",
                            "    pm.environment.set('direccionObj',direcciones_response);",
                            "    console.log(direcciones_response);",
                            "    _.each(direcciones_response, (value, key) => {",
                            "        if (value) {",
                            "            pm.environment.set(`direccionObj.${key}`, value);",
                            "        }",
                            "    });",
                            "",
                            "",
                            "    let badIds = direcciones.filter(direccion => {",
                            "        return typeof direccion.id !== 'number'",
                            "    });",
                            "",
                            "    pm.expect(badIds.length).to.eq(0);",
                            "",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e5ca1f-f2dc-41c9-9423-3224cf3e6731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set('expectError', 'any');",
                            "pm.variables.set('expectHeaders', [200, 400, 401, 403]);",
                            "",
                            "",
                            "let filter = {",
                            "    include: {",
                            "        relation: 'botones',",
                            "        scope: {",
                            "            fields: ['id', 'idDireccion', 'idMediopago', 'isActive'],",
                            "            where: {",
                            "                isActive: true",
                            "            }",
                            "        }",
                            "    }",
                            "};",
                            "pm.variables.set('filter', JSON.stringify(filter));"
                          ]
                        }
                      }
                    ],
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "method_path": "GET|api|Cliente|:id|direcciones",
                    "method_path_multi": "GET|api|Cliente|:id|direcciones|1"
                  },
                  {
                    "_": {
                      "postman_id": "1d1bc2ae-b02a-41f9-b3d8-905a772f7f7b"
                    },
                    "id": "1d1bc2ae-b02a-41f9-b3d8-905a772f7f7b",
                    "name": "1_1_0_Agrega_una_direccion_al_Cliente.",
                    "request": {
                      "name": "Agrega una entidad direcciones a un Cliente.",
                      "description": "Agrega una entidad direcciones a un Cliente.",
                      "url": {
                        "path": ["api","Cliente",":id","direcciones"],
                        "host": ["{{apidomain}}"],
                        "query": [],
                        "variable": [
                          {
                            "description": "id Único de Cliente",
                            "type": "any",
                            "value": "{{idCliente}}",
                            "key": "id"
                          }
                        ],
                        "raw": "{{apidomain}}/api/Cliente/:id/direcciones"
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "disabled": true,
                          "key": "Authorization",
                          "value": "{{accessToken}}"
                        },
                        {
                          "description": "Access token Oauth 2.0",
                          "key": "Authorization",
                          "value": "{{accessToken}}"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\"direccion\":\"{{new_direccion}}\",\"numero\":\"{{new_numero}}\",\"lat\":\"{{new_lat}}\",\"lng\":\"{{new_lng}}\"}"
                      }
                    },
                    "responses": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ad958e-f2ee-4786-9db8-dbc85c85e15f",
                          "type": "text/javascript",
                          "exec": [
                            "let direccionObj = pm.environment.get('direccionObj');",
                            "",
                            "var schema = {",
                            "    \"$ref\": \"MyDot#/definitions/Direccion\"",
                            "};",
                            "",
                            "pm.test('JSON response can be decoded', function() {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData.id).to.be.a('number');",
                            "",
                            "    pm.test('Schema is valid', function() {",
                            "        let isValid = tv4.validate(jsonData, schema);",
                            "        if (!isValid) {",
                            "            console.warn(tv4.error);",
                            "        }",
                            "        pm.expect(isValid).to.be.true;",
                            "    });",
                            "    direccionObj.id=jsonData.id;",
                            "    direccionObj.direcciones.push(jsonData.id);",
                            "    ",
                            "    pm.environment.set('direccionObj', direccionObj);",
                            "",
                            "",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85b0a81-4fe9-4ac8-b2c4-3a3b26df9225",
                          "type": "text/javascript",
                          "exec": [
                            "let nuevas_direcciones=[",
                            "\t{\"direccion\":\"Augusto Leguía Norte, Las Condes, Chile\",\"numero\":\"255\",\"lat\":-33.414699,\"lng\":-70.5979463},",
                            "{\"direccion\":\"Avenida Apoquindo 5950, Las Condes, Chile\",\"numero\":\"Piso 15\",\"lat\":-33.4090248,\"lng\":-70.5688699},",
                            "{\"direccion\":\"Avenida Apoquindo, Las Condes, Chile\",\"numero\":\"6797\",\"lat\":-33.4108191,\"lng\":-70.5742302},",
                            "{\"direccion\":\"Avenida Manquehue Norte 952, Las Condes, Chile\",\"numero\":\"Departamento 902\",\"lat\":-33.3996363,\"lng\":-70.5716402},",
                            "{\"direccion\":\"Avenida Presidente Riesco 7187, Las Condes, Chile\",\"numero\":\"7187\",\"lat\":-33.3972544,\"lng\":-70.5587748},",
                            "{\"direccion\":\"Benjamin 2940, Las Condes, Chile\",\"numero\":\"Depto 1002\",\"lat\":-33.4132526,\"lng\":-70.6012773},",
                            "{\"direccion\":\"Cerro Colorado 6028, Las Condes, Chile\",\"numero\":\"910\",\"lat\":-33.4007323,\"lng\":-70.5719202},",
                            "{\"direccion\":\"Cerro El Plomo 5420, Las Condes, Chile\",\"numero\":\"Oficina 1108\",\"lat\":-33.4057396,\"lng\":-70.5749252},",
                            "{\"direccion\":\"El Dante 4241, Las Condes, Chile\",\"numero\":\"401\",\"lat\":-33.4119582,\"lng\":-70.5880782},",
                            "{\"direccion\":\"Enrique Foster Norte 211, Las Condes, Chile\",\"numero\":\"402\",\"lat\":-33.4134333,\"lng\":-70.5945848},",
                            "{\"direccion\":\"Fray Luis de León 12281, Las Condes, Chile\",\"numero\":\"12281\",\"lat\":-33.3754726,\"lng\":-70.5174286},",
                            "{\"direccion\":\"Isidora Goyenechea, Las Condes, Chile\",\"numero\":\"3000\",\"lat\":-33.4142493,\"lng\":-70.5990251},",
                            "{\"direccion\":\"La Gioconda 4220, Las Condes, Chile\",\"numero\":\"72\",\"lat\":-33.4130798,\"lng\":-70.5874725},",
                            "{\"direccion\":\"Los Militares 5225, Las Condes, Chile\",\"numero\":\"605 \",\"lat\":-33.4080407,\"lng\":-70.5753435},",
                            "{\"direccion\":\"Luis Matte Larrain 9572\",\"numero\":\"9572\",\"lat\":-33.4054435,\"lng\":-70.5360806},",
                            "{\"direccion\":\"Neveria 5357, Las Condes, Chile\",\"numero\":\"5357\",\"lat\":-33.4120373,\"lng\":-70.5723819},",
                            "{\"direccion\":\"Rosario Norte 410, Las Condes, Chile\",\"numero\":\"141\",\"lat\":-33.4055874,\"lng\":-70.5725745},",
                            "{\"direccion\":\"Warren Smith 107, Las Condes, Chile\",\"numero\":\"Depto 155\",\"lat\":-33.4085403,\"lng\":-70.5747858}",
                            "],",
                            "nueva_direccion= nuevas_direcciones.getRandom(),",
                            "{direccion,numero,lat,lng}=nueva_direccion;",
                            "",
                            "pm.variables.set('new_direccion',direccion);",
                            "pm.variables.set('new_numero',numero);",
                            "pm.variables.set('new_lat',lat);",
                            "pm.variables.set('new_lng',lng);",
                            "",
                            "pm.collectionVariables.set('nuevas_direcciones',nuevas_direcciones);"
                          ]
                        }
                      }
                    ],
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "method_path": "POST|api|Cliente|:id|direcciones",
                    "method_path_multi": "POST|api|Cliente|:id|direcciones|2"
                  }
                ],
                "event": [],
                "method_path": "Cliente|:id|direcciones"
              },
              {
                "_": {
                  "postman_id": "53213891-52b7-450d-9bd7-9cb84579fd3b"
                },
                "id": "53213891-52b7-450d-9bd7-9cb84579fd3b",
                "name": "1_1_5_Muestra la Dirección por Defecto de un Cliente.",
                "request": {
                  "name": "Muestra la Dirección por Defecto de un Cliente.",
                  "description": "Muestra la Dirección por Defecto de un Cliente.",
                  "url": {
                    "path": ["api","Cliente",":id","direccion_default"],
                    "host": ["{{apidomain}}"],
                    "query": [],
                    "variable": [
                      {
                        "description": "id Único de Cliente",
                        "type": "any",
                        "value": "{{idCliente}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Cliente/:id/direccion_default"
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "disabled": true,
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fd594d2-a2e4-49bb-86ed-9384235b400c",
                      "type": "text/javascript",
                      "exec": [
                        "let direccionObj = pm.environment.get('direccionObj');",
                        "",
                        "",
                        "pm.variables.set('filter', '');",
                        "",
                        "var schema = {",
                        "    \"$ref\": \"MyDot#/definitions/Direccion\"",
                        "};",
                        "",
                        "",
                        "",
                        "",
                        "pm.test('JSON response can be decoded', function() {",
                        "    var jsonData = pm.response.json();",
                        "    pm.expect(jsonData.id).to.be.a('number');",
                        "",
                        "    pm.test('Schema is valid', function() {",
                        "        let isValid = tv4.validate(jsonData, schema);",
                        "        if (!isValid) {",
                        "            console.warn(tv4.error);",
                        "        }",
                        "        pm.expect(isValid).to.be.true;",
                        "",
                        "    });",
                        "",
                        "    if (!direccionObj.direcciones.includes(jsonData.id)) {",
                        "        direccionObj.direcciones.push(jsonData.id);",
                        "    }",
                        "    if (!direccionObj.NoBorrables.includes(jsonData.id)) {",
                        "        direccionObj.NoBorrables.push(jsonData.id);",
                        "    }",
                        "    direccionObj.Borrables = direccionObj.Borrables.filter(direccion => {",
                        "        return !direccionObj.NoBorrables.includes(direccion);",
                        "    })",
                        "    if (!direccionObj.id) {",
                        "        direccionObj.id = jsonData.id;",
                        "    }",
                        "    direccionObj.idPorDefecto = jsonData.id;",
                        "    _.each(direccionObj, (value, key) => {",
                        "        if (value) {",
                        "            pm.environment.set(`direccionObj.${key}`, value);",
                        "        }",
                        "    });",
                        "    pm.environment.set('direccionObj', direccionObj);",
                        "",
                        "",
                        "",
                        "",
                        "});"
                      ]
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02a5b096-3e73-49cb-be81-9d9693d6fc12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set('filter',JSON.stringify({\"include\":[\"botones\"]}));",
                        "",
                        " "
                      ]
                    }
                  }
                ],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Cliente|:id|direccion_default",
                "method_path_multi": "GET|api|Cliente|:id|direccion_default|1"
              },
              {
                "_": {
                  "postman_isSubFolder": true
                },
                "id": "5fda86c4-8d67-4948-aa1c-7c065c8241c6",
                "name": "mediospago",
                "item": [
                  {
                    "_": {
                      "postman_isSubFolder": true
                    },
                    "id": "6b38d270-a464-4a6d-a9cd-bb3cdf94a466",
                    "name": "{fk}",
                    "item": [
                      {
                        "_": {
                          "postman_id": "df9e5835-5342-47e6-adb2-1f260380fe5c"
                        },
                        "id": "df9e5835-5342-47e6-adb2-1f260380fe5c",
                        "name": "1_2_1_Listar datos de un medio de pago específico",
                        "request": {
                          "name": "Buscar Medios de Pago de un Cliente.",
                          "description": "Buscar Medios de Pago de un Cliente.",
                          "url": {
                            "path": ["api","Cliente",":id","mediospago",":fk"],
                            "host": ["{{apidomain}}"],
                            "query": [],
                            "variable": [
                              {
                                "description": "id Único de Cliente",
                                "type": "any",
                                "value": "{{idCliente}}",
                                "key": "id"
                              },
                              {
                                "description": "id Único de Medio de Pago",
                                "type": "any",
                                "value": "{{idMedioPago}}",
                                "key": "fk"
                              }
                            ],
                            "raw": "{{apidomain}}/api/Cliente/:id/mediospago/:fk"
                          },
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            },
                            {
                              "description": " ",
                              "key": "Authorization",
                              "value": "{{accessToken}}"
                            },
                            {
                              "description": "Access token Oauth 2.0",
                              "key": "Authorization",
                              "value": "{{accessToken}}"
                            }
                          ],
                          "method": "GET",
                          "body": {}
                        },
                        "responses": [],
                        "event": [
                          {
                            "listen": "test",
                            "script": {
                              "id": "5bd87269-28f8-418a-9cd9-749ec1b8b61c",
                              "type": "text/javascript",
                              "exec": [
                                "var schema = {",
                                "    \"$ref\": \"MyDot#/definitions/MedioPago\"",
                                "};",
                                "",
                                "",
                                "",
                                "",
                                "pm.test('JSON response can be decoded', function() {",
                                "    var jsonData = pm.response.json();",
                                "    pm.expect(jsonData.id).to.be.a('number');",
                                "",
                                "    pm.test('Schema is valid', function() {",
                                "        let isValid = tv4.validate(jsonData, schema);",
                                "        if (!isValid) {",
                                "            console.warn(tv4.error);",
                                "        }",
                                "        pm.expect(isValid).to.be.true;",
                                "",
                                "    });",
                                "});"
                              ]
                            }
                          },
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "7d42fc92-fade-4d5b-85a7-8b8a8c5c0c43",
                              "type": "text/javascript",
                              "exec": [
                                "pm.variables.set('idMediopago',pm.environment.get('mediosPagoActivos').getRandom());"
                              ]
                            }
                          }
                        ],
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "method_path": "GET|api|Cliente|:id|mediospago|:fk",
                        "method_path_multi": "GET|api|Cliente|:id|mediospago|:fk|1"
                      },
                      {
                        "_": {
                          "postman_id": "364d2eb7-91d8-48de-8683-f2772f6c2394"
                        },
                        "id": "364d2eb7-91d8-48de-8683-f2772f6c2394",
                        "name": "1_2_4_Intenta eliminar medio de pago por defecto",
                        "request": {
                          "name": "Suprimir Medios de Pago de un Cliente.",
                          "description": "Este método sólo ejecuta un soft-delete, marcando el idEstado como inactivo",
                          "url": {
                            "path": ["api","Cliente",":id","mediospago",":fk"],
                            "host": ["{{apidomain}}"],
                            "query": [],
                            "variable": [
                              {
                                "description": "id Único de Cliente",
                                "type": "any",
                                "value": "{{idCliente}}",
                                "key": "id"
                              },
                              {
                                "description": "id Único de Medio de Pago",
                                "type": "any",
                                "value": "{{idMedioPago}}",
                                "key": "fk"
                              }
                            ],
                            "raw": "{{apidomain}}/api/Cliente/:id/mediospago/:fk"
                          },
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            },
                            {
                              "disabled": true,
                              "key": "Authorization",
                              "value": "{{accessToken}}"
                            },
                            {
                              "description": "Access token Oauth 2.0",
                              "key": "Authorization",
                              "value": "{{accessToken}}"
                            }
                          ],
                          "method": "DELETE",
                          "body": {}
                        },
                        "responses": [],
                        "event": [
                          {
                            "listen": "prerequest",
                            "script": {
                              "id": "26812c1f-02ba-47c3-a7d4-e17570892b85",
                              "type": "text/javascript",
                              "exec": [
                                "    pm.variables.set('expectHeaders', [409]);",
                                "    pm.variables.set('expectError', 'any');"
                              ]
                            }
                          }
                        ],
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "method_path": "DELETE|api|Cliente|:id|mediospago|:fk",
                        "method_path_multi": "DELETE|api|Cliente|:id|mediospago|:fk|2"
                      }
                    ],
                    "event": [],
                    "method_path": "Cliente|:id|mediospago|:fk"
                  },
                  {
                    "_": {
                      "postman_id": "1a0ad215-4dab-47fe-a205-504c2da12871"
                    },
                    "id": "1a0ad215-4dab-47fe-a205-504c2da12871",
                    "name": "1_2_0_Lista Medios de Pago de un Cliente.",
                    "request": {
                      "name": "Lista Medios de Pago de un Cliente.",
                      "description": "Lista Medios de Pago de un Cliente.",
                      "url": {
                        "path": ["api","Cliente",":id","mediospago"],
                        "host": ["{{apidomain}}"],
                        "query": [
                          {
                            "description": "Opcional, filtro en forma de String JSON encoded",
                            "key": "filter",
                            "value": "{{filter}}"
                          }
                        ],
                        "variable": [
                          {
                            "description": "id Único de Cliente",
                            "type": "any",
                            "value": "{{idCliente}}",
                            "key": "id"
                          }
                        ],
                        "raw": "{{apidomain}}/api/Cliente/:id/mediospago"
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "disabled": true,
                          "key": "Authorization",
                          "value": "{{accessToken}}"
                        },
                        {
                          "description": "Access token Oauth 2.0",
                          "key": "Authorization",
                          "value": "{{accessToken}}"
                        }
                      ],
                      "method": "GET",
                      "body": {}
                    },
                    "responses": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01db26f-699b-4cf7-9b14-7def1416b260",
                          "type": "text/javascript",
                          "exec": [
                            "var schema = {",
                            "    \"type\": \"array\",",
                            "    \"items\": {",
                            "        \"$ref\": \"MyDot#/definitions/MedioPago\"",
                            "    }",
                            "",
                            "};",
                            "",
                            "",
                            "pm.test('JSON response can be decoded', function() {",
                            "",
                            "    var jsonData = pm.response.json();",
                            "",
                            "",
                            "    pm.test('Schema is valid', function() {",
                            "        let validates = tv4.validate(jsonData, schema);",
                            "        console.log(tv4.error);",
                            "        pm.expect(validates).to.be.true;",
                            "",
                            "    });",
                            "",
                            "",
                            "    pm.test('Schema is an array', function() {",
                            "        pm.expect(jsonData instanceof Array).to.be.true;",
                            "        pm.expect(jsonData.length > 0).to.be.true;",
                            "",
                            "",
                            "    });",
                            "    let response = _.mediospagoByActivos(jsonData,  pm.environment.get('idMediopagoDefault'));",
                            "",
                            "    _.each(response, (value, key) => {",
                            "        pm.environment.set(key, value);",
                            "    });",
                            "",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a8a629-e4ba-4235-b4b2-700246f5ae2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ]
                        }
                      }
                    ],
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "method_path": "GET|api|Cliente|:id|mediospago",
                    "method_path_multi": "GET|api|Cliente|:id|mediospago|1"
                  },
                  {
                    "id": "9e722b4f-fd2f-474d-9fa5-6a1bf6a0ceb7",
                    "name": "Agrega una entidad mediospago a un Cliente.",
                    "request": {
                      "name": "Agrega una entidad mediospago a un Cliente.",
                      "description": "Agrega una entidad mediospago a un Cliente.",
                      "url": {
                        "path": ["api","Cliente",":id","mediospago"],
                        "host": ["{{apidomain}}"],
                        "query": [],
                        "variable": [
                          {
                            "description": "id Único de Cliente",
                            "type": "any",
                            "value": "{{idCliente}}",
                            "key": "id"
                          }
                        ],
                        "raw": "{{apidomain}}/api/Cliente/:id/mediospago"
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "description": "Access token Oauth 2.0",
                          "key": "Authorization",
                          "value": "{{accessToken}}"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}"
                      }
                    },
                    "responses": [],
                    "event": [],
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "method_path": "POST|api|Cliente|:id|mediospago",
                    "method_path_multi": "POST|api|Cliente|:id|mediospago|2"
                  }
                ],
                "event": [],
                "method_path": "Cliente|:id|mediospago"
              },
              {
                "_": {
                  "postman_id": "7ba2467e-89a5-4d40-a7d0-db717022b195"
                },
                "id": "7ba2467e-89a5-4d40-a7d0-db717022b195",
                "name": "1_2_2_Muestra el Medio de Pago por defecto de un Cliente.",
                "request": {
                  "name": "Muestra el Medio de Pago por defecto de un Cliente.",
                  "description": "Muestra el Medio de Pago por defecto de un Cliente.",
                  "url": {
                    "path": ["api","Cliente",":id","mediopago_default"],
                    "host": ["{{apidomain}}"],
                    "query": [],
                    "variable": [
                      {
                        "description": "id Único de Cliente",
                        "type": "any",
                        "value": "{{idCliente}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Cliente/:id/mediopago_default"
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "disabled": true,
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ec07a99-5c6a-4d8b-9dbd-69c0953051cc",
                      "type": "text/javascript",
                      "exec": [
                        " let mediosPagoActivos = pm.environment.get('mediosPagoActivos') || [];",
                        " ",
                        "var schema = {",
                        "    \"$ref\": \"MyDot#/definitions/MedioPago\"",
                        "};",
                        "",
                        "",
                        "",
                        "",
                        "pm.test('JSON response can be decoded', function() {",
                        "    var jsonData = pm.response.json();",
                        "    pm.expect(jsonData.id).to.be.a('number');",
                        "",
                        "    pm.test('Schema is valid', function() {",
                        "        let isValid = tv4.validate(jsonData, schema);",
                        "        if (!isValid) {",
                        "            console.warn(tv4.error);",
                        "        }",
                        "        pm.expect(isValid).to.be.true;",
                        "",
                        "    });",
                        "     if (mediosPagoActivos.includes(jsonData.id)) {",
                        "        pm.environment.set('idMediopago', jsonData.id);",
                        "    }",
                        "    pm.test('medio de pago default '+jsonData.id+' is active',()=>{",
                        "       pm.expect(jsonData.idEstado).to.eq(1);",
                        "       pm.environment.set('idMediopagoDefault',jsonData.id);",
                        "    });",
                        "        ",
                        "    ",
                        "});"
                      ]
                    }
                  }
                ],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Cliente|:id|mediopago_default",
                "method_path_multi": "GET|api|Cliente|:id|mediopago_default|1"
              },
              {
                "_": {
                  "postman_isSubFolder": true
                },
                "id": "1eb8e30f-6137-4b7b-a119-814b8be2bc1c",
                "name": "pedidos",
                "item": [
                  {
                    "_": {
                      "postman_isSubFolder": true
                    },
                    "id": "3391912b-dfbd-4718-b0e5-a4c969036a26",
                    "name": "{fk}",
                    "item": [
                      {
                        "_": {
                          "postman_id": "0686c317-250d-41e7-823b-f3d19f4fc1e6"
                        },
                        "id": "0686c317-250d-41e7-823b-f3d19f4fc1e6",
                        "name": "4_1_2_Buscar pedido por id",
                        "request": {
                          "name": "Buscar pedidos de un Cliente.",
                          "description": "Buscar pedidos de un Cliente.",
                          "url": {
                            "path": ["api","Cliente",":id","pedidos",":fk"],
                            "host": ["{{apidomain}}"],
                            "query": [],
                            "variable": [
                              {
                                "description": "id Único de Cliente",
                                "type": "any",
                                "value": "{{idCliente}}",
                                "key": "id"
                              },
                              {
                                "description": "id Único de Pedidos",
                                "type": "any",
                                "value": "{{idPedidos}}",
                                "key": "fk"
                              }
                            ],
                            "raw": "{{apidomain}}/api/Cliente/:id/pedidos/:fk"
                          },
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            },
                            {
                              "description": " ",
                              "key": "Authorization",
                              "value": "{{accessToken}}"
                            },
                            {
                              "description": "Access token Oauth 2.0",
                              "key": "Authorization",
                              "value": "{{accessToken}}"
                            }
                          ],
                          "method": "GET",
                          "body": {}
                        },
                        "responses": [],
                        "event": [
                          {
                            "listen": "test",
                            "script": {
                              "id": "16dc05e8-a8a8-43e0-97bd-596112a6c94b",
                              "type": "text/javascript",
                              "exec": [
                                "var schema = {",
                                "    \"$ref\": \"MyDot#/definitions/Pedido\"",
                                "",
                                "};",
                                "",
                                "",
                                "",
                                "",
                                "pm.test('JSON response can be decoded and is an object', function() {",
                                "    var jsonData = pm.response.json();",
                                "",
                                "    pm.expect(jsonData).to.be.a('object');",
                                "    ",
                                "    let {boton,cliente,estado,direccion,mediopago,transaccion,productos,costo,...pedido}=jsonData;",
                                "",
                                "    pm.test('Schema is valid', function() {",
                                "        let validates = tv4.validate(pedido, schema);",
                                "        console.log(tv4.error);",
                                "        pm.expect(validates).to.be.true;",
                                "    });",
                                "",
                                "    pm.test('pedido.transaccion is a number', function() {",
                                "",
                                "",
                                "        let {",
                                "            id: transactionId,",
                                "            idProducto,",
                                "            idMediopago,",
                                "            idDireccion,",
                                "            estado,",
                                "            direccion,",
                                "            mediopago,",
                                "            transaccion,",
                                "            productos",
                                "        } = jsonData;",
                                "        pm.expect( transactionId).to.be.a('number');",
                                "",
                                "",
                                "        pm.environment.set('idTransaccion', transactionId);",
                                "    });",
                                "});"
                              ]
                            }
                          }
                        ],
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "method_path": "GET|api|Cliente|:id|pedidos|:fk",
                        "method_path_multi": "GET|api|Cliente|:id|pedidos|:fk|1"
                      },
                      {
                        "_": {
                          "postman_id": "b8950333-ef71-4de3-abb2-aa1fddb3ee43"
                        },
                        "id": "b8950333-ef71-4de3-abb2-aa1fddb3ee43",
                        "name": "4_1_3_Cancela pedido de un cliente",
                        "request": {
                          "name": "Suprimir pedidos de un Cliente.",
                          "description": "Suprimir pedidos de un Cliente.",
                          "url": {
                            "path": ["api","Cliente",":id","pedidos",":fk"],
                            "host": ["{{apidomain}}"],
                            "query": [],
                            "variable": [
                              {
                                "description": "id Único de Cliente",
                                "type": "any",
                                "value": "{{idCliente}}",
                                "key": "id"
                              },
                              {
                                "description": "id Único de Pedidos",
                                "type": "any",
                                "value": "{{idPedidos}}",
                                "key": "fk"
                              }
                            ],
                            "raw": "{{apidomain}}/api/Cliente/:id/pedidos/:fk"
                          },
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            },
                            {
                              "description": " ",
                              "key": "Authorization",
                              "value": "{{accessToken}}"
                            },
                            {
                              "description": "Access token Oauth 2.0",
                              "key": "Authorization",
                              "value": "{{accessToken}}"
                            }
                          ],
                          "method": "DELETE",
                          "body": {}
                        },
                        "responses": [],
                        "event": [
                          {
                            "listen": "test",
                            "script": {
                              "id": "bbbd789e-1a7e-41ff-a276-e8fdf39a8395",
                              "type": "text/javascript",
                              "exec": [
                                "pm.test('JSON response has pedido and transaccion', function() {",
                                "    var jsonData = pm.response.json(),",
                                "        isObject = typeof jsonData === 'object';",
                                "",
                                "    pm.expect(isObject).to.be.true;",
                                "    let {",
                                "        pedido, transaccion",
                                "    } = jsonData;",
                                "",
                                "    pm.expect(typeof pedido).to.eq('object');",
                                "    pm.expect(typeof transaccion).to.eq('object');",
                                "    pm.expect(transaccion.status).to.eq('Anulada');",
                                "",
                                "    pm.environment.set('idPedidoFinalizado', pedido.id);",
                                "",
                                "});"
                              ]
                            }
                          }
                        ],
                        "protocolProfileBehavior": {
                          "disableBodyPruning": true
                        },
                        "method_path": "DELETE|api|Cliente|:id|pedidos|:fk",
                        "method_path_multi": "DELETE|api|Cliente|:id|pedidos|:fk|2"
                      }
                    ],
                    "event": [],
                    "method_path": "Cliente|:id|pedidos|:fk"
                  },
                  {
                    "_": {
                      "postman_id": "43a57c5c-9e81-4cfa-b115-cb6174ec38ce"
                    },
                    "id": "43a57c5c-9e81-4cfa-b115-cb6174ec38ce",
                    "name": "4_1_1_Lista pedidos de un Cliente.",
                    "request": {
                      "name": "Lista pedidos de un Cliente.",
                      "description": "Lista pedidos de un Cliente.",
                      "url": {
                        "path": ["api","Cliente",":id","pedidos"],
                        "host": ["{{apidomain}}"],
                        "query": [
                          {
                            "description": "Opcional, filtro en forma de String JSON encoded",
                            "key": "filter",
                            "value": "{{filter}}"
                          }
                        ],
                        "variable": [
                          {
                            "description": "id Único de Cliente",
                            "type": "any",
                            "value": "{{idCliente}}",
                            "key": "id"
                          }
                        ],
                        "raw": "{{apidomain}}/api/Cliente/:id/pedidos"
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "description": " ",
                          "key": "Authorization",
                          "value": "{{accessToken}}"
                        },
                        {
                          "description": "Access token Oauth 2.0",
                          "key": "Authorization",
                          "value": "{{accessToken}}"
                        }
                      ],
                      "method": "GET",
                      "body": {}
                    },
                    "responses": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e83d173-bb84-4435-8c4d-efb9a568cdf4",
                          "type": "text/javascript",
                          "exec": [
                            "var schema = {",
                            "        \"items\": {",
                            "            \"$ref\": \"MyDot#/definitions/Pedido\"",
                            "        }",
                            "    },",
                            "    pedidoSchema = {",
                            "        \"$ref\": \"MyDot#/definitions/Pedido\"",
                            "",
                            "    };",
                            "",
                            "",
                            "pm.test('JSON response can be decoded and is an array', function() {",
                            "    var jsonData = pm.response.json(),",
                            "        isArray = jsonData instanceof Array;",
                            "    pm.expect(isArray).to.be.true;",
                            "",
                            " ",
                            "    let pedidosVigentes = jsonData.filter(pedido => {",
                            "         return pedido.idDireccion !== null && pedido.idMediopago !== null && pedido.estado.soloEstadoFinal === 0;",
                            "    }).map(pedido => {",
                            "        let {",
                            "            estado, ...cleanPedido",
                            "        } = pedido;",
                            "        return cleanPedido;",
                            "    });",
                            "",
                            "    pm.test('Schema is valid', function() {",
                            "        let validates = tv4.validate(pedidosVigentes, schema);",
                            "        console.log(tv4.error);",
                            "        pm.expect(validates).to.be.true;",
                            "    });",
                            "",
                            "    pm.test('Latest pedido is valid', function() {",
                            "",
                            "        let pedido = pedidosVigentes[0];",
                            "        console.log({pedidosVigentes, pedido});",
                            "        let validates = tv4.validate(pedido, pedidoSchema);",
                            "        console.log(tv4.error);",
                            "        pm.expect(validates).to.be.true;",
                            "",
                            "",
                            "        pm.environment.set('idPedido', pedido.id);",
                            "    });",
                            "});"
                          ]
                        }
                      }
                    ],
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "method_path": "GET|api|Cliente|:id|pedidos",
                    "method_path_multi": "GET|api|Cliente|:id|pedidos|1"
                  },
                  {
                    "_": {
                      "postman_id": "ab9002ad-ab60-4cc0-b06b-e01e712b557f"
                    },
                    "id": "ab9002ad-ab60-4cc0-b06b-e01e712b557f",
                    "name": "4_1_0_Agrega una entidad pedidos a un Cliente.",
                    "request": {
                      "name": "Agrega una entidad pedidos a un Cliente.",
                      "description": "Agrega una entidad pedidos a un Cliente.",
                      "url": {
                        "path": ["api","Cliente",":id","pedidos"],
                        "host": ["{{apidomain}}"],
                        "query": [],
                        "variable": [
                          {
                            "description": "id Único de Cliente",
                            "type": "any",
                            "value": "{{idCliente}}",
                            "key": "id"
                          }
                        ],
                        "raw": "{{apidomain}}/api/Cliente/:id/pedidos"
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "disabled": true,
                          "description": " ",
                          "key": "Authorization",
                          "value": "{{accessToken}}"
                        },
                        {
                          "disabled": true,
                          "key": "",
                          "value": "{{idMe"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}"
                      }
                    },
                    "responses": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438722e8-145e-4a72-a212-b694749ee212",
                          "type": "text/javascript",
                          "exec": [
                            "var schema = {",
                            "        \"items\": {",
                            "            \"$ref\": \"MyDot#/definitions/Pedido\"",
                            "        }",
                            "    },",
                            "    pedidoSchema = {",
                            "        \"$ref\": \"MyDot#/definitions/Pedido\"",
                            "",
                            "    };",
                            "",
                            "pm.test('Schema is valid', function() {",
                            "    let {productos,mediopago,transaccion,authorizationCode,...pedido}=pm.response.json(),",
                            "     validates = tv4.validate(pedido, pedidoSchema);",
                            "    if (!validates) {",
                            "        console.log(tv4.error);",
                            "    }",
                            "    pm.expect(validates).to.be.true;",
                            "});",
                            "",
                            "",
                            "pm.test('Status code is 200', function() {",
                            "    pm.response.to.have.status(200);",
                            "",
                            "",
                            "    pm.test('Content-Type is application/json', function() {",
                            "",
                            "        pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
                            "",
                            "",
                            "        pm.test('JSON response can be decoded', function() {",
                            "            var jsonData = pm.response.json(),",
                            "                isNumber = typeof jsonData.id === 'number';",
                            "",
                            "            pm.expect(isNumber).to.be.true;",
                            "            pm.environment.set('idPedido', jsonData.id);",
                            "        });",
                            "",
                            "",
                            "    });",
                            "",
                            "});"
                          ]
                        }
                      }
                    ],
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "method_path": "POST|api|Cliente|:id|pedidos",
                    "method_path_multi": "POST|api|Cliente|:id|pedidos|2"
                  }
                ],
                "event": [],
                "method_path": "Cliente|:id|pedidos"
              },
              {
                "_": {
                  "postman_isSubFolder": true
                },
                "id": "484d7a63-ba16-4b59-8a06-8d90a52dbec9",
                "name": "transacciones_webpay",
                "item": [
                  {
                    "_": {
                      "postman_id": "4935834a-bdc0-4cd0-a91e-ad49e11bc204"
                    },
                    "id": "4935834a-bdc0-4cd0-a91e-ad49e11bc204",
                    "name": "1_3_1_Busca una transacción por {idTransaccion}",
                    "request": {
                      "name": "Buscar transacciones_webpay de un Cliente.",
                      "description": "Buscar transacciones_webpay de un Cliente.",
                      "url": {
                        "path": ["api","Cliente",":id","transacciones_webpay",":fk"],
                        "host": ["{{apidomain}}"],
                        "query": [],
                        "variable": [
                          {
                            "description": "id Único de Cliente",
                            "type": "any",
                            "value": "{{idCliente}}",
                            "key": "id"
                          },
                          {
                            "description": "id Único de Transacciones Webpay",
                            "type": "any",
                            "value": "{{idTransaccionesWebpay}}",
                            "key": "fk"
                          }
                        ],
                        "raw": "{{apidomain}}/api/Cliente/:id/transacciones_webpay/:fk"
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "description": "Access token Oauth 2.0",
                          "key": "Authorization",
                          "value": "{{accessToken}}"
                        }
                      ],
                      "method": "GET",
                      "body": {}
                    },
                    "responses": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac664061-549b-4a98-bb53-497d98b8ede3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set('expectError','any');",
                            "pm.variables.set('expectHeaders',[200,301,304,401,404]);",
                            "let filter={",
                            "    include:['pedido']",
                            "};",
                            "filter={\"include\":[\"transaccion\"]};",
                            "pm.environment.set('transaccionFilter',JSON.stringify(filter));"
                          ]
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b2ae72-75c8-4b47-b664-30113de117e2",
                          "type": "text/javascript",
                          "exec": [
                            "    pm.test('JSON response can be decoded', () => {",
                            "        if (pm.response.code < 400) {",
                            "",
                            "            pm.test('Response is an object', function() {",
                            "                var transaccion = pm.response.json();",
                            "                pm.expect(typeof transaccion.id === 'number').to.be.true;",
                            "                pm.environment.set('idTransaccion', transaccion.id);",
                            "            });",
                            "        } else {",
                            "            pm.test('Requesting a missing transaccion should throw an error', function() {",
                            "                var error = pm.response.json();",
                            "                pm.expect(error.name).to.be.a('string');",
                            "            });",
                            "        }",
                            "    });"
                          ]
                        }
                      }
                    ],
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "method_path": "GET|api|Cliente|:id|transacciones_webpay|:fk",
                    "method_path_multi": "GET|api|Cliente|:id|transacciones_webpay|:fk|1"
                  },
                  {
                    "_": {
                      "postman_id": "0b331bce-d77f-4c82-a03b-92b97d317c19"
                    },
                    "id": "0b331bce-d77f-4c82-a03b-92b97d317c19",
                    "name": "1_3_0_Lista transacciones_webpay de un Cliente.",
                    "request": {
                      "name": "Lista transacciones_webpay de un Cliente.",
                      "description": "Lista transacciones_webpay de un Cliente.",
                      "url": {
                        "path": ["api","Cliente",":id","transacciones_webpay"],
                        "host": ["{{apidomain}}"],
                        "query": [
                          {
                            "description": "Opcional, filtro en forma de String JSON encoded",
                            "key": "filter",
                            "value": "{{filter}}"
                          }
                        ],
                        "variable": [
                          {
                            "description": "id Único de Cliente",
                            "type": "any",
                            "value": "{{idCliente}}",
                            "key": "id"
                          }
                        ],
                        "raw": "{{apidomain}}/api/Cliente/:id/transacciones_webpay"
                      },
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "description": "Access token Oauth 2.0",
                          "key": "Authorization",
                          "value": "{{accessToken}}"
                        }
                      ],
                      "method": "GET",
                      "body": {}
                    },
                    "responses": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3126d522-5d0e-4cca-8944-2cbd785e568e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test('JSON response can be decoded and is an array', function() {",
                            "    var transacciones = pm.response.json();",
                            "",
                            "    pm.expect(transacciones instanceof Array).to.be.true;",
                            "",
                            "",
                            "    pm.expect(transacciones.length > 0).to.be.true;",
                            "    let transaccion = transacciones.pop();",
                            "    pm.expect(typeof transaccion.id === 'number').to.be.true;",
                            "",
                            "",
                            "    pm.environment.set('idTransaccion', transaccion.id);",
                            "});"
                          ]
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcdd9a3-23c0-4247-8024-246b305ae46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set('expectError','any')"
                          ]
                        }
                      }
                    ],
                    "protocolProfileBehavior": {
                      "disableBodyPruning": true
                    },
                    "method_path": "GET|api|Cliente|:id|transacciones_webpay",
                    "method_path_multi": "GET|api|Cliente|:id|transacciones_webpay|1"
                  }
                ],
                "event": [],
                "method_path": "Cliente|:id|transacciones_webpay"
              },
              {
                "_": {
                  "postman_id": "cdc3ee3b-901f-41d5-a3bd-f6bc5859d04c"
                },
                "id": "cdc3ee3b-901f-41d5-a3bd-f6bc5859d04c",
                "name": "9_11_Gatilla la verificación de la cuenta de usuario",
                "request": {
                  "name": "Gatilla la verificación de la cuenta de usuario",
                  "description": "Gatilla la verificación de la cuenta de usuario",
                  "url": {
                    "path": ["api","Cliente",":id","verify"],
                    "host": ["{{apidomain}}"],
                    "query": [],
                    "variable": [
                      {
                        "description": "id Único de Cliente",
                        "type": "any",
                        "value": "{{idCliente}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Cliente/:id/verify"
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "POST",
                  "body": {}
                },
                "responses": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45071001-c8b4-4cf3-ae82-52c599f03b16",
                      "type": "text/javascript",
                      "exec": [
                        " ",
                        "",
                        "pm.test('Status code is 200', function () {",
                        "    pm.response.to.have.status(200);",
                        "",
                        "    pm.test('Content-Type is application/json', function () {",
                        "        ",
                        "       pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
                        "        ",
                        "        pm.test('JSON response can be decoded ', function () {",
                        "            var jsonData = pm.response.json();",
                        "            pm.expect(jsonData).to.be.a('object');",
                        "            ",
                        "            pm.test('JSON response has id', function () {",
                        "                console.log('id:' +  jsonData.id);",
                        "                pm.expect(typeof jsonData.verificationToken).to.eql('string');",
                        "                pm.environment.set('verificationToken', jsonData.verificationToken);",
                        "                ",
                        "               ",
                        "                ",
                        "            });",
                        "        });",
                        "    });",
                        "});",
                        ""
                      ]
                    }
                  }
                ],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "POST|api|Cliente|:id|verify",
                "method_path_multi": "POST|api|Cliente|:id|verify|1"
              },
              {
                "_": {
                  "postman_id": "fc109233-9460-4d3b-940f-9ff8f79de60e"
                },
                "id": "fc109233-9460-4d3b-940f-9ff8f79de60e",
                "name": "1_0_2_Lista mis datos como cliente",
                "request": {
                  "name": "Encuentra un Cliente por {{id}} en la BBDD.",
                  "description": "Encuentra un Cliente por {{id}} en la BBDD.",
                  "url": {
                    "path": ["api","Cliente",":id"],
                    "host": ["{{apidomain}}"],
                    "query": [
                      {
                        "description": "Opcional, filtro en forma de String JSON encoded",
                        "key": "filter",
                        "value": "{{filter}}"
                      }
                    ],
                    "variable": [
                      {
                        "description": "id Único de Cliente",
                        "type": "any",
                        "value": "{{idCliente}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Cliente/:id"
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1dbda77-043c-483b-87b0-2ae26e0876b5",
                      "type": "text/javascript",
                      "exec": [
                        " pm.test('JSON response can be decoded ', function() {",
                        "     var jsonData = pm.response.json();",
                        "     pm.expect(jsonData).to.be.a('object');",
                        "",
                        "     pm.test('JSON response has id', function() {",
                        "         console.log('id:' + jsonData.id);",
                        "         pm.expect(jsonData.id).to.be.a('number');",
                        "         pm.environment.set('idCliente', jsonData.id);",
                        "     });",
                        "",
                        "     pm.test('JSON response has acess_token', function() {",
                        "",
                        "         let typeofAccessToken = typeof jsonData.access_token;",
                        "         pm.expect(typeofAccessToken).to.eql('string');",
                        "",
                        "         pm.environment.set('tokenCliente', jsonData.access_token);",
                        "         pm.environment.set('bearerToken', btoa(jsonData.access_token));",
                        "         pm.environment.set('accessToken', jsonData.access_token);",
                        "     });",
                        "",
                        "",
                        "     let mediopago_response = _.mediospagoByActivos(",
                        "         jsonData.mediospago, jsonData.id_mediopago_default",
                        "     );",
                        "",
                        "     _.each(mediopago_response, (value, key) => {",
                        "         if (value) {",
                        "             pm.environment.set(key, value);",
                        "         }",
                        "     });",
                        "",
                        "     let direccionObj = _.direccionesByBorrables(",
                        "         jsonData.direcciones,",
                        "         jsonData.id_direccion_default,",
                        "         {verbose:true}",
                        "     );",
                        "     pm.environment.set('direccionObj',direccionObj);",
                        "     ",
                        "",
                        " });"
                      ]
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "140e2ac3-6d02-4fcb-8d77-593bf633dd6c",
                      "type": "text/javascript",
                      "exec": [
                        "let filter = {",
                        "    include: [{",
                        "        relation: 'botones',",
                        "        scope: {",
                        "            fields: ['id', 'idEstado','idDireccion','idMediopago'],",
                        "        }",
                        "    }, {",
                        "        relation: 'mediospago',",
                        "        scope: {",
                        "            fields: ['id', 'idEstado'],",
                        "            include: {",
                        "                relation: 'botones',",
                        "                scope: {",
                        "                    fields: ['id', 'idDireccion','idMediopago'],",
                        "                }",
                        "            }",
                        "        }",
                        "    }, {",
                        "        relation: 'direcciones',",
                        "        scope: {",
                        "            fields: ['id',  'conCobertura'],",
                        "            include: {",
                        "                relation: 'botones',",
                        "                scope: {",
                        "                    fields: ['id', 'idDireccion','idMediopago'],",
                        "                }",
                        "            }",
                        "        }",
                        "    }]",
                        "};",
                        "let filter2 = {",
                        "    include: ['botones', 'direcciones', 'mediospago']",
                        "};",
                        "//pm.variables.set('filter',JSON.stringify(filter));",
                        "pm.variables.set('filter', JSON.stringify(filter));"
                      ]
                    }
                  }
                ],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Cliente|:id",
                "method_path_multi": "GET|api|Cliente|:id|1"
              },
              {
                "_": {
                  "postman_id": "e17c7e47-bed6-438c-9455-b9ed368303f7"
                },
                "id": "e17c7e47-bed6-438c-9455-b9ed368303f7",
                "name": "1_5_Modifica o crea un Cliente y persiste en BBDD.",
                "request": {
                  "name": "Modifica o crea un Cliente y persiste en BBDD.",
                  "description": "Modifica o crea un Cliente y persiste en BBDD.",
                  "url": {
                    "path": ["api","Cliente",":id"],
                    "host": ["{{apidomain}}"],
                    "query": [],
                    "variable": [
                      {
                        "description": "id Único de Cliente",
                        "type": "any",
                        "value": "{{idCliente}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Cliente/:id"
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "disabled": true,
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "PATCH",
                  "body": {
                    "mode": "raw",
                    "raw": "{\"nombre\":\"Felipe\",\"apellido\":\"Figueroa\",\"id_direccion_default\":\"{{direccionObj.id}}\",\"id_mediopago_default\":\"{{idMediopago}}\",\"despachoGratis\":0,\"rut\":\"132331979\"}"
                  }
                },
                "responses": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c0ae070-c5a2-4066-99df-a0359d71f781",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ]
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "173e08b0-0c36-4532-9601-5e7207322902",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ]
                    }
                  }
                ],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "PATCH|api|Cliente|:id",
                "method_path_multi": "PATCH|api|Cliente|:id|2"
              }
            ],
            "event": [],
            "method_path": "Cliente|:id"
          },
          {
            "_": {
              "postman_id": "04a2fd88-340a-4493-b5a3-f535058214de"
            },
            "id": "04a2fd88-340a-4493-b5a3-f535058214de",
            "name": "9_10_Cliente (8) Inicia sesión usando email y password",
            "request": {
              "name": "Cliente Inicia sesión usando email y password.",
              "description": "Cliente Inicia sesión usando email y password.",
              "url": {
                "path": ["api","Cliente","login"],
                "host": ["{{apidomain}}"],
                "query": [
                  {
                    "description": "Opcional, especifica campos relacionados",
                    "key": "include",
                    "value": "{{include}}"
                  }
                ],
                "variable": [],
                "raw": "{{apidomain}}/api/Cliente/login"
              },
              "header": [
                {
                  "name": "Content-Type",
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\"email\":\"{{emailCliente}}\",\"password\":\"{{passwordCliente}}\"}"
              }
            },
            "responses": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "8046bb93-8497-4ed2-b505-4ac13c7ce712",
                  "type": "text/javascript",
                  "exec": [
                    "var jsonData = JSON.parse(responseBody);",
                    "pm.environment.set('tokenCliente', jsonData.id);",
                    "pm.environment.set('bearerToken', btoa(jsonData.id));",
                    "pm.environment.set('accessToken', jsonData.id);",
                    "pm.environment.set('idCliente', jsonData.userId);",
                    "pm.test('Status code is 200', function () {",
                    "    pm.response.to.have.status(200);",
                    "});"
                  ]
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "POST|api|Cliente|login",
            "method_path_multi": "POST|api|Cliente|login|1"
          },
          {
            "_": {
              "postman_id": "0013d09b-7a9e-40fd-898f-8f4fcee136ea"
            },
            "id": "0013d09b-7a9e-40fd-898f-8f4fcee136ea",
            "name": "9_6_Cliente autenticado cierra sesión",
            "request": {
              "name": "Cliente Cierra sesión. Requiere AccessToken.",
              "description": "Cliente Cierra sesión. Requiere AccessToken.",
              "url": {
                "path": ["api","Cliente","logout"],
                "host": ["{{apidomain}}"],
                "query": [],
                "variable": [],
                "raw": "{{apidomain}}/api/Cliente/logout"
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "{{wrongToken}}"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "POST",
              "body": {}
            },
            "responses": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "748d913d-5137-4e4e-8cd2-f2679e5ca463",
                  "type": "text/javascript",
                  "exec": [
                    "pm.variables.set('wrongToken','wrongToken');",
                    "pm.variables.set('expectError',true);",
                    "pm.variables.set('expectHeaders',[204,401]);",
                    "",
                    "pm.variables.set('originalToken', pm.environment.get('accessToken'));",
                    "pm.environment.set('bearerToken', btoa('wrongToken'));",
                    "pm.environment.set('accessToken', btoa('wrongToken'));"
                  ]
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "985b04ba-b2c7-4754-a736-121598938860",
                  "type": "text/javascript",
                  "exec": [
                    "let accessToken= pm.variables.get('originalToken');",
                    "pm.variables.unset('originalToken');",
                    "pm.environment.set('accessToken', accessToken);",
                    "pm.environment.set('bearerToken', btoa(accessToken));",
                    ""
                  ]
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "POST|api|Cliente|logout",
            "method_path_multi": "POST|api|Cliente|logout|1"
          },
          {
            "_": {
              "postman_id": "e4614eff-2932-47e8-8064-6595e1c729de"
            },
            "id": "e4614eff-2932-47e8-8064-6595e1c729de",
            "name": "9_4_Cliente Confirma registro siguiendo un link.",
            "request": {
              "name": "Cliente Confirma registro siguiendo un link.",
              "description": "Opcionalmente se puede redirigir al usuario a otra URL",
              "url": {
                "path": ["api","Cliente","confirm"],
                "host": ["{{apidomain}}"],
                "query": [
                  {
                    "key": "uid",
                    "value": "{{uid}}"
                  },
                  {
                    "key": "token",
                    "value": "{{token}}"
                  },
                  {
                    "key": "redirect",
                    "value": "{{redirect}}"
                  }
                ],
                "variable": [],
                "raw": "{{apidomain}}/api/Cliente/confirm"
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "GET",
              "body": {}
            },
            "responses": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f216583d-334d-4076-a763-978e5104fec1",
                  "type": "text/javascript",
                  "exec": [
                    " pm.environment.set('redirect',\"{{api_test_url}}\"+\"/confirmacion_exitosa\");",
                    ""
                  ]
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "GET|api|Cliente|confirm",
            "method_path_multi": "GET|api|Cliente|confirm|1"
          },
          {
            "_": {
              "postman_id": "389f0906-242f-4257-82c4-39539f051fae"
            },
            "id": "389f0906-242f-4257-82c4-39539f051fae",
            "name": "1_6_Cliente Solicita restablecer contraseña enviando su dirección de email",
            "request": {
              "name": "Reset password for a user with email.",
              "description": "Este endpoint espera el email de un cliente válido. a quien se enviará un link que contiene un token de **autenticación temporal**\n\nPinchando ese link llegaría a un formulario en la App en donde puede escribir su nueva contraseña.\n\nSi se exige la activación de cuentas, este endpoint arrojará error a los usuarios que no siguieron el link de activación previamente.",
              "url": {
                "path": ["api","Cliente","reset"],
                "host": ["{{apidomain}}"],
                "query": [],
                "variable": [],
                "raw": "{{apidomain}}/api/Cliente/reset"
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\"email\":\"{{emailCliente8}}\",\"dryRun\":true}"
              }
            },
            "responses": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "2059c6e8-743d-4538-92c8-666bee942ca7",
                  "type": "text/javascript",
                  "exec": [
                    "",
                    "",
                    "",
                    "",
                    "pm.test('JSON response can be decoded ', function() {",
                    "    var jsonData = pm.response.json();",
                    "    pm.expect(jsonData).to.be.a('object');",
                    "",
                    "    pm.test('JSON response has idCliente', function() {",
                    "        console.log('idCliente:' + jsonData.idCliente);",
                    "        pm.expect(jsonData.idCliente).to.be.a('number');",
                    "        pm.expect(jsonData.email||jsonData.sentToEmail).to.be.a('string');",
                    "",
                    "     ",
                    "",
                    "        ",
                    "",
                    "    });",
                    "});",
                    "",
                    "let testsCarpeta = pm.variables.get('testsCarpeta');",
                    "console.log('============== FIN CARPETA Cliente con ' + testsCarpeta + ' tests ===================');",
                    ""
                  ]
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "d59d94cd-d127-44f6-aba0-b03d360511c8",
                  "type": "text/javascript",
                  "exec": [
                    "var emailCliente8 =   pm.environment.get('emailCliente8'),",
                    "    passwordCliente8 =  pm.environment.get('passwordCliente8');",
                    " ",
                    " ",
                    "if (pm.cookies.has('access_token')) {",
                    "    pm.cookies.unset('access_token');",
                    "}"
                  ]
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "POST|api|Cliente|reset",
            "method_path_multi": "POST|api|Cliente|reset|1"
          },
          {
            "_": {
              "postman_id": "c453fad2-110e-4284-a189-090f30d51124"
            },
            "id": "c453fad2-110e-4284-a189-090f30d51124",
            "name": "9_8_Cliente logueado cambia su contraseña en un formulario",
            "request": {
              "name": "Cambia el password de un usuario.",
              "description": "Para implementar la funcionalidad de que el cliente modificara su contraseña, \n\neste endpoint debiera ser utilizado por un formularoi en donde un cliente\n\n**autenticado normalmente**  confirme su contraseña actual y escriba la nueva.\n\n(La implementación de Front definirá si debe pedírsele que repita la nueva contraseña)",
              "url": {
                "path": ["api","Cliente","change-password"],
                "host": ["{{apidomain}}"],
                "query": [],
                "variable": [],
                "raw": "{{apidomain}}/api/Cliente/change-password"
              },
              "header": [
                {
                  "name": "Content-Type",
                  "key": "Content-Type",
                  "value": "application/x-www-form-urlencoded"
                },
                {
                  "description": " ",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "urlencoded",
                "urlencoded": [
                  {
                    "key": "oldPassword",
                    "value": "{{oldPassword}}"
                  },
                  {
                    "key": "newPassword",
                    "value": "{{newPassword}}"
                  }
                ]
              }
            },
            "responses": [],
            "event": [],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "POST|api|Cliente|change-password",
            "method_path_multi": "POST|api|Cliente|change-password|1"
          },
          {
            "_": {
              "postman_id": "36e822d8-7718-4d03-8e88-74ff9d421fbe"
            },
            "id": "36e822d8-7718-4d03-8e88-74ff9d421fbe",
            "name": "9_7_Restablece contraseña usando un token temporal",
            "request": {
              "name": "Cliente Restablece password de un usuario mediante correoy link único.",
              "description": "Este endpoint permitiría implementar el flujo de recuperar contraseña.\n\nEl usuario habría seguido un link de recuperación de contraseña enviado a su correo.\n\nAl pincharlo, llega a una pantalla en donde está **autenticado temporalmente.**\n\nEn esa pantalla puede escribir su nueva contraseña y enviarla al presente endpoint para persirtirla\n\nEsta pantalla no debe mostrarse a un usuario que está **autenticado normalmente** dado que se presta para uso malicioso.",
              "url": {
                "path": ["api","Cliente","reset-password"],
                "host": ["{{apidomain}}"],
                "query": [],
                "variable": [],
                "raw": "{{apidomain}}/api/Cliente/reset-password"
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": " ",
                  "key": "Authorization",
                  "value": "{{authorizationToken}}"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "urlencoded",
                "urlencoded": [
                  {
                    "key": "newPassword",
                    "value": "{{newPassword}}"
                  }
                ]
              }
            },
            "responses": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "386ef124-b8b5-4ff9-8312-b93783a902a1",
                  "type": "text/javascript",
                  "exec": [
                    "let currentUser=pm.variables.get('currentUser'),",
                    "    clientesObject = pm.variables.get('clientesObject');",
                    "    ",
                    "",
                    "pm.test('Status code is 204', function () {",
                    "    pm.response.to.have.status(204);",
                    "});",
                    "",
                    "pm.test('CurrentUser has been populated', function () {",
                    "    pm.expect(typeof currentUser).to.eql('object');",
                    "    pm.expect(typeof currentUser.idCliente).to.eql('number');",
                    "    currentUser.pass = pm.variables.get('newPassword');",
                    "    pm.environment.set('idCliente', currentUser.idCliente);   ",
                    "    pm.environment.set('currentUser', ( currentUser ));   ",
                    "    pm.environment.set('clientesObject', ( clientesObject )); ",
                    "});",
                    ""
                  ]
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "e761f04a-3362-4daa-9299-488540d23e38",
                  "type": "text/javascript",
                  "exec": [
                    "",
                    "",
                    "var currentUser = pm.variables.get('currentUser'),",
                    "    newPassword = currentUser.pass || pm.environment.get('passwordCliente1');",
                    "",
                    "currentUser.pass = newPassword;",
                    "pm.variables.set('currentUser',currentUser);",
                    "pm.variables.set('currentUserMail',currentUser.email);",
                    "pm.variables.set('newPassword',newPassword);",
                    "",
                    "",
                    ""
                  ]
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "POST|api|Cliente|reset-password",
            "method_path_multi": "POST|api|Cliente|reset-password|1"
          },
          {
            "_": {
              "postman_isSubFolder": true
            },
            "id": "aa51f638-c079-4790-8b4e-511ba89638fc",
            "name": "isButtonClaimed",
            "item": [
              {
                "_": {
                  "postman_id": "7e7763a6-fa6b-4d7e-88f7-38234d35dcd4"
                },
                "id": "7e7763a6-fa6b-4d7e-88f7-38234d35dcd4",
                "name": "2_1_3_Verifica si un botón ya ha sido inscrito por este u otro cliente",
                "request": {
                  "name": "Verifica si un botón ya ha sido inscrito por este u otro cliente",
                  "description": "**Deprecation Notice** Dado que un llamado a `GET api/Boton/{idBoton}` cumple la misma función que\n\neste método custom, se considera redundante y será removido en futuras versiones.",
                  "url": {
                    "path": ["api","Cliente","isButtonClaimed",":idBoton"],
                    "host": ["{{apidomain}}"],
                    "query": [],
                    "variable": [
                      {
                        "type": "any",
                        "key": "idBoton"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Cliente/isButtonClaimed/:idBoton"
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": " ",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Cliente|isButtonClaimed|:idBoton",
                "method_path_multi": "GET|api|Cliente|isButtonClaimed|:idBoton|1"
              }
            ],
            "event": [],
            "method_path": "Cliente|isButtonClaimed"
          },
          {
            "_": {
              "postman_isSubFolder": true
            },
            "id": "9a4e3e27-a57b-404f-8a8f-8bbcc9855dab",
            "name": "ventanasDireccion",
            "item": [
              {
                "_": {
                  "postman_id": "0e772114-ab40-463d-9972-c219f8dd1a5a"
                },
                "id": "0e772114-ab40-463d-9972-c219f8dd1a5a",
                "name": "4_3_1_Lista ventanas horarias con el costo de despacho para una dirección específica",
                "request": {
                  "name": "Lista ventanas horarias con el costo de despacho para una dirección específica",
                  "description": "**Deprecation Notice** Sólo la ventana horaria de despacho express está disponible. \n\nEste endpoint ha sido descontinuado y puede ser removido en futuras versiones\n\nLa lista de direcciones `GET /api/Cliente/{idCliente}/direcciones` ahora incluye el costo de despacho",
                  "url": {
                    "path": ["api","Cliente","ventanasDireccion",":idDireccion"],
                    "host": ["{{apidomain}}"],
                    "query": [],
                    "variable": [
                      {
                        "type": "any",
                        "key": "idDireccion"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Cliente/ventanasDireccion/:idDireccion"
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": " ",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c118cb28-819a-40c5-b32f-ca303c6b8478",
                      "type": "text/javascript",
                      "exec": [
                        "let direccionObj = pm.environment.get('direccionObj');",
                        "",
                        "if (!direccionObj.id) {",
                        "    direccionObj.id = direccionObj.direcciones.getRandom();",
                        "",
                        "    pm.environment.set('direccionObj', direccionObj)",
                        "",
                        "}",
                        "pm.variables.set('direccionObj.id', direccionObj.id);"
                      ]
                    }
                  }
                ],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Cliente|ventanasDireccion|:idDireccion",
                "method_path_multi": "GET|api|Cliente|ventanasDireccion|:idDireccion|1"
              }
            ],
            "event": [],
            "method_path": "Cliente|ventanasDireccion"
          },
          {
            "_": {
              "postman_id": "8bc36f89-d2e6-42f6-be0f-c269b07959d0"
            },
            "id": "8bc36f89-d2e6-42f6-be0f-c269b07959d0",
            "name": "9_5_Cliente se registra o inicia sesión usando facebook",
            "request": {
              "name": "Inscribe o loguea a un usuario usando facebook",
              "description": "La petición envía un token de corta duración (2 horas) obtenido desde Facebook. \n\nLa respuesta envía en cambio un token de larga duración extendido en el backend por 60 días.",
              "url": {
                "path": ["api","Cliente","fbauth"],
                "host": ["{{apidomain}}"],
                "query": [],
                "variable": [],
                "raw": "{{apidomain}}/api/Cliente/fbauth"
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\"access_token\":\"{{facebookToken}}\"}"
              }
            },
            "responses": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "8046bb93-8497-4ed2-b505-4ac13c7ce712",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ]
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "POST|api|Cliente|fbauth",
            "method_path_multi": "POST|api|Cliente|fbauth|1"
          },
          {
            "_": {
              "postman_id": "8a9648f2-dbb8-407f-b60c-1a6cbf722465"
            },
            "id": "8a9648f2-dbb8-407f-b60c-1a6cbf722465",
            "name": "9_3_Un nuevo Cliente se registra en la Aplicación",
            "request": {
              "name": "Crea un Cliente y persiste en BBDD.",
              "description": "Crea un Cliente y persiste en BBDD.",
              "url": {
                "path": ["api","Cliente"],
                "host": ["{{apidomain}}"],
                "query": [],
                "variable": [],
                "raw": "{{apidomain}}/api/Cliente"
              },
              "header": [
                {
                  "name": "Content-Type",
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\"email\":\"{{newUserEmail}}\",\"username\":\"{{newUsername}}\",\"password\":\"{{newUserPassword}}\"}"
              }
            },
            "responses": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "20470a51-c342-4eaf-b8ea-44ed81f3c6d9",
                  "type": "text/javascript",
                  "exec": [
                    "let     newUsers = pm.environment.get('newUsers') || {},",
                    "    randomNumber = parseInt(Math.random() * 10000, 10);",
                    "",
                    " ",
                    "    function createApellido(length) {",
                    "        var result = '';",
                    "        var characters = 'abcdefghijklmnopqrstuvwxyzabcdefgaijolmnopurstuveiyz';",
                    "        var charactersLength = characters.length;",
                    "        for (var i = 0; i < length; i++) {",
                    "            result += characters.charAt(Math.floor(Math.random() * charactersLength));",
                    "        }",
                    "        let initial = characters.charAt(Math.floor(Math.random() * charactersLength)).toUpperCase();",
                    "        return initial + result;",
                    "    }",
                    "",
                    "",
                    "",
                    "pm.environment.set('createApellido', createApellido.toString() );",
                    "let apellido = createApellido(6);",
                    "",
                    " ",
                    "let    newUserEmail = 'fff+' + apellido + '@ctohm.com',",
                    "    newUsername = 'FFF ' + apellido,",
                    "    newUserPassword = CryptoJS.SHA1(apellido + randomNumber);",
                    "",
                    "newUsers[newUserEmail] = newUserPassword;",
                    "",
                    "pm.environment.set('newUsers', newUsers);",
                    "",
                    "",
                    "pm.variables.set('newUserEmail', newUserEmail);",
                    "pm.variables.set('newUsername', newUsername);",
                    "pm.variables.set('newUserPassword', newUserPassword);"
                  ]
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "POST|api|Cliente",
            "method_path_multi": "POST|api|Cliente|1"
          },
          {
            "_": {
              "postman_id": "04c6a736-1271-4e6b-8083-4d72426a0664"
            },
            "id": "04c6a736-1271-4e6b-8083-4d72426a0664",
            "name": "1_0_1_Listado de Clientes",
            "request": {
              "name": "Lista completa de Clientes (filtro opcional).",
              "description": "Tiene la forma de un arreglo de un solo elemento: el cliente logueado",
              "url": {
                "path": ["api","Cliente"],
                "host": ["{{apidomain}}"],
                "query": [
                  {
                    "description": "Opcional, filtro en forma de String JSON encoded",
                    "key": "filter",
                    "value": "{{filter}}"
                  }
                ],
                "variable": [],
                "raw": "{{apidomain}}/api/Cliente"
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "GET",
              "body": {}
            },
            "responses": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "656c6ca7-f4df-4e64-b931-7e17a44eccdb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ]
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "GET|api|Cliente",
            "method_path_multi": "GET|api|Cliente|2"
          }
        ],
        "event": [],
        "method_path": "Cliente"
      },
      {
        "id": "5f0337e6-6252-43e6-8d89-8fa3888e97c0",
        "name": "Pedido",
        "item": [
          {
            "_": {
              "postman_isSubFolder": true
            },
            "id": "c8326748-487a-4d27-b7cd-17d0ff7e169a",
            "name": "{id}",
            "item": [
              {
                "_": {
                  "postman_id": "c0de4401-df6d-437f-8919-0db591c69550"
                },
                "id": "c0de4401-df6d-437f-8919-0db591c69550",
                "name": "4_4_4_Muestra la Dirección asociada a un Pedido.",
                "request": {
                  "name": "Muestra la Dirección asociada a un Pedido.",
                  "description": "Muestra la Dirección asociada a un Pedido.",
                  "url": {
                    "path": ["api","Pedido",":id","direccion"],
                    "host": ["{{apidomain}}"],
                    "query": [],
                    "variable": [
                      {
                        "description": "id Único de Pedido",
                        "type": "any",
                        "value": "{{idPedido}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Pedido/:id/direccion"
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": " ",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Pedido|:id|direccion",
                "method_path_multi": "GET|api|Pedido|:id|direccion|1"
              },
              {
                "_": {
                  "postman_id": "66c2659f-b5bc-4f0e-8e5c-cdaa37af0f7c"
                },
                "id": "66c2659f-b5bc-4f0e-8e5c-cdaa37af0f7c",
                "name": "4_4_5_Muestra el Medio de Pago asociado a un Pedido.",
                "request": {
                  "name": "Muestra el Medio de Pago asociado a un Pedido.",
                  "description": "Muestra el Medio de Pago asociado a un Pedido.",
                  "url": {
                    "path": ["api","Pedido",":id","mediopago"],
                    "host": ["{{apidomain}}"],
                    "query": [],
                    "variable": [
                      {
                        "description": "id Único de Pedido",
                        "type": "any",
                        "value": "{{idPedido}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Pedido/:id/mediopago"
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": " ",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Pedido|:id|mediopago",
                "method_path_multi": "GET|api|Pedido|:id|mediopago|1"
              },
              {
                "_": {
                  "postman_id": "cfe5b9fa-7a6c-4ff2-aff4-9f1320427fff"
                },
                "id": "cfe5b9fa-7a6c-4ff2-aff4-9f1320427fff",
                "name": "4_4_6_Muestra el Estado Actual de un Pedido.",
                "request": {
                  "name": "Muestra el Estado Actual de un Pedido.",
                  "description": "Muestra el Estado Actual de un Pedido.",
                  "url": {
                    "path": ["api","Pedido",":id","estado"],
                    "host": ["{{apidomain}}"],
                    "query": [],
                    "variable": [
                      {
                        "description": "id Único de Pedido",
                        "type": "any",
                        "value": "{{idPedido}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Pedido/:id/estado"
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": " ",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Pedido|:id|estado",
                "method_path_multi": "GET|api|Pedido|:id|estado|1"
              },
              {
                "_": {
                  "postman_id": "87a6f083-2115-4c61-b490-8610946ded9a"
                },
                "id": "87a6f083-2115-4c61-b490-8610946ded9a",
                "name": "4_4_3_Muestra transacción asociada a un pedido",
                "request": {
                  "name": "Muestra transaccion un Pedido.",
                  "description": "Muestra transaccion un Pedido.",
                  "url": {
                    "path": ["api","Pedido",":id","transaccion"],
                    "host": ["{{apidomain}}"],
                    "query": [],
                    "variable": [
                      {
                        "description": "id Único de Pedido",
                        "type": "any",
                        "value": "{{idPedido}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Pedido/:id/transaccion"
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": " ",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Pedido|:id|transaccion",
                "method_path_multi": "GET|api|Pedido|:id|transaccion|1"
              },
              {
                "id": "b3708808-98ec-40b6-b8cb-f2e94b2a15c3",
                "name": "Lista historial de un Pedido.",
                "request": {
                  "name": "Lista historial de un Pedido.",
                  "description": "Lista historial de un Pedido.",
                  "url": {
                    "path": ["api","Pedido",":id","historial"],
                    "host": ["{{apidomain}}"],
                    "query": [
                      {
                        "description": "Opcional, filtro en forma de String JSON encoded",
                        "key": "filter",
                        "value": "{{filter}}"
                      }
                    ],
                    "variable": [
                      {
                        "description": "id Único de Pedido",
                        "type": "any",
                        "value": "{{idPedido}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Pedido/:id/historial"
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Pedido|:id|historial",
                "method_path_multi": "GET|api|Pedido|:id|historial|1"
              },
              {
                "_": {
                  "postman_id": "ffc3f04f-c23f-4e56-9a68-73cec237ccbf"
                },
                "id": "ffc3f04f-c23f-4e56-9a68-73cec237ccbf",
                "name": "4_4_1_Resumen con todos los datos de un pedido",
                "request": {
                  "name": "Lista un resumen del pedido",
                  "description": "Lista un resumen del pedido",
                  "url": {
                    "path": ["api","Pedido",":id","resumen"],
                    "host": ["{{apidomain}}"],
                    "query": [],
                    "variable": [
                      {
                        "description": "id Único de Pedido",
                        "type": "any",
                        "value": "{{idPedido}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Pedido/:id/resumen"
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "disabled": true,
                      "description": " ",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c909aeda-ff97-4d25-bd30-2cc09bcf1beb",
                      "type": "text/javascript",
                      "exec": [
                        "//pm.variables.set('idPedido',548);"
                      ]
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ec92db8-bb84-412f-91e1-e99fe1d42720",
                      "type": "text/javascript",
                      "exec": [
                        "var schema = {",
                        "    \"$ref\": \"MyDot#/definitions/Pedido\"",
                        "",
                        "};",
                        "",
                        "",
                        "",
                        "",
                        "pm.test('JSON response can be decoded and is an object', function() {",
                        "    var jsonData = pm.response.json();",
                        "",
                        "    pm.expect(jsonData).to.be.a('object');",
                        "    ",
                        "    let {boton,cliente,estado,direccion,mediopago,transaccion,productos,costo,...pedido}=jsonData;",
                        "",
                        "    pm.test('Schema is valid', function() {",
                        "        let validates = tv4.validate(pedido, schema);",
                        "        console.log(tv4.error);",
                        "        pm.expect(validates).to.be.true;",
                        "    });",
                        "",
                        "    pm.test('pedido.transaccion is a number', function() {",
                        "",
                        "",
                        "        let {",
                        "            id: transactionId,",
                        "            idProducto,",
                        "            idMediopago,",
                        "            idDireccion,",
                        "            estado,",
                        "            direccion,",
                        "            mediopago,",
                        "            transaccion,",
                        "            productos",
                        "        } = jsonData;",
                        "        pm.expect( transactionId).to.be.a('number');",
                        "",
                        "",
                        "        pm.environment.set('idTransaccion', transactionId);",
                        "    });",
                        "});"
                      ]
                    }
                  }
                ],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Pedido|:id|resumen",
                "method_path_multi": "GET|api|Pedido|:id|resumen|1"
              },
              {
                "_": {
                  "postman_id": "4e99a0f8-a796-4f70-8227-b1d1c0a94ca7"
                },
                "id": "4e99a0f8-a796-4f70-8227-b1d1c0a94ca7",
                "name": "4_4_2_Encuentra un Pedido por {{id}} en la BBDD",
                "request": {
                  "name": "Encuentra un Pedido por {{id}} en la BBDD.",
                  "description": "Encuentra un Pedido por {{id}} en la BBDD.",
                  "url": {
                    "path": ["api","Pedido",":id"],
                    "host": ["{{apidomain}}"],
                    "query": [
                      {
                        "description": "Opcional, filtro en forma de String JSON encoded",
                        "key": "filter",
                        "value": "{{filter}}"
                      }
                    ],
                    "variable": [
                      {
                        "description": "id Único de Pedido",
                        "type": "any",
                        "value": "{{idPedido}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Pedido/:id"
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": " ",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Pedido|:id",
                "method_path_multi": "GET|api|Pedido|:id|1"
              },
              {
                "_": {
                  "postman_id": "8557d1bb-f5ff-4e2e-8ccc-5fe36cb5e6c0"
                },
                "id": "8557d1bb-f5ff-4e2e-8ccc-5fe36cb5e6c0",
                "name": "4_4_8_Intenta Anular un pedido vigente de una fecha anterior",
                "request": {
                  "name": "Modifica o crea un Pedido y persiste en BBDD.",
                  "description": "Modifica o crea un Pedido y persiste en BBDD.",
                  "url": {
                    "path": ["api","Pedido",":id"],
                    "host": ["{{apidomain}}"],
                    "query": [],
                    "variable": [
                      {
                        "description": "id Único de Pedido",
                        "type": "any",
                        "value": "{{idPedido}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Pedido/:id"
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": " ",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "PATCH",
                  "body": {
                    "mode": "raw",
                    "raw": "{\"idEstado\":7,\"nullify\":true}"
                  }
                },
                "responses": [],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a9c2e74-ecea-4c53-bbf1-c0316d3429c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set('expectError', 'any');",
                        "pm.variables.set('expectHeaders', [200, 400, 401, 403, 409]);"
                      ]
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "658b67ff-956b-4169-b0e9-41e35632a6a1",
                      "type": "text/javascript",
                      "exec": [
                        "let idEstado = pm.variables.get('idEstado');",
                        "",
                        "var descuento = pm.variables.get('descuento'),",
                        "    schema = {",
                        "        \"$ref\": \"MyDot#/definitions/Pedido\"",
                        "",
                        "    },",
                        "    idBoton = pm.environment.get('idBoton');",
                        "",
                        "",
                        "",
                        "",
                        "pm.test('JSON response can be decoded and is an object', function() {",
                        "    var jsonData = pm.response.json();",
                        "",
                        "    pm.expect(jsonData).to.be.a('object');",
                        "    ",
                        "",
                        "",
                        "",
                        "});",
                        "pm.test(\"Successful POST request\", function () {",
                        "    pm.expect(pm.response.code).to.be.oneOf([200, 400, 401, 403, 409]);",
                        "});",
                        "let testsCarpeta=pm.variables.get('testsCarpeta');",
                        "",
                        "console.log('============== FIN CARPETA Pedido con '+testsCarpeta+' tests ===================');"
                      ]
                    }
                  }
                ],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "PATCH|api|Pedido|:id",
                "method_path_multi": "PATCH|api|Pedido|:id|2"
              }
            ],
            "event": [],
            "method_path": "Pedido|:id"
          },
          {
            "_": {
              "postman_isSubFolder": true
            },
            "id": "1cf0e1bd-0971-43a3-b645-0470e191d3fc",
            "name": "costo_despacho",
            "item": [
              {
                "_": {
                  "postman_id": "8e41d0d8-21e4-40ac-b62d-8cfcef65ccab"
                },
                "id": "8e41d0d8-21e4-40ac-b62d-8cfcef65ccab",
                "name": "4_3_2_Costo despacho dado monto de un pedido",
                "request": {
                  "name": "Lista costo despacho dado un monto",
                  "description": "Lista costo despacho dado un monto",
                  "url": {
                    "path": ["api","Pedido","costo_despacho",":monto"],
                    "host": ["{{apidomain}}"],
                    "query": [],
                    "variable": [
                      {
                        "type": "any",
                        "key": "monto"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Pedido/costo_despacho/:monto"
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": " ",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcb3b17e-ccc9-47ad-ae62-d11fbb8eb6b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test('JSON response can be decoded and is an array', function() {",
                        "    var jsonData = pm.response.json();",
                        "    pm.expect(typeof jsonData).to.eq('object');",
                        "    pm.expect(typeof jsonData.montoDespachoGratis).to.eq('number');",
                        "",
                        "});"
                      ]
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "735f49e3-a087-4689-a1f9-4e6ace30a10d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set('monto',10000);"
                      ]
                    }
                  }
                ],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Pedido|costo_despacho|:monto",
                "method_path_multi": "GET|api|Pedido|costo_despacho|:monto|1"
              }
            ],
            "event": [],
            "method_path": "Pedido|costo_despacho"
          },
          {
            "_": {
              "postman_id": "6294f2f5-cd79-4dda-b3ae-4677a0adbb68"
            },
            "id": "6294f2f5-cd79-4dda-b3ae-4677a0adbb68",
            "name": "4_4_0_Lista completa de Pedidos (propios) (filtro opcional).",
            "request": {
              "name": "Lista completa de Pedidos (propios) (filtro opcional).",
              "description": "Para obtener las entidades anidadas, se puede usar:\n```\nGET https://apidev.mydot.app/api/Pedido?filter={\"include\":[\"productos\",\"direccion\",\"mediopago\"]}\n```",
              "url": {
                "path": ["api","Pedido"],
                "host": ["{{apidomain}}"],
                "query": [
                  {
                    "description": "Opcional, filtro en forma de String JSON encoded",
                    "key": "filter",
                    "value": "{{filter}}"
                  }
                ],
                "variable": [],
                "raw": "{{apidomain}}/api/Pedido"
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": " ",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "GET",
              "body": {}
            },
            "responses": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "604b4bb0-f621-4118-82ce-28c68264f1c6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.variables.set('filter','{\"where\":{\"idEstado\":{\"neq\":null}}, \"limit\":20, \"include\":[\"productos\",\"estado\",\"transaccion\"]}');"
                  ]
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1202a0a3-9f0d-4249-8cb2-aa3903d7e429",
                  "type": "text/javascript",
                  "exec": [
                    "var schema = {",
                    "    \"type\": \"array\",",
                    "    \"items\": {",
                    "        \"$ref\": \"MyDot#/definitions/Pedido\"",
                    "    }",
                    "",
                    "};",
                    "",
                    "pm.variables.set('filter','');",
                    "",
                    "",
                    "pm.test('JSON response can be decoded and is an array', function() {",
                    "    var jsonData = pm.response.json();",
                    "    pm.expect(jsonData instanceof Array).to.be.true;",
                    "    let pedidosVigentesFechaAnterior = jsonData.filter(pedido => {",
                    "            return pedido.estado.estadoCancelado === 0 && pedido.estado.soloEstadoFinal === 0",
                    "                //&& pedido.createdAt.split('T')[0] < new Date().toISOString().split('T')[0] ",
                    "                && (pedido.transaccion.responseCode===0 || pedido.transaccion.responseCode===null)",
                    "                && pedido.transaccion.authorizationCode !== null;",
                    "",
                    "        }),",
                    "        pedidosVigentes = jsonData.filter(pedido => {",
                    "            return pedido.idDireccion !== null &&",
                    "                pedido.idMediopago !== null &&",
                    "                pedido.estado.estadoCancelado === 0 &&",
                    "                pedido.estado.soloEstadoFinal === 0;",
                    "        }).map(pedido => {",
                    "            let {",
                    "                estado, productos, transaccion, ...cleanPedido",
                    "            } = pedido;",
                    "            return cleanPedido;",
                    "        }),",
                    "",
                    "        pedidosFinalizados = jsonData.filter(pedido => {",
                    "            return pedido.idDireccion !== null &&",
                    "                pedido.idMediopago !== null &&",
                    "                pedido.estado.soloEstadoFinal === 1;",
                    "        }).map(pedido => {",
                    "            let {",
                    "                estado, productos, transaccion, ...cleanPedido",
                    "            } = pedido;",
                    "            return cleanPedido;",
                    "        });",
                    "",
                    "    pm.test('Schema is valid for pedidosVigentes', function() {",
                    "        let isValid = tv4.validate(pedidosVigentes, schema);",
                    "        if (!isValid) {",
                    "            console.log(tv4.error);",
                    "        }",
                    "        pm.expect(isValid).to.be.true;",
                    "        if (pedidosVigentes.length) {",
                    "            let pedido = pedidosVigentes[0];",
                    "",
                    "            pm.expect(typeof pedido.id).to.eq('number');",
                    "            pm.environment.set('idPedido', pedido.id);",
                    "        }",
                    "        if (pedidosVigentesFechaAnterior.length) {",
                    "            pm.environment.set('idPedidoVigenteFechaAnterior', pedidosVigentesFechaAnterior.pop().id);",
                    "        }",
                    "    });",
                    "",
                    "",
                    "    pm.test('Schema is valid for pedidosFinalizados', function() {",
                    "        let isValid = tv4.validate(pedidosFinalizados, schema);",
                    "        if (!isValid) {",
                    "            console.log(tv4.error);",
                    "        }",
                    "        pm.expect(isValid).to.be.true;",
                    "",
                    "    });",
                    "    if (pedidosFinalizados.length) {",
                    "        let pedidoFinalizado = pedidosFinalizados[0];",
                    "",
                    "        pm.expect(typeof pedidoFinalizado.id).to.eq('number');",
                    "        pm.environment.set('idPedidoFinalizado', pedidoFinalizado.id);",
                    "    }",
                    "",
                    "    if (pedidosVigentes.length) {",
                    "        let pedido = pedidosVigentes[0];",
                    "",
                    "        pm.expect(typeof pedido.id).to.eq('number');",
                    "        pm.environment.set('idPedido', pedido.id);",
                    "    }",
                    "});"
                  ]
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "GET|api|Pedido",
            "method_path_multi": "GET|api|Pedido|1"
          }
        ],
        "event": [],
        "method_path": "Pedido"
      },
      {
        "id": "c2f8f707-a520-4c87-8791-3de65d8e00d4",
        "name": "Producto",
        "item": [
          {
            "_": {
              "postman_isSubFolder": true
            },
            "id": "6c1da30c-6e21-44d4-9db5-2f4a0aab9ca6",
            "name": "{id}",
            "item": [
              {
                "_": {
                  "postman_id": "b559cdd3-0398-4621-bb18-c78f4a5ec9b6"
                },
                "id": "b559cdd3-0398-4621-bb18-c78f4a5ec9b6",
                "name": "3_2_4_Muestra la Categoria de un Producto.",
                "request": {
                  "name": "Muestra la Categoria de un Producto.",
                  "description": "Muestra la Categoria de un Producto.",
                  "url": {
                    "path": ["api","Producto",":id","categoria"],
                    "host": ["{{apidomain}}"],
                    "query": [],
                    "variable": [
                      {
                        "description": "id Único de Producto",
                        "type": "any",
                        "value": "{{idProducto}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Producto/:id/categoria"
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": " ",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53d123ed-fba8-41b8-8309-0112ec282d2e",
                      "type": "text/javascript",
                      "exec": [
                        "let testsCarpeta=pm.variables.get('testsCarpeta');",
                        "",
                        "",
                        "console.log('============== FIN CARPETA Producto con '+testsCarpeta+' tests ===================');"
                      ]
                    }
                  }
                ],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Producto|:id|categoria",
                "method_path_multi": "GET|api|Producto|:id|categoria|1"
              },
              {
                "_": {
                  "postman_id": "e88354ae-b661-42f1-9fca-34858827cea0"
                },
                "id": "e88354ae-b661-42f1-9fca-34858827cea0",
                "name": "3_1_3_Muestra la Marca de un Producto.",
                "request": {
                  "name": "Muestra la Marca de un Producto.",
                  "description": "Muestra la Marca de un Producto.",
                  "url": {
                    "path": ["api","Producto",":id","marca"],
                    "host": ["{{apidomain}}"],
                    "query": [],
                    "variable": [
                      {
                        "description": "id Único de Producto",
                        "type": "any",
                        "value": "{{idProducto}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Producto/:id/marca"
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": " ",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Producto|:id|marca",
                "method_path_multi": "GET|api|Producto|:id|marca|1"
              },
              {
                "id": "615b9320-5928-4d74-9fee-563989aa683b",
                "name": "Lista Comunas Restringidas de un Producto.",
                "request": {
                  "name": "Lista Comunas Restringidas de un Producto.",
                  "description": "Lista Comunas Restringidas de un Producto.",
                  "url": {
                    "path": ["api","Producto",":id","comunas_restringidas"],
                    "host": ["{{apidomain}}"],
                    "query": [
                      {
                        "description": "Opcional, filtro en forma de String JSON encoded",
                        "key": "filter",
                        "value": "{{filter}}"
                      }
                    ],
                    "variable": [
                      {
                        "description": "id Único de Producto",
                        "type": "any",
                        "value": "{{idProducto}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Producto/:id/comunas_restringidas"
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Producto|:id|comunas_restringidas",
                "method_path_multi": "GET|api|Producto|:id|comunas_restringidas|1"
              },
              {
                "id": "e698eff9-3821-473f-966a-fa43e0e8d3ca",
                "name": "actualiza la imagen del Producto",
                "request": {
                  "name": "actualiza la imagen del Producto",
                  "description": "actualiza la imagen del Producto",
                  "url": {
                    "path": ["api","Producto",":id","image"],
                    "host": ["{{apidomain}}"],
                    "query": [],
                    "variable": [
                      {
                        "description": "id Único de Producto",
                        "type": "any",
                        "value": "{{idProducto}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Producto/:id/image"
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{}"
                  }
                },
                "responses": [],
                "event": [],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "POST|api|Producto|:id|image",
                "method_path_multi": "POST|api|Producto|:id|image|1"
              },
              {
                "_": {
                  "postman_id": "7845fa98-fbee-4450-924e-78833101c185"
                },
                "id": "7845fa98-fbee-4450-924e-78833101c185",
                "name": "3_0_4_Encuentra un Producto por {{id}} en la BBDD.",
                "request": {
                  "name": "Encuentra un Producto por {{id}} en la BBDD.",
                  "description": "Encuentra un Producto por {{id}} en la BBDD.",
                  "url": {
                    "path": ["api","Producto",":id"],
                    "host": ["{{apidomain}}"],
                    "query": [
                      {
                        "description": "Opcional, filtro en forma de String JSON encoded",
                        "key": "filter",
                        "value": "{{filter}}"
                      }
                    ],
                    "variable": [
                      {
                        "description": "id Único de Producto",
                        "type": "any",
                        "value": "{{idProducto}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Producto/:id"
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": " ",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91b7aca8-6b2a-4d4a-a5fa-dd1d27bd60eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set('filter','');"
                      ]
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "259936f3-793b-4d23-8ad1-58e4accec986",
                      "type": "text/javascript",
                      "exec": [
                        "var schema = {",
                        "",
                        "    \"$ref\": \"MyDot#/definitions/Producto\"",
                        "",
                        "",
                        "};",
                        "",
                        "",
                        "pm.test('Response is JSON and is an object', function() {",
                        "    var jsonData = pm.response.json();",
                        "    pm.expect(jsonData).to.be.a('object');",
                        "",
                        "    pm.test('Schema is valid', function() {",
                        "        let isValid = tv4.validate(jsonData, schema); if (!isValid) {  console.warn(tv4.error); }  pm.expect(isValid).to.be.true;",
                        "",
                        "",
                        "        pm.environment.set('idProducto', jsonData.id);",
                        "    });",
                        "});"
                      ]
                    }
                  }
                ],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Producto|:id",
                "method_path_multi": "GET|api|Producto|:id|1"
              }
            ],
            "event": [],
            "method_path": "Producto|:id"
          },
          {
            "_": {
              "postman_id": "c6ef4e0f-1fad-4294-9afe-ccea70b32111"
            },
            "id": "c6ef4e0f-1fad-4294-9afe-ccea70b32111",
            "name": "3_0_2_Lista Productos de tipo Botón.",
            "request": {
              "name": "Lista Productos de tipo Botón.",
              "description": "Lista Productos de tipo Botón.",
              "url": {
                "path": ["api","Producto","botones"],
                "host": ["{{apidomain}}"],
                "query": [
                  {
                    "description": "Opcional, filtro en forma de String JSON encoded",
                    "key": "filter",
                    "value": "{{filter}}"
                  }
                ],
                "variable": [],
                "raw": "{{apidomain}}/api/Producto/botones"
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "GET",
              "body": {}
            },
            "responses": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "bb1fdc08-eae5-49db-a5c5-8ba0b61a9e12",
                  "type": "text/javascript",
                  "exec": [
                    "var schema = {",
                    "    \"type\": \"array\",",
                    "    \"items\": {",
                    "        \"$ref\": \"MyDot#/definitions/Producto\"",
                    "    }",
                    "",
                    "};",
                    "",
                    "",
                    "pm.test('Response is JSON and is Array', function() {",
                    "    var jsonData = pm.response.json();",
                    "    pm.expect(jsonData instanceof Array).to.be.true;",
                    "",
                    "    pm.test('Schema is valid', function() {",
                    "        let isValid = tv4.validate(jsonData, schema);",
                    "        if (!isValid) {",
                    "            console.warn(tv4.error);",
                    "        }",
                    "        pm.expect(isValid).to.be.true;",
                    "        pm.environment.set('idProductoTipoBoton', jsonData[0].id);",
                    "    });",
                    "});"
                  ]
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "GET|api|Producto|botones",
            "method_path_multi": "GET|api|Producto|botones|1"
          },
          {
            "_": {
              "postman_id": "f7e1c171-c5af-46d0-9693-f0443c73d9f7"
            },
            "id": "f7e1c171-c5af-46d0-9693-f0443c73d9f7",
            "name": "3_0_3_Lista Productos de tipo consumible.",
            "request": {
              "name": "Lista Productos de tipo consumible.",
              "description": "Lista Productos de tipo consumible.",
              "url": {
                "path": ["api","Producto","consumibles"],
                "host": ["{{apidomain}}"],
                "query": [
                  {
                    "description": "Opcional, filtro en forma de String JSON encoded",
                    "key": "filter",
                    "value": "{{filter}}"
                  }
                ],
                "variable": [],
                "raw": "{{apidomain}}/api/Producto/consumibles"
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "disabled": true,
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "GET",
              "body": {}
            },
            "responses": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "6d400440-1811-479b-b2bf-f9599f08990f",
                  "type": "text/javascript",
                  "exec": [
                    "var schema = {",
                    "    \"type\": \"array\",",
                    "    \"items\": {",
                    "        \"$ref\": \"MyDot#/definitions/Producto\"",
                    "    }",
                    "",
                    "};",
                    "",
                    "",
                    "pm.test('Response is JSON and is Array', function() {",
                    "    var jsonData = pm.response.json();",
                    "    pm.expect(jsonData instanceof Array).to.be.true;",
                    "",
                    "    pm.test('Schema is valid', function() {",
                    "        let isValid = tv4.validate(jsonData, schema);",
                    "        if (!isValid) {",
                    "            console.warn(tv4.error);",
                    "        }",
                    "        pm.expect(isValid).to.be.true;",
                    "        pm.environment.set('idProducto', jsonData[0].id);",
                    "    });",
                    "});"
                  ]
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "GET|api|Producto|consumibles",
            "method_path_multi": "GET|api|Producto|consumibles|1"
          },
          {
            "_": {
              "postman_id": "08f7dd12-c827-42a2-aff7-0ae27e648d93"
            },
            "id": "08f7dd12-c827-42a2-aff7-0ae27e648d93",
            "name": "3_0_1_Lista completa de Productos (filtro opcional).",
            "request": {
              "name": "Lista completa de Productos (filtro opcional).",
              "description": "Lista completa de Productos (filtro opcional).",
              "url": {
                "path": ["api","Producto"],
                "host": ["{{apidomain}}"],
                "query": [
                  {
                    "description": "Opcional, filtro en forma de String JSON encoded",
                    "key": "filter",
                    "value": "{{filter}}"
                  }
                ],
                "variable": [],
                "raw": "{{apidomain}}/api/Producto"
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "GET",
              "body": {}
            },
            "responses": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "9555bc4d-e10d-4223-9df7-56c5eb3ab27c",
                  "type": "text/javascript",
                  "exec": [
                    "var schema = {",
                    "    \"type\": \"array\",",
                    "    \"items\": {",
                    "        \"$ref\": \"MyDot#/definitions/Producto\"",
                    "    }",
                    "",
                    "};",
                    "",
                    "",
                    "pm.test('Response is JSON and is Array', function() {",
                    "    var jsonData = pm.response.json();",
                    "    pm.expect(jsonData instanceof Array).to.be.true;",
                    "",
                    "    pm.test('Schema is valid', function() {",
                    "        let isValid = tv4.validate(jsonData, schema); if (!isValid) {  console.warn(tv4.error); }  pm.expect(isValid).to.be.true;",
                    "        ",
                    "        ",
                    "        pm.environment.set('idProducto', jsonData[0].id);",
                    "    });",
                    "});"
                  ]
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "GET|api|Producto",
            "method_path_multi": "GET|api|Producto|1"
          }
        ],
        "event": [],
        "method_path": "Producto"
      },
      {
        "id": "73aff3ea-ece6-4508-9a50-1f8d159a6444",
        "name": "ProductoCategoria",
        "item": [
          {
            "_": {
              "postman_id": "373d9bf2-0ddd-47d6-962d-d9fdda125d47"
            },
            "id": "373d9bf2-0ddd-47d6-962d-d9fdda125d47",
            "name": "3_2_1_Lista Productos de tipo Botón de una Categoría de Producto.",
            "request": {
              "name": "Lista Productos de tipo Botón de una Categoría de Producto.",
              "description": "Lista Productos de tipo Botón de una Categoría de Producto.",
              "url": {
                "path": ["api","ProductoCategoria","botones"],
                "host": ["{{apidomain}}"],
                "query": [
                  {
                    "description": "Opcional, filtro en forma de String JSON encoded",
                    "key": "filter",
                    "value": "{{filter}}"
                  }
                ],
                "variable": [],
                "raw": "{{apidomain}}/api/ProductoCategoria/botones"
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": " ",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "GET",
              "body": {}
            },
            "responses": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "0dec2ff9-9ef2-4789-90a4-25e0d5a663d2",
                  "type": "text/javascript",
                  "exec": [
                    "var schema = {",
                    "    \"items\": {",
                    "        \"type\": \"object\",",
                    "        \"members\": {",
                    "            \"id\": \"number\",",
                    "            \"descripcion\": \"string\",",
                    "            \"ProductoTipoBoton\": \"array\"",
                    "        }",
                    "    }",
                    "};",
                    "",
                    "let idCategoria = pm.environment.get('idCategoria'),",
                    "    categorias = pm.environment.get('categorias');",
                    "",
                    "",
                    "pm.test('JSON response can be decoded', function() {",
                    "",
                    "    var jsonData = pm.response.json();",
                    "    pm.expect(jsonData instanceof Array).to.be.true;",
                    "",
                    "",
                    "    pm.test('Schema is valid', function() {",
                    "        let validates = tv4.validate(pm.response.json(), schema);",
                    "        if (!validates) {",
                    "            console.log(tv4.error);",
                    "        }",
                    "        pm.expect(validates).to.be.true;",
                    "    });",
                    "",
                    "    pm.test('There is a button for the current idCategoria', function() {",
                    "        ",
                    "        let matchingProducto = jsonData.filter(categoria => {",
                    "",
                    "            return categoria.id === idCategoria;",
                    "        });",
                    "        pm.expect(matchingProducto instanceof Array).to.be.true;",
                    "        let {",
                    "            ProductoTipoBoton",
                    "        } = matchingProducto.pop(),",
                    "        productoBoton=ProductoTipoBoton.pop();",
                    "        ",
                    "        console.log(productoBoton);",
                    "",
                    "        pm.expect(productoBoton.id).to.be.a('number');",
                    "",
                    "        pm.environment.set('productoBoton', productoBoton);",
                    "        pm.environment.set('idProductoTipoBoton', productoBoton.id);",
                    "",
                    "    });",
                    "",
                    "",
                    "",
                    "",
                    "});"
                  ]
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "GET|api|ProductoCategoria|botones",
            "method_path_multi": "GET|api|ProductoCategoria|botones|1"
          },
          {
            "_": {
              "postman_id": "7e898395-e32d-4b92-a271-dcf7221c3402"
            },
            "id": "7e898395-e32d-4b92-a271-dcf7221c3402",
            "name": "3_2_2_Lista Productos de tipo consumible de una Categoría de Producto.",
            "request": {
              "name": "Lista Productos de tipo consumible de una Categoría de Producto.",
              "description": "Lista Productos de tipo consumible de una Categoría de Producto.",
              "url": {
                "path": ["api","ProductoCategoria","consumibles"],
                "host": ["{{apidomain}}"],
                "query": [
                  {
                    "description": "Opcional, filtro en forma de String JSON encoded",
                    "key": "filter",
                    "value": "{{filter}}"
                  }
                ],
                "variable": [],
                "raw": "{{apidomain}}/api/ProductoCategoria/consumibles"
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": " ",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "GET",
              "body": {}
            },
            "responses": [],
            "event": [],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "GET|api|ProductoCategoria|consumibles",
            "method_path_multi": "GET|api|ProductoCategoria|consumibles|1"
          },
          {
            "_": {
              "postman_id": "600da12f-2377-4613-b005-24e3d8db5904"
            },
            "id": "600da12f-2377-4613-b005-24e3d8db5904",
            "name": "3_2_3_Encuentra una Categoría de Producto por {{id}} en la BBDD.",
            "request": {
              "name": "Encuentra una Categoría de Producto por {{id}} en la BBDD.",
              "description": "Encuentra una Categoría de Producto por {{id}} en la BBDD.",
              "url": {
                "path": ["api","ProductoCategoria",":id"],
                "host": ["{{apidomain}}"],
                "query": [
                  {
                    "description": "Opcional, filtro en forma de String JSON encoded",
                    "key": "filter",
                    "value": "{{filter}}"
                  }
                ],
                "variable": [
                  {
                    "description": "id Único de Categoría de Producto",
                    "type": "any",
                    "value": "{{idCategoria}}",
                    "key": "id"
                  }
                ],
                "raw": "{{apidomain}}/api/ProductoCategoria/:id"
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": " ",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "GET",
              "body": {}
            },
            "responses": [],
            "event": [],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "GET|api|ProductoCategoria|:id",
            "method_path_multi": "GET|api|ProductoCategoria|:id|1"
          },
          {
            "_": {
              "postman_id": "4eaf04d0-589d-447f-a0b7-073c71dfbdb7"
            },
            "id": "4eaf04d0-589d-447f-a0b7-073c71dfbdb7",
            "name": "3_2_0_Lista completa de Categorías de Producto (filtro opcional).",
            "request": {
              "name": "Lista completa de Categorías de Producto (filtro opcional).",
              "description": "Lista completa de Categorías de Producto (filtro opcional).",
              "url": {
                "path": ["api","ProductoCategoria"],
                "host": ["{{apidomain}}"],
                "query": [
                  {
                    "description": "Opcional, filtro en forma de String JSON encoded",
                    "key": "filter",
                    "value": "{{filter}}"
                  }
                ],
                "variable": [],
                "raw": "{{apidomain}}/api/ProductoCategoria"
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": " ",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "GET",
              "body": {}
            },
            "responses": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "a0a29ce5-3fc8-410b-a8cb-cb0a263f18a1",
                  "type": "text/javascript",
                  "exec": [
                    "var schema = {",
                    "    \"type\": \"array\",",
                    "    \"items\": {",
                    "        \"type\": \"object\",",
                    "        \"members\": {",
                    "            \"id\": \"number\",",
                    "            \"descripcion\": \"string\"",
                    "",
                    "        }",
                    "    }",
                    "};",
                    "",
                    "",
                    "",
                    "",
                    "pm.test('JSON response can be decoded', function() {",
                    "",
                    "    var categorias = pm.response.json();",
                    "    pm.expect(categorias instanceof Array).to.be.true;",
                    "",
                    "",
                    "    pm.test('Schema is valid', function() {",
                    "        let validates = tv4.validate(categorias, schema);",
                    "        if (!validates) {",
                    "            console.log(tv4.error);",
                    "        }",
                    "        pm.expect(validates).to.be.true;",
                    "    });",
                    "    let categoria = categorias[ Math.floor(0.999*Math.random() * categorias.length)];",
                    "    ",
                    "    pm.environment.set('idCategoria', categoria.id);",
                    "    pm.environment.set('categorias', categorias);",
                    "",
                    "",
                    "});"
                  ]
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "GET|api|ProductoCategoria",
            "method_path_multi": "GET|api|ProductoCategoria|1"
          }
        ],
        "event": [],
        "method_path": "ProductoCategoria"
      },
      {
        "id": "b779ca14-8867-48d4-a5ce-c5f4dc5900c6",
        "name": "Marca",
        "item": [
          {
            "_": {
              "postman_isSubFolder": true
            },
            "id": "a14a44f6-a397-49d2-b653-d6694bbf1096",
            "name": "{id}",
            "item": [
              {
                "id": "09e3e276-dc59-43b6-876a-89f19ca08951",
                "name": "Lista botones de una Marca.",
                "request": {
                  "name": "Lista botones de una Marca.",
                  "description": "Lista botones de una Marca.",
                  "url": {
                    "path": ["api","Marca",":id","botones"],
                    "host": ["{{apidomain}}"],
                    "query": [
                      {
                        "description": "Opcional, filtro en forma de String JSON encoded",
                        "key": "filter",
                        "value": "{{filter}}"
                      }
                    ],
                    "variable": [
                      {
                        "description": "id Único de Marca",
                        "type": "any",
                        "value": "{{idMarca}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Marca/:id/botones"
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Marca|:id|botones",
                "method_path_multi": "GET|api|Marca|:id|botones|1"
              },
              {
                "_": {
                  "postman_id": "60b45b9b-62ac-44de-afff-c45c2eee4257"
                },
                "id": "60b45b9b-62ac-44de-afff-c45c2eee4257",
                "name": "2_0_4_Lista botones disponibles de una Marca",
                "request": {
                  "name": "Lista botones_disponibles de una Marca.",
                  "description": "Lista botones_disponibles de una Marca.",
                  "url": {
                    "path": ["api","Marca",":id","botones_disponibles"],
                    "host": ["{{apidomain}}"],
                    "query": [
                      {
                        "description": "Opcional, filtro en forma de String JSON encoded",
                        "key": "filter",
                        "value": "{{filter}}"
                      }
                    ],
                    "variable": [
                      {
                        "description": "id Único de Marca",
                        "type": "any",
                        "value": "{{idMarca}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Marca/:id/botones_disponibles"
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": " ",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1cae827-f71a-4293-9664-9d73fcc5d312",
                      "type": "text/javascript",
                      "exec": [
                        "",
                        "",
                        "    pm.test('JSON response can be decoded and is an array', function() {",
                        "        var jsonData = pm.response.json();",
                        "        pm.expect(jsonData instanceof Array).to.be.true;",
                        "",
                        "        if (jsonData.length) {",
                        "            let boton = jsonData.getRandom();",
                        "",
                        "            pm.expect(typeof boton.id).to.eq('string');",
                        "            pm.environment.set('idBotonDisponible', boton.id);",
                        "        }",
                        "    });",
                        ""
                      ]
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc6110c0-58a4-40b2-993f-dfe578cb2d94",
                      "type": "text/javascript",
                      "exec": [
                        "let marcas=pm.environment.get('marcas'); ",
                        "pm.variables.set('idMarca',marcas.getRandom());"
                      ]
                    }
                  }
                ],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Marca|:id|botones_disponibles",
                "method_path_multi": "GET|api|Marca|:id|botones_disponibles|1"
              },
              {
                "_": {
                  "postman_id": "fa84cfe3-9d74-4dd2-885f-a39da3832b49"
                },
                "id": "fa84cfe3-9d74-4dd2-885f-a39da3832b49",
                "name": "3_1_2_Lista Productos de una Marca.",
                "request": {
                  "name": "Lista Productos de una Marca.",
                  "description": "Lista Productos de una Marca.",
                  "url": {
                    "path": ["api","Marca",":id","productos"],
                    "host": ["{{apidomain}}"],
                    "query": [
                      {
                        "description": "Opcional, filtro en forma de String JSON encoded",
                        "key": "filter",
                        "value": "{{filter}}"
                      }
                    ],
                    "variable": [
                      {
                        "description": "id Único de Marca",
                        "type": "any",
                        "value": "{{idMarca}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Marca/:id/productos"
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": " ",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1cae827-f71a-4293-9664-9d73fcc5d312",
                      "type": "text/javascript",
                      "exec": [
                        "",
                        "var schema = {",
                        "    \"type\": \"array\",",
                        "    \"items\": {",
                        "        \"$ref\": \"MyDot#/definitions/Producto\"",
                        "    }",
                        "",
                        "};",
                        "",
                        "",
                        "pm.test('JSON response can be decoded', function() {",
                        "",
                        "    var jsonData = pm.response.json();",
                        "    pm.expect(jsonData instanceof Array).to.be.true;",
                        "    ",
                        "    ",
                        "    pm.test('Schema is valid', function() {",
                        "        let validates = tv4.validate(jsonData, schema);",
                        "          if (!validates) {",
                        "            console.log(tv4.error);",
                        "        }",
                        "        pm.expect(validates).to.be.true;",
                        "",
                        "    });",
                        "    ",
                        "    pm.expect(jsonData.length > 0).to.be.true;",
                        "    let producto = jsonData.pop();",
                        "    pm.expect(typeof producto.id === 'number').to.be.true;",
                        "    ",
                        "       ",
                        "    pm.environment.set('idProducto',producto.id);",
                        "});",
                        "",
                        ""
                      ]
                    }
                  }
                ],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Marca|:id|productos",
                "method_path_multi": "GET|api|Marca|:id|productos|1"
              },
              {
                "_": {
                  "postman_id": "78734bf7-b37a-4b5c-85f0-261312e404e6"
                },
                "id": "78734bf7-b37a-4b5c-85f0-261312e404e6",
                "name": "3_1_1_Encuentra una Marca por {{id}} en la BBDD.",
                "request": {
                  "name": "Encuentra una Marca por {{id}} en la BBDD.",
                  "description": "Encuentra una Marca por {{id}} en la BBDD.",
                  "url": {
                    "path": ["api","Marca",":id"],
                    "host": ["{{apidomain}}"],
                    "query": [
                      {
                        "description": "Opcional, filtro en forma de String JSON encoded",
                        "key": "filter",
                        "value": "{{filter}}"
                      }
                    ],
                    "variable": [
                      {
                        "description": "id Único de Marca",
                        "type": "any",
                        "value": "{{idMarca}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/Marca/:id"
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": " ",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|Marca|:id",
                "method_path_multi": "GET|api|Marca|:id|1"
              }
            ],
            "event": [],
            "method_path": "Marca|:id"
          },
          {
            "_": {
              "postman_id": "96162c83-6cd2-45e4-b538-439733d3eb70"
            },
            "id": "96162c83-6cd2-45e4-b538-439733d3eb70",
            "name": "3_1_0_Lista completa de Marcas",
            "request": {
              "name": "Lista completa de Marcas (filtro opcional).",
              "description": "Lista completa de Marcas (filtro opcional).",
              "url": {
                "path": ["api","Marca"],
                "host": ["{{apidomain}}"],
                "query": [
                  {
                    "description": "Opcional, filtro en forma de String JSON encoded",
                    "key": "filter",
                    "value": "{{filter}}"
                  }
                ],
                "variable": [],
                "raw": "{{apidomain}}/api/Marca"
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": " ",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "GET",
              "body": {}
            },
            "responses": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "deb85451-9ff0-4d00-8166-95dac824dcf1",
                  "type": "text/javascript",
                  "exec": [
                    "",
                    "pm.test('Status code is 200', function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "pm.test('Content-Type is application/json', function () {",
                    "    ",
                    "   pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
                    "});",
                    "",
                    "pm.test('JSON response can be decoded and is an array', function () {",
                    "    var jsonData = pm.response.json();",
                    "",
                    "    pm.expect(jsonData instanceof Array).to.be.true;",
                    "    pm.expect(jsonData.length > 0).to.be.true;",
                    "    let marcas=jsonData.map(marca=>marca.id);",
                    "    ",
                    "    pm.environment.set('marcas',marcas);",
                    "    ",
                    "    let idMarca = marcas.getRandom();",
                    "    pm.expect(idMarca).to.be.a('number');",
                    "    ",
                    "       ",
                    "    pm.environment.set('idMarca',idMarca);",
                    "});",
                    "",
                    ""
                  ]
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "GET|api|Marca",
            "method_path_multi": "GET|api|Marca|1"
          }
        ],
        "event": [],
        "method_path": "Marca"
      },
      {
        "id": "6ec8ede1-bfac-4c93-ac46-daacb82371c7",
        "name": "VentanaHoraria",
        "item": [
          {
            "_": {
              "postman_isSubFolder": true
            },
            "id": "45ba003a-7f35-454b-8172-bb6475ec88f8",
            "name": "{id}",
            "item": [
              {
                "_": {
                  "postman_id": "20497f88-fd0c-4d7c-8a7b-ea1dbcdd1b4f"
                },
                "id": "20497f88-fd0c-4d7c-8a7b-ea1dbcdd1b4f",
                "name": "9_1_1_Lista pedidos (propios) dentro de una Ventana Horaria.",
                "request": {
                  "name": "Lista pedidos (propios) dentro de una Ventana Horaria.",
                  "description": "**Deprecation Notice** Dado que hoy Sólo existe una ventana horaria (la de entrega express)\n\nNo hay necesidad de filtrar pedidos por ventana horaria. Este endpoint puede ser descontinuado en futuras versiones.",
                  "url": {
                    "path": ["api","VentanaHoraria",":id","pedidos"],
                    "host": ["{{apidomain}}"],
                    "query": [
                      {
                        "description": "Opcional, filtro en forma de String JSON encoded",
                        "key": "filter",
                        "value": "{{filter}}"
                      }
                    ],
                    "variable": [
                      {
                        "description": "id Único de Ventana Horaria",
                        "type": "any",
                        "value": "{{idVentana}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/VentanaHoraria/:id/pedidos"
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": " ",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|VentanaHoraria|:id|pedidos",
                "method_path_multi": "GET|api|VentanaHoraria|:id|pedidos|1"
              },
              {
                "_": {
                  "postman_id": "69dc55e3-3625-4b03-9440-4fa34222e325"
                },
                "id": "69dc55e3-3625-4b03-9440-4fa34222e325",
                "name": "9_1_0_[Deprecated] Encuentra una Ventana Horaria por {{id}} en la BBDD.",
                "request": {
                  "name": "Encuentra una Ventana Horaria por {{id}} en la BBDD.",
                  "description": "**Deprecation Notice** Dado que hoy Sólo existe una ventana horaria (la de entrega express)\n\nNo hay necesidad de filtrar ventanas por {{id}}. Este endpoint puede ser descontinuado en futuras versiones.",
                  "url": {
                    "path": ["api","VentanaHoraria",":id"],
                    "host": ["{{apidomain}}"],
                    "query": [
                      {
                        "description": "Opcional, filtro en forma de String JSON encoded",
                        "key": "filter",
                        "value": "{{filter}}"
                      }
                    ],
                    "variable": [
                      {
                        "description": "id Único de Ventana Horaria",
                        "type": "any",
                        "value": "{{idVentana}}",
                        "key": "id"
                      }
                    ],
                    "raw": "{{apidomain}}/api/VentanaHoraria/:id"
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "description": " ",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    },
                    {
                      "description": "Access token Oauth 2.0",
                      "key": "Authorization",
                      "value": "{{accessToken}}"
                    }
                  ],
                  "method": "GET",
                  "body": {}
                },
                "responses": [],
                "event": [],
                "protocolProfileBehavior": {
                  "disableBodyPruning": true
                },
                "method_path": "GET|api|VentanaHoraria|:id",
                "method_path_multi": "GET|api|VentanaHoraria|:id|1"
              }
            ],
            "event": [],
            "method_path": "VentanaHoraria|:id"
          },
          {
            "_": {
              "postman_id": "40570058-9db4-4c76-b07a-6bb435b991cc"
            },
            "id": "40570058-9db4-4c76-b07a-6bb435b991cc",
            "name": "4_3_0_Lista completa de Ventanas Horarias (filtro opcional).",
            "request": {
              "name": "Lista completa de Ventanas Horarias (filtro opcional).",
              "description": "**Deprecation notice**\n\nHasta la versión v0.21.0 listaba Franjas horarias de despacho (8:00 a 22:00) y entrega inmediata\n\nDesde la versión v0.22.0 en adelante, sólo existe la ventana express, por lo que este endpoint deja de tener sentido y podría ser removido en un futuro próximo",
              "url": {
                "path": ["api","VentanaHoraria"],
                "host": ["{{apidomain}}"],
                "query": [
                  {
                    "description": "Opcional, filtro en forma de String JSON encoded",
                    "key": "filter",
                    "value": "{{filter}}"
                  }
                ],
                "variable": [],
                "raw": "{{apidomain}}/api/VentanaHoraria"
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                },
                {
                  "description": "Access token Oauth 2.0",
                  "key": "Authorization",
                  "value": "{{accessToken}}"
                }
              ],
              "method": "GET",
              "body": {}
            },
            "responses": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "f0a3bb84-f85f-4f4b-aae2-fbdb310e44f2",
                  "type": "text/javascript",
                  "exec": [
                    "let readOrParse=pm.variables.get('readOrParse') ;",
                    "console.log({readOrParse});",
                    "    pm.test('JSON response can be decoded and is an array', function() {",
                    "        var jsonData = pm.response.json();",
                    "        pm.expect(jsonData instanceof Array).to.be.true;",
                    "",
                    "        if (jsonData.length) {",
                    "            let idVentana = jsonData[0];",
                    "",
                    "            pm.expect(typeof idVentana.id).to.eq('number');",
                    "            pm.environment.set('idProducto', idVentana.id);",
                    "        }",
                    "    });",
                    "//postman.setNextRequest('Envía un mensaje cualquiera al API');"
                  ]
                }
              }
            ],
            "protocolProfileBehavior": {
              "disableBodyPruning": true
            },
            "method_path": "GET|api|VentanaHoraria",
            "method_path_multi": "GET|api|VentanaHoraria|1"
          }
        ],
        "event": [],
        "method_path": "VentanaHoraria"
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "a36c1967-de27-401f-ba70-780caee43416",
          "type": "text/javascript",
          "exec": [
            "",
            "",
            "",
            "",
            "pm.variables.set('expectError', false);",
            "pm.variables.unset('expectHeaders');",
            "Array.prototype.getRandom = function() {",
            "  return this[Math.floor(this.length * (Math.random() * 0.999))];",
            "};",
            "Array.prototype.spliceRandom = function() {",
            "  return this.splice(Math.floor(this.length * (Math.random() * 0.999)), 1)[0];",
            "};",
            "",
            "_.populate = (varname, varspace, obj = {}) => {",
            "  obj[varname] = varspace.has(varname) && varspace.get(varname);",
            "  return obj;",
            "};",
            "_.persist = (varspace, varname, obj = {}) => {",
            "  if (obj[varname] !== undefined) {",
            "    varspace.set(varname, obj[varname]);",
            "  }",
            "};",
            "_.testNonEmptyArray = (keyValueObj = {}) => {",
            "  _.each(keyValueObj, (value, key) => {",
            "    pm.test(`${key} [${value.join(',')}] is an array`, () => {",
            "      pm.expect(Array.isArray(value)).to.be.true;",
            "    });",
            "    pm.test(`${key} (length:${value.length}) is not empty`, () => {",
            "      pm.expect(value.length > 0).to.be.true;",
            "    });",
            "  });",
            "};",
            "_.testSetAndBelongsTo = (mustExist, mustBelong, mustNotBelong = null) => {",
            "  let [mustExistName, mustExistValue] = Object.entries(mustExist)[0],",
            "    [mustBelongName, mustBelongValue] = Object.entries(mustBelong)[0];",
            "",
            "  pm.test(`${mustExistName} (${mustExistValue}) is set`, () => {",
            "    pm.expect(mustExistValue).not.to.eq(undefined);",
            "  });",
            "  pm.test(`${mustBelongName} contains ${mustExistName}`, () => {",
            "    pm.expect(mustBelongValue).to.include(mustExistValue);",
            "  });",
            "",
            "  if (mustNotBelong) {",
            "    let [mustNotBelongName, mustNotBelongValue] = Object.entries(",
            "      mustNotBelong",
            "    )[0];",
            "    pm.test(`${mustNotBelongName} DOES NOT contain ${mustExistName}`, () => {",
            "      pm.expect(mustNotBelongValue).not.to.include(mustExistValue);",
            "    });",
            "  }",
            "};",
            "",
            "const ambiente =",
            "  (pm.iterationData && pm.iterationData.get('ambiente')) ||",
            "  pm.globals.get('ambiente') ||",
            "  pm.collectionVariables.get('ambiente') ||",
            "  'develop';",
            "",
            "const api_test_url =",
            "  pm.iterationData.get('api_test_url') ||",
            "  pm.globals.get('api_test_url') ||",
            "  (ambiente === 'local'",
            "    ? pm.collectionVariables.get('api_local_url')",
            "    : pm.collectionVariables.get('api_dev_url')) ||",
            "  pm.collectionVariables.get('api_test_url') ||",
            "  'https://api-dev.mydot.app';",
            "",
            "pm.collectionVariables.set('api_test_url', api_test_url);",
            "console.log({ambiente, api_test_url});",
            "",
            "pm.variables.set('expected_contentType','application/json');",
            ""
          ]
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "e6661889-d4c9-4d85-b125-aacd05b6b2ff",
          "type": "text/javascript",
          "exec": [
            "",
            "",
            "",
            "pm.environment.set('filter','');",
            "pm.variables.set('filter','');",
            "",
            "",
            "_.testSchema = (data, schema) => {",
            "  pm.test('Schema is valid', function() {",
            "    let isValid = tv4.validate(data, schema);",
            "    if (!isValid) {",
            "      console.warn(tv4.error);",
            "    }",
            "    pm.expect(isValid).to.be.true;",
            "  });",
            "};",
            "",
            "const Boton = pm.environment.get('definition.Boton'),",
            "  Cliente = pm.environment.get('definition.Cliente'),",
            "  Direccion = pm.environment.get('definition.Direccion'),",
            "  Marca = pm.environment.get('definition.Marca'),",
            "  MedioPago = pm.environment.get('definition.MedioPago'),",
            "  Producto = pm.environment.get('definition.Producto'),",
            "  NotificationToken = pm.environment.get('definition.NotificationToken'),",
            "  Pedido = pm.environment.get('definition.Pedido'),",
            "  myDotDefinitions = {",
            "    definitions: {",
            "      Boton,",
            "      Cliente,",
            "      Direccion,",
            "      Marca,",
            "      MedioPago,",
            "      NotificationToken,",
            "      Pedido,",
            "      Producto",
            "    }",
            "  };",
            "",
            "tv4.addSchema('MyDot', myDotDefinitions);",
            "",
            "let clientesObject = pm.environment.get('clientesObject'),",
            "  currentUser = pm.environment.get('currentUser');",
            "",
            "pm.variables.set('filter','');",
            "//console.log('collection test',{clientesObject,currentUser});",
            "",
            "let expectError = pm.variables.get('expectError'),",
            "  expectedHeaders = pm.variables.get('expectHeaders') || [200, 204, 301, 302];",
            "",
            "pm.test(",
            "  'Collection: Response status code is in  [' +",
            "    expectedHeaders.join(', ') +",
            "    ']',",
            "  function() {",
            "    pm.expect(pm.response.code).to.be.oneOf(expectedHeaders);",
            "  }",
            ");",
            "let ensure = expectError === 'any' ? ' ignore wether ' : ' ensure ',",
            "  doesornot = '';",
            "if (expectError === 'any') {",
            "  doesornot = ' or does not ';",
            "} else if (!expectError) {",
            "  doesornot = '  not ';",
            "}",
            "",
            "pm.test(",
            "  'Collection:' + ensure + ' response does ' + doesornot + ' contains error  ',",
            "  () => {",
            "    let responseText = pm.response.text().toLowerCase();",
            "    if (expectError === 'any') {",
            "      pm.expect(true).to.be.true;",
            "    } else if (expectError) {",
            "      pm.expect(responseText).to.include('error');",
            "    } else {",
            "      pm.expect(responseText).to.not.include('error');",
            "    }",
            "  }",
            ");",
            ""
          ]
        }
      }
    ],
    "variable": [
      {
        "id": "12de33f2-38ba-4d9f-9b8a-dbfdd2c551e8",
        "type": "string",
        "value": "develop",
        "key": "ambiente"
      },
      {
        "id": "5999422b-e113-439e-9530-834565b32973",
        "type": "number",
        "value": 3,
        "key": "estadoPedido"
      },
      {
        "id": "fa44f474-8a1d-49dc-9e7d-542c83c72130",
        "type": "string",
        "value": "2",
        "key": "idEstado"
      },
      {
        "id": "0711903f-13f0-4f96-b340-99506333e229",
        "type": "string",
        "value": "https://api-dev.mydot.app",
        "key": "api_test_url"
      },
      {
        "id": "d9b14b33-db95-4746-b9ae-36e73532ec55",
        "type": "string",
        "value": "https://api-dev.mydot.app",
        "key": "api_dev_url"
      },
      {
        "id": "7cae47a6-6365-489f-9bf4-44f15be56655",
        "type": "string",
        "value": "https://apilocal.mydot.app",
        "key": "api_local_url"
      },
      {
        "id": "2e72fb72-919e-4166-903e-4b460b2751f5",
        "type": "any",
        "value": [
          {
            "direccion": "Augusto Leguía Norte, Las Condes, Chile",
            "lat": -33.414699,
            "lng": -70.5979463,
            "numero": "255"
          },
          {
            "direccion": "Avenida Apoquindo 5950, Las Condes, Chile",
            "lat": -33.4090248,
            "lng": -70.5688699,
            "numero": "Piso 15"
          },
          {
            "direccion": "Avenida Apoquindo, Las Condes, Chile",
            "lat": -33.4108191,
            "lng": -70.5742302,
            "numero": "6797"
          },
          {
            "direccion": "Avenida Manquehue Norte 952, Las Condes, Chile",
            "lat": -33.3996363,
            "lng": -70.5716402,
            "numero": "Departamento 902"
          },
          {
            "direccion": "Avenida Presidente Riesco 7187, Las Condes, Chile",
            "lat": -33.3972544,
            "lng": -70.5587748,
            "numero": "7187"
          },
          {
            "direccion": "Benjamin 2940, Las Condes, Chile",
            "lat": -33.4132526,
            "lng": -70.6012773,
            "numero": "Depto 1002"
          },
          {
            "direccion": "Cerro Colorado 6028, Las Condes, Chile",
            "lat": -33.4007323,
            "lng": -70.5719202,
            "numero": "910"
          },
          {
            "direccion": "Cerro El Plomo 5420, Las Condes, Chile",
            "lat": -33.4057396,
            "lng": -70.5749252,
            "numero": "Oficina 1108"
          },
          {
            "direccion": "El Dante 4241, Las Condes, Chile",
            "lat": -33.4119582,
            "lng": -70.5880782,
            "numero": "401"
          },
          {
            "direccion": "Enrique Foster Norte 211, Las Condes, Chile",
            "lat": -33.4134333,
            "lng": -70.5945848,
            "numero": "402"
          },
          {
            "direccion": "Fray Luis de León 12281, Las Condes, Chile",
            "lat": -33.3754726,
            "lng": -70.5174286,
            "numero": "12281"
          },
          {
            "direccion": "Isidora Goyenechea, Las Condes, Chile",
            "lat": -33.4142493,
            "lng": -70.5990251,
            "numero": "3000"
          },
          {
            "direccion": "La Gioconda 4220, Las Condes, Chile",
            "lat": -33.4130798,
            "lng": -70.5874725,
            "numero": "72"
          },
          {
            "direccion": "Los Militares 5225, Las Condes, Chile",
            "lat": -33.4080407,
            "lng": -70.5753435,
            "numero": "605 "
          },
          {
            "direccion": "Luis Matte Larrain 9572",
            "lat": -33.4054435,
            "lng": -70.5360806,
            "numero": "9572"
          },
          {
            "direccion": "Neveria 5357, Las Condes, Chile",
            "lat": -33.4120373,
            "lng": -70.5723819,
            "numero": "5357"
          },
          {
            "direccion": "Rosario Norte 410, Las Condes, Chile",
            "lat": -33.4055874,
            "lng": -70.5725745,
            "numero": "141"
          },
          {
            "direccion": "Warren Smith 107, Las Condes, Chile",
            "lat": -33.4085403,
            "lng": -70.5747858,
            "numero": "Depto 155"
          }
        ],
        "key": "nuevas_direcciones"
      }
    ]
  }
}